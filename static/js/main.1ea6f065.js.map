{"version":3,"sources":["../static/js/main.1ea6f065.js","../webpack/bootstrap 2b8a3ec8fb69c71da33b","../../node_modules/mathjs/lib/utils/object.js","../../node_modules/mathjs/lib/utils/number.js","../../node_modules/mathjs/lib/error/DimensionError.js","../../node_modules/mathjs/lib/utils/index.js","../../node_modules/mathjs/lib/type/matrix/function/matrix.js","../../node_modules/mathjs/lib/utils/customs.js","../node_modules/object-assign/index.js","../node_modules/react/index.js","../node_modules/fbjs/lib/emptyFunction.js","../../node_modules/mathjs/lib/utils/bignumber/isBigNumber.js","../../node_modules/mathjs/lib/type/matrix/Matrix.js","../../node_modules/mathjs/lib/function/relational/equalScalar.js","../../node_modules/mathjs/lib/utils/bignumber/nearlyEqual.js","../../node_modules/mathjs/lib/utils/latex.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm13.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm14.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../node_modules/webpack/buildin/global.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/invariant.js","../../src/Datacube.js","../../node_modules/lodash/_Symbol.js","../../node_modules/mathjs/lib/utils/emitter.js","../../node_modules/mathjs/lib/utils/array.js","../../node_modules/mathjs/lib/utils/string.js","../../node_modules/mathjs/lib/utils/types.js","../../node_modules/mathjs/lib/type/matrix/DenseMatrix.js","../../node_modules/mathjs/lib/function/relational/smaller.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm03.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm07.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm12.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/EventListener.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","../node_modules/fbjs/lib/focusNode.js","../node_modules/fbjs/lib/getActiveElement.js","App.js","../node_modules/babel-runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","logo.svg","sample-data/brain.json","../../src/index.js","../../node_modules/lodash/times.js","../../node_modules/lodash/_baseTimes.js","../../node_modules/lodash/_castFunction.js","../../node_modules/lodash/identity.js","../../node_modules/lodash/toInteger.js","../../node_modules/lodash/toFinite.js","../../node_modules/lodash/toNumber.js","../../node_modules/lodash/isObject.js","../../node_modules/lodash/isSymbol.js","../../node_modules/lodash/_baseGetTag.js","../../node_modules/lodash/_root.js","../../node_modules/lodash/_freeGlobal.js","../../node_modules/lodash/_getRawTag.js","../../node_modules/lodash/_objectToString.js","../../node_modules/lodash/isObjectLike.js","../../node_modules/mathjs/core.js","../../node_modules/mathjs/lib/core/core.js","../../node_modules/mathjs/lib/core/typed.js","../../node_modules/typed-function/typed-function.js","../../node_modules/mathjs/lib/utils/collection/isMatrix.js","../../node_modules/tiny-emitter/index.js","../../node_modules/mathjs/lib/core/function/import.js","../../node_modules/mathjs/lib/error/ArgumentsError.js","../../node_modules/mathjs/lib/core/function/config.js","../../node_modules/mathjs/lib/type/matrix/index.js","../../node_modules/mathjs/lib/utils/bignumber/formatter.js","../../node_modules/mathjs/lib/error/IndexError.js","../../node_modules/mathjs/lib/utils/boolean.js","../../node_modules/mathjs/lib/utils/function.js","../../node_modules/mathjs/lib/type/matrix/SparseMatrix.js","../../node_modules/mathjs/lib/type/matrix/Spa.js","../../node_modules/mathjs/lib/function/arithmetic/add.js","../../node_modules/mathjs/lib/function/arithmetic/addScalar.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm01.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm04.js","../../node_modules/mathjs/lib/type/matrix/utils/algorithm10.js","../../node_modules/mathjs/lib/type/matrix/FibonacciHeap.js","../../node_modules/mathjs/lib/function/relational/larger.js","../../node_modules/mathjs/lib/type/matrix/ImmutableDenseMatrix.js","../../node_modules/mathjs/lib/type/matrix/MatrixIndex.js","../../node_modules/mathjs/lib/type/matrix/Range.js","../../node_modules/mathjs/lib/type/matrix/function/index.js","../../node_modules/mathjs/lib/type/matrix/function/sparse.js","../../node_modules/mathjs/lib/function/matrix/subset.js","../../src/DatacubeView.js","../../node_modules/lodash/isNil.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isBigNumber","clone","x","type","undefined","Array","isArray","map","value","Number","valueOf","String","Boolean","Date","RegExp","TypeError","callback","key","extend","a","b","prop","deepExtend","constructor","deepEqual","len","length","canDefineProperty","e","lazy","fn","_value","_uninitialized","set","traverse","path","obj","names","split","isFactory","factory","zeros","arr","push","isNumber","isInteger","isFinite","Math","round","sign","format","options","Infinity","isNaN","notation","precision","toFixed","toExponential","toEngineering","toPrecision","exponential","replace","digits","arguments","Error","splitNumber","match","toLowerCase","SyntaxError","exponent","parseFloat","dot","indexOf","coefficients","parseInt","rounded","roundDigits","newExp","significandsDiff","abs","concat","expDiff","decimalIdx","decimals","slice","join","decimalVal","str","toString","splitValue","pp","splice","first","shift","lower","upper","pow","unshift","pop","DBL_EPSILON","EPSILON","nearlyEqual","y","epsilon","diff","max","DimensionError","actual","expected","relation","this","message","stack","RangeError","isDimensionError","array","number","string","types","emitter","config","load","typed","_create","data","datatype","Matrix","storage","matrix","","string, string","Array | Matrix, string","Array | Matrix, string, string","toTex","0","1","2","getSafeProperty","isPlainObject","isSafeProperty","isSafeMethod","setSafeProperty","safeNativeProperties","Function","validateSafeMethod","method","__proto__","safeNativeMethods","toLocaleString","toObject","val","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","fromCharCode","test3","forEach","letter","keys","err","target","source","from","symbols","to","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","isMatrix","isString","_storage","create","subset","index","replacement","defaultValue","resize","size","reshape","skipZeros","toArray","util","equalScalar","boolean, boolean","number, number","BigNumber, BigNumber","eq","bigNearlyEqual","Fraction, Fraction","equals","Complex, Complex","Unit, Unit","equalBase","minus","isZero","lte","times","Alpha","alpha","Beta","beta","Gamma","gamma","Delta","delta","Epsilon","varepsilon","Zeta","zeta","Eta","eta","Theta","theta","vartheta","Iota","iota","Kappa","kappa","varkappa","Lambda","lambda","Mu","mu","Nu","nu","Xi","xi","Omicron","omicron","Pi","pi","varpi","Rho","rho","varrho","Sigma","sigma","varsigma","Tau","tau","Upsilon","upsilon","Phi","phi","varphi","Chi","chi","Psi","psi","Omega","omega","true","false","inf","Inf","infinity","oo","lim","operators","transpose","factorial","dotPow","unaryPlus","unaryMinus","bitNot","not","multiply","divide","dotMultiply","dotDivide","mod","add","subtract","leftShift","rightArithShift","rightLogShift","equal","unequal","smaller","larger","smallerEq","largerEq","bitAnd","bitXor","bitOr","and","xor","or","defaultTemplate","units","deg","toSymbol","isUnit","substring","DenseMatrix","algorithm13","adata","_data","asize","_size","adt","_datatype","bdata","bsize","bdt","csize","dt","cf","convert","find","cdata","_iterate","f","level","av","bv","cv","j","algorithm14","inverse","noop","getThen","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_75","_83","_18","_38","doResolve","safeThen","self","onFulfilled","onRejected","resolve","reject","res","handle","Handler","deferred","_47","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_71","done","reason","_44","g","eval","window","emptyObject","invariant","condition","validateFormat","error","args","argIndex","framesToPop","Datacube","opts","math","dims","z","midpoints","floor","xRange","yRange","zRange","core","import","querySlice","axis","yi","root","Symbol","Emitter","mixin","on","off","once","emit","_validate","dim","dimNext","child","_resize","elem","oldLen","newLen","minLen","min","UNINITIALIZED","_reshape","sizes","accumulator","_squeeze","ii","next","_unsqueeze","IndexError","validate","validateIndex","newArray","flatArray","flatten","product","reduce","prev","curr","squeeze","unsqueeze","outer","flat","filter","filterRegExp","regexp","entry","test","separator","identify","count","identifier","generalize","formatArray","looksLikeFraction","formatNumber","formatBigNumber","endsWith","text","search","start","end","fraction","syntax","entries","stringify","escaped","charAt","escape","preprocess","_get","isIndex","isScalar","_getSubmatrix","last","range","dimension","_set","submatrix","sSize","iSize","_fit","_setSubmatrix","dataIndex","subIndex","newSize","changed","isDenseMatrix","index_i","copy","v","me","recurse","toJSON","mathjs","diagonal","k","toNumber","kSuper","kSub","rows","columns","ms","BigNumber","fromJSON","json","swapRows","_swapRows","vi","dense","algorithm03","algorithm07","algorithm12","latex","lt","compare","Matrix, Matrix","Array, Array","Array, Matrix","Matrix, Array","Matrix, any","any, Matrix","Array, any","any, Array","denseMatrix","sparseMatrix","bvalues","_values","bindex","_index","bptr","_ptr","zero","w","mark","k0","k1","xa","xb","wa","wb","_scatter","va","vb","values","ptr","avalues","aindex","aptr","r","enable","disable","enabled","onUnhandled","id","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","clearTimeout","timeout","setTimeout","line","list","some","cls","ReferenceError","global","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","document","createTextNode","observe","characterData","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","normalizeName","normalizeValue","iteratorFor","items","iterator","support","iterable","Headers","headers","append","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","Request","input","url","credentials","mode","referrer","form","trim","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2__index_css__","__WEBPACK_IMPORTED_MODULE_3__App__","render","createElement","getElementById","t","encodeURIComponent","props","context","refs","updater","u","G","$$typeof","E","ref","_owner","=",":","L","K","keyPrefix","func","M","N","I","O","H","P","Q","R","isValidElement","cloneAndReplaceKey","J","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","setState","forceUpdate","isPureReactComponent","A","unstable_isAsyncReactComponent","children","B","Component","PureComponent","AsyncComponent","C","current","D","F","__self","__source","q","h","defaultProps","createFactory","_self","_source","cloneElement","S","Children","only","unstable_AsyncComponent","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","ja","pa","la","oa","qa","plugins","extractEvents","eventTypes","eventNameDispatchConfigs","phasedRegistrationNames","ra","registrationName","registrationNameModules","registrationNameDependencies","dependencies","ua","La","_renderedComponent","Ma","_hostNode","Ha","Na","_flags","Fa","hasCachedChildNodes","_renderedChildren","firstChild","_domID","nextSibling","nodeType","Aa","getAttribute","Ea","Ba","nodeValue","Oa","parentNode","tag","ya","za","Ra","getName","displayName","Za","alternate","effectTag","Xa","Wa","Ta","$a","ab","sibling","stateNode","_hasCaughtError","_caughtError","apply","db","_hasRethrowError","_rethrowError","gb","currentTarget","hb","getNodeFromInstance","eb","invokeGuardedCallbackAndCatchFirstError","mb","ib","getInstanceFromNode","jb","restoreControlledState","getFiberCurrentPropsFromNode","ob","pb","qb","ub","srcElement","correspondingUseElement","tb","targetInst","ancestors","containerInfo","_hostParent","getClosestInstanceFromNode","yb","_handleTopLevel","topLevelType","nativeEvent","Cb","Db","Fb","executeDispatchesInOrder","isPersistent","release","Gb","Hb","Ib","disabled","Lb","canUseDOM","setAttribute","Kb","implementation","hasFeature","Mb","Qb","Ob","Nb","Pb","Vb","Ub","Tb","Sb","fc","ec","dc","cc","jc","rc","aa","tc","selected","yc","xc","dangerouslySetInnerHTML","style","zc","nodeName","Ac","getOwnPropertyDescriptor","getValue","setValue","stopTracking","_valueTracker","Cc","is","Ic","lastChild","Hc","textContent","Rc","Nc","Lc","Mc","ownerDocument","od","hd","gd","pd","hasForceUpdate","callbackList","qd","rd","priorityLevel","sd","updateQueue","md","nd","partialState","isReplace","isForced","isTopLevelUnmount","td","Md","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Nd","zd","childContextTypes","Od","getChildContext","be","memoizedState","memoizedProps","pendingProps","internalContextTag","ae","lastEffect","firstEffect","nextEffect","pendingWorkPriority","Zd","ce","Rd","Qd","Td","Le","Je","Me","Ae","getPublicInstance","_stringRef","da","Ne","Oe","Ie","Map","re","Ge","He","Be","ue","se","De","ve","Ee","we","Ce","xe","Fe","te","Ke","oe","pe","qe","ye","Ca","V","ze","ef","Pa","df","Ze","$e","af","adoptClassInstance","constructClassInstance","Xe","Ye","We","Ve","mountClassInstance","state","ed","enableAsyncSubtreeAPI","Ue","componentWillMount","bf","componentDidMount","Te","updateClassInstance","componentWillReceiveProps","componentDidUpdate","shouldComponentUpdate","ea","componentWillUpdate","Lf","ff","gf","hf","Jf","qf","Kf","Ff","pendingContext","pf","jf","uf","tf","of","yf","shouldSetTextContent","useSyncScheduling","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","enterHydrationState","resetHydrationState","tryToClaimNextHydratableInstance","ld","beginWork","Df","rf","mf","lf","sf","nf","kf","element","Gf","wf","Hf","Ef","xf","Af","zf","Bf","Cf","beginFailedWork","If","eg","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","getRootHostContainer","popHostContext","getHostContext","popHostContainer","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","completeWork","dg","Qf","Rf","Nf","Sf","Of","ag","Tf","cg","bg","Uf","Vf","Wf","Xf","Yf","handler","Mf","Zf","Pf","hg","vg","lg","kg","ng","mg","qg","jg","componentWillUnmount","og","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChild","appendChildToContainer","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitPlacement","ug","rg","commitDeletion","commitWork","commitLifeCycles","sg","tg","pg","commitAttachRef","commitDetachRef","Ag","zg","getChildHostContext","getRootHostContext","wg","xg","yg","resetHostContainer","Hg","Gg","Eg","Bg","Cg","Dg","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","didNotHydrateInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","Fg","hh","ma","T","isScheduled","nextScheduledRoot","zb","Jg","gh","Lg","nc","oc","Hd","na","Og","U","Kg","Tg","Ui","Yg","ah","Ph","Zg","$g","Ug","Wg","vf","Vg","Xg","Id","Mh","Jd","Vi","Gd","Nh","Oh","eh","componentDidCatch","componentStack","bh","Ja","Ng","Lh","fh","Mg","Rg","Ab","timeRemaining","Pg","Qg","Da","Kd","Ya","Ig","ch","dh","Bb","$f","Ka","Set","fe","ge","he","ie","_debugOwner","_debugSource","fileName","lineNumber","componentName","errorBoundary","errorBoundaryFound","errorBoundaryName","willRetry","Wi","pc","W","Yi","Sg","scheduleDeferredCallback","prepareForCommit","resetAfterCommit","scheduleUpdate","getPriorityContext","batchedUpdates","unbatchedUpdates","flushSync","deferredUpdates","ih","jh","_processChildContext","_context","sh","th","rh","offset","vh","uh","documentElement","Bh","Ch","Dh","Ah","Fh","Eh","Gh","Jh","Ih","dispatchConfig","_dispatchListeners","_dispatchInstances","Kh","Hh","traverseTwoPhase","_targetInst","Qh","getParentInstance","Rh","Sh","Y","Interface","isDefaultPrevented","defaultPrevented","returnValue","ca","isPropagationStopped","Zh","eventPool","$h","destructor","Yh","getPooled","ai","bi","mi","ci","keyCode","ni","detail","which","li","ji","qi","oi","di","Vh","getData","reset","ctrlKey","altKey","metaKey","char","ti","si","ui","change","nb","enqueueStateRestore","Th","accumulateTwoPhaseDispatches","Jb","enqueueEvents","processEventQueue","zi","Bc","updateValueIfChanged","Ai","Ci","wi","detachEvent","Di","propertyName","sb","Ei","attachEvent","Fi","Gi","Hi","Ji","Li","getModifierState","Ki","Mi","Ni","cj","aj","Ti","ia","zh","hasSelectionCapabilities","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","$i","Si","select","Zi","ej","fj","gj","hj","charCode","kj","lj","mj","nj","oj","Bj","ak","Dj","Gj","Hj","Fj","bk","hasAttribute","Ij","ck","_reactRootContainer","Xj","updateContainer","createContainer","getPublicRootInstance","dk","ne","createPortal","ba","fa","ha","fb","ka","Namespaces","html","mathml","svg","getIntrinsicNamespace","getChildNamespace","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","sa","ta","autoFocus","defaultChecked","innerHTML","suppressContentEditableWarning","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","HAS_STRING_BOOLEAN_VALUE","injectDOMPropertyConfig","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMMutationMethods","properties","attributeName","attributeNamespace","mutationMethod","mustUseProperty","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","hasStringBooleanValue","ID_ATTRIBUTE_NAME","ROOT_ATTRIBUTE_NAME","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","shouldSetAttribute","isReservedProp","shouldAttributeAcceptBooleanValue","getPropertyInfo","injection","IndeterminateComponent","FunctionalComponent","ClassComponent","HostRoot","HostPortal","HostComponent","HostText","CoroutineComponent","CoroutineHandlerPhase","YieldComponent","Fragment","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","Ga","random","Ia","precacheChildNodes","precacheNode","uncacheNode","precacheFiberNode","updateFiberProps","remove","_reactInternalFiber","Qa","NoEffect","PerformedWork","Placement","Update","PlacementAndUpdate","Deletion","ContentReset","Callback","Err","Ref","Sa","Ua","Va","bb","isFiberMounted","findCurrentFiberUsingSlowPath","findCurrentHostFiber","findCurrentHostFiberWithNoPortals","injectErrorUtils","invokeGuardedCallback","hasCaughtError","clearCaughtError","rethrowCaughtError","isEndish","isMoveish","isStartish","executeDirectDispatch","executeDispatchesInOrderStopAtTrue","hasDispatches","injectComponentTree","kb","lb","injectFiberControlledHostComponent","restoreStateIfNeeded","rb","injectStackBatchedUpdates","injectFiberBatchedUpdates","_enabled","setHandleTopLevel","setEnabled","isEnabled","trapBubbledEvent","listen","dispatchEvent","trapCapturedEvent","capture","Eb","getListener","_currentElement","_rootNodeID","animationend","animationiteration","animationstart","transitionend","animation","transition","Rb","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCancel","topCanPlay","topCanPlayThrough","topChange","topClick","topClose","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoad","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","handleTopLevel","listenTo","isListeningToAllDependencies","Wb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Xb","Yb","isUnitlessNumber","shorthandPropertyExpansions","background","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","font","fontStyle","fontVariant","fontSize","fontFamily","outline","outlineWidth","outlineStyle","outlineColor","Zb","$b","ac","Ec","bc","createDangerousStringForStyles","setValueForStyles","setProperty","gc","setAttributeForID","setAttributeForRoot","getValueForProperty","getValueForAttribute","setValueForProperty","deleteValueForProperty","setAttributeNS","setValueForAttribute","removeAttribute","deleteValueForAttribute","hc","ic","ReactDebugCurrentFrame","kc","phase","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiberOwnerName","getCurrentFiberStackAddendum","lc","mc","getHostProps","checked","step","_wrapperState","initialValue","initialChecked","initWrapperState","controlled","updateWrapper","postMountWrapper","querySelectorAll","qc","sc","validateProps","uc","wasMultiple","multiple","postUpdateWrapper","vc","wc","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","_getTrackerFromNode","Dc","Fc","MSApp","execUnsafeLocalFunction","namespaceURI","Gc","exec","charCodeAt","Jc","Oc","Pc","Qc","Sc","createElementNS","setInitialProperties","__html","onClick","onclick","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","Tc","requestIdleCallback","Uc","Vc","Wc","Xc","Yc","Zc","$c","ad","performance","now","bd","addEventListener","cd","postMessage","requestAnimationFrame","je","ke","dd","rIC","NoWork","SynchronousPriority","TaskPriority","HighPriority","LowPriority","OffscreenPriority","fd","jd","kd","ud","addUpdate","addReplaceUpdate","addForceUpdate","getUpdatePriority","addTopLevelUpdate","beginUpdateQueue","commitCallbacks","vd","wd","xd","createCursor","isEmpty","yd","Ad","Bd","Cd","Dd","Ed","Fd","Ld","getUnmaskedContext","cacheContext","getMaskedContext","contextTypes","hasContextChanged","isContextConsumer","isContextProvider","popContextProvider","popTopLevelContextObject","pushTopLevelContextObject","cursor","processChildContext","pushContextProvider","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","resetContext","findCurrentUnmaskedContext","Pd","NoContext","AsyncUpdates","Sd","Ud","Vd","Wd","Xd","Yd","$d","de","createWorkInProgress","createHostRootFiber","createFiberFromElement","createFiberFromFragment","createFiberFromText","createFiberFromElementType","createFiberFromHostInstanceForDeletion","createFiberFromCoroutine","createFiberFromYield","createFiberFromPortal","largerPriority","ee","le","createCoroutine","createYield","isCoroutine","isYield","REACT_YIELD_TYPE","REACT_COROUTINE_TYPE","isPortal","REACT_PORTAL_TYPE","Pe","Qe","Re","Se","reconcileChildFibers","reconcileChildFibersInPlace","mountChildFibersInPlace","cloneChildFibers","fg","gg","ig","injectInternals","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","onCommitRoot","onCommitUnmount","_injectFiber","kh","lh","mh","nh","oh","ph","qh","wh","getOffsets","rangeCount","getRangeAt","startContainer","endContainer","cloneRange","selectNodeContents","setEnd","startOffset","endOffset","createRange","setStart","collapsed","setOffsets","removeAllRanges","addRange","xh","yh","contentEditable","getSelectionInformation","focusedElem","selectionRange","restoreSelection","setSelection","left","scrollLeft","top","scrollTop","_injectStack","isAncestor","getLowestCommonAncestor","traverseEnterLeave","accumulateTwoPhaseDispatchesSkipTarget","accumulateDirectDispatches","accumulateEnterLeaveDispatches","X","_root","_startText","_fallbackText","Uh","initialize","getText","Wh","Xh","eventPhase","bubbles","cancelable","timeStamp","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","augmentClass","ei","documentMode","fi","gi","opera","hi","ki","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","ri","color","date","datetime","datetime-local","email","month","password","tel","time","week","Bi","Ii","_isInputEventSupported","defaultView","parentWindow","Alt","Control","Meta","Shift","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","Oi","mouseEnter","mouseLeave","Qi","Ri","bj","dj","animationName","elapsedTime","pseudoElement","clipboardData","ij","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","jj","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","repeat","locale","dataTransfer","touches","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","pj","qj","rj","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","sj","Z","tj","uj","vj","wj","allowFullScreen","allowTransparency","async","autoPlay","cols","controls","default","defer","download","draggable","formNoValidate","hidden","loop","muted","noValidate","playsInline","readOnly","required","reversed","rowSpan","scoped","seamless","span","spellCheck","itemScope","acceptCharset","className","htmlFor","httpEquiv","validity","badInput","activeElement","xj","yj","xlink","xml","zj","autoReverse","externalResourcesRequired","preserveAlpha","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","Aj","Cj","Ej","Jj","Kj","Lj","Mj","Nj","Oj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","findHostInstance","Yj","Zj","findHostInstanceWithNoPortals","tagName","focus","ek","hydrate","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","findDOMNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","findFiberByHostInstance","findHostInstanceByFiber","bundleType","rendererPackageName","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","EventListener","eventType","removeEventListener","registerDefault","shallowEqual","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","isNode","doc","Node","getActiveElement","_asyncToGenerator","gen","info","_classCallCheck","instance","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","writable","setPrototypeOf","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_2__logo_svg__","__WEBPACK_IMPORTED_MODULE_2__logo_svg___default","_createClass","defineProperties","descriptor","protoProps","staticProps","dummyBrainJson","_require","DatacubeView","App","_Component","getPrototypeOf","_ref","_callee","views","animationQueue","renderAllViews","_this2","wrap","otherView","position","sent","matchCanvasToData","onMouseMove","stop","_this3","src","width","alt","float","height","title","hadRuntime","regeneratorRuntime","oldRuntime","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","GenStateSuspendedYield","return","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","iteratorSymbol","Op","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","isGeneratorFunction","genFun","ctor","awrap","iter","reverse","skipTempReset","rootEntry","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","iteratee","toInteger","MAX_SAFE_INTEGER","MAX_ARRAY_LENGTH","nativeMin","castFunction","baseTimes","identity","toFinite","remainder","INFINITY","MAX_INTEGER","isSymbol","NAN","isObject","other","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","isObjectLike","baseGetTag","symbolTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","freeGlobal","freeSelf","isOwn","unmasked","nativeObjectToString","objectProto","typedFactory","importFactory","configFactory","factories","_config","instances","expression","transform","mathWithTransform","predictable","randomSeed","typedFunction","createTyped","isComplex","Complex","isFraction","Fraction","isSparseMatrix","isRange","isBoolean","isResultSet","isHelp","isFunction","isDate","isRegExp","isNull","isUndefined","isAccessorNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","conversions","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","getTypeTest","hint","fns","signatures","createError","argCount","actualType","getTypeOf","_expected","_fn","anyType","Refs","categories","Param","varArgs","_types","_varArgs","substr","Signature","params","_params","signature","childs","fallThrough","parseSignatures","rawSignatures","ignore","expanded","expand","signature_i","existing","cmp","sort","filterAnyTypeSignatures","filtered","mapSignatures","normalized","hasConversions","parseTree","anys","nodeSignature","overlapping","matchingAnys","paramsStartWith","getArgs","_typed","_signatures","code","_name","_args","maxParams","toCode","item","conversion","category","cat","matches","toConversion","newParam","aLast","bLast","prefix","comment","getTests","tests","allTypes","exactTypes","conversion_i","_innerCode","exceptions","_exceptions","string, Object","...Function","addType","addConversion","ctx","listener","_","evtArr","evts","liveEvents","math_import","num","ArgumentsError","_importFactory","isSupportedType","_import","silent","_wrap","isTypedFunction","override","_importTransform","allowedInExpressions","wrapper","existingTransform","namespace","resolver","factoryAllowedInExpressions","unsafe","docs","chain","isArgumentsError","validateOption","MATRIX","NUMBER","changes","findIndex","gt","toExpNeg","toExpPos","log","LN10","gte","toSignificantDigits","isIndexError","memoize","hasher","cache","hash","maxArgumentCount","callWithRightArgumentCount","SparseMatrix","_createFromMatrix","_createFromArray","row","density","_getsubset","_setsubset","idx","kk","mvalues","mindex","mptr","pv","x0","y0","_getValueIndex","_remove","_insert","bottom","ins","colIndex","rowIndex","r1","c1","_map","minRow","maxRow","minColumn","maxColumn","_toArray","_forEachRow","kx","ky","vx","vy","sparse","Spa","_heap","FibonacciHeap","isSpa","insert","accumulate","heap","nodes","extractMinimum","swap","nodei","nodej","addScalar","algorithm01","algorithm04","algorithm10","any, any","any, any, ...any","rest","plus","fixPrefix","cvalues","cindex","cptr","_minimum","oneOverLogPhi","sqrt","isFibonacciHeap","degree","minimum","right","clear","numberOfChildren","tempRight","parent","_findMinimumNode","_decreaseKey","_cut","_cascadingCut","_linkNodes","arraySize","numRoots","temp","ImmutableDenseMatrix","_min","_max","isImmutableDenseMatrix","Index","ranges","_dimensions","_isScalar","_createImmutableMatrix","isObjectProperty","getObjectProperty","strings","dimensions","Range","nums","ceil","...number | string | BigNumber | Range | Array | Matrix","Array | Matrix","_getSubstring","strLen","_setSubstring","Array, Index","Matrix, Index","Object, Index","_getObjectProperty","string, Index","Array, Index, any","Array, Index, any, any","Matrix, Index, any","Matrix, Index, any, any","string, Index, string","string, Index, string, string","Object, Index, any","_setObjectProperty","updated","datacube","getContext","mousemove","isNil","constrainAxisPosition","requested","evt","offsetX","offsetY","image","createImageData","pixelRgbaIndex","pixelValue","putImageData"],"mappings":"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","file":"static/js/main.1ea6f065.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/datacube-image-slicer/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 31);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isBigNumber = __webpack_require__(9);\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexports.clone = function clone(x) {\n  var type = typeof x;\n\n  // immutable primitive types\n  if (type === 'number' || type === 'string' || type === 'boolean' ||\n      x === null || x === undefined) {\n    return x;\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Number)    return new Number(x.valueOf());\n  if (x instanceof String)    return new String(x.valueOf());\n  if (x instanceof Boolean)   return new Boolean(x.valueOf());\n  if (x instanceof Date)      return new Date(x.valueOf());\n  if (isBigNumber(x))         return x; // bignumbers are immutable\n  if (x instanceof RegExp)  throw new TypeError('Cannot clone ' + x);  // TODO: clone a RegExp\n\n  // object\n  return exports.map(x, clone);\n};\n\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\nexports.map = function(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (exports.hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexports.extend = function(a, b) {\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n  return a;\n};\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexports.deepExtend = function deepExtend (a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        }\n        else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n  return a;\n};\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexports.deepEqual = function deepEqual (a, b) {\n  var prop, i, len;\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length != b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!exports.deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    for (prop in b) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return (typeof a === typeof b) && (a == b);\n  }\n};\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexports.canDefineProperty = function () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', { get: function () {} });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n * On older browsers (<IE8), the function will fall back to direct evaluation\n * of the properties value.\n * @param {Object} object   Object where to add the property\n * @param {string} prop     Property name\n * @param {Function} fn     Function returning the property value. Called\n *                          without arguments.\n */\nexports.lazy = function (object, prop, fn) {\n  if (exports.canDefineProperty()) {\n    var _uninitialized = true;\n    var _value;\n    Object.defineProperty(object, prop, {\n      get: function () {\n        if (_uninitialized) {\n          _value = fn();\n          _uninitialized = false;\n        }\n        return _value;\n      },\n\n      set: function (value) {\n        _value = value;\n        _uninitialized = false;\n      },\n\n      configurable: true,\n      enumerable: true\n    });\n  }\n  else {\n    // fall back to immediate evaluation\n    object[prop] = fn();\n  }\n};\n\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\nexports.traverse = function(object, path) {\n  var obj = object;\n\n  if (path) {\n    var names = path.split('.');\n    for (var i = 0; i < names.length; i++) {\n      var name = names[i];\n      if (!(name in obj)) {\n        obj[name] = {};\n      }\n      obj = obj[name];\n    }\n  }\n\n  return obj;\n};\n\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\nexports.hasOwnProperty = function (object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\nexports.isFactory = function (object) {\n  return object && typeof object.factory === 'function';\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Test whether value is a number\n * @param {*} value\n * @return {boolean} isNumber\n */\nexports.isNumber = function(value) {\n  return typeof value === 'number';\n};\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\nexports.isInteger = function(value) {\n  return isFinite(value)\n      ? (value == Math.round(value))\n      : false;\n  // Note: we use ==, not ===, as we can have Booleans as well\n};\n\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {*}\n */\nexports.sign = Math.sign || function(x) {\n  if (x > 0) {\n    return 1;\n  }\n  else if (x < 0) {\n    return -1;\n  }\n  else {\n    return 0;\n  }\n};\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {number} lower and {number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'});        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexports.format = function(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity';\n  }\n  else if (value === -Infinity) {\n    return '-Infinity';\n  }\n  else if (isNaN(value)) {\n    return 'NaN';\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (exports.isNumber(options)) {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'engineering':\n      return exports.toEngineering(value, precision);\n\n    case 'auto':\n      return exports\n          .toPrecision(value, precision, options && options.exponential)\n\n          // remove trailing zeros after the decimal point\n          .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n            var digits = arguments[2];\n            var e = arguments[4];\n            return (digits !== '.') ? digits + e : e;\n          });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\nexports.splitNumber = function (value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign         = match[1];\n  var digits       = match[2];\n  var exponent     = parseFloat(match[4] || '0');\n\n  var dot = digits.indexOf('.');\n  exponent += (dot !== -1) ? (dot - 1) : (digits.length - 1);\n\n  var coefficients = digits\n      .replace('.', '')  // remove the dot (must be removed before removing leading zeros)\n      .replace(/^0*/, function (zeros) {\n        // remove leading zeros, add their count to the exponent\n        exponent -= zeros.length;\n        return '';\n      })\n      .replace(/0*$/, '') // remove trailing zeros\n      .split('')\n      .map(function (d) {\n        return parseInt(d);\n      });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n};\n\n\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toEngineering = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n  \n  var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n\n  var e = rounded.exponent;\n  var c = rounded.coefficients;\n\n  // find nearest lower multiple of 3 for exponent\n  var newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3));\n\n  // concatenate coefficients with necessary zeros\n  var significandsDiff = e >= 0 ? e : Math.abs(newExp);\n\n  // add zeros if necessary (for ex: 1e+8)\n  if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n\n  // find difference in exponents\n  var expDiff = Math.abs(e - newExp);\n\n  var decimalIdx = 1;\n\n  // push decimal index over by expDiff times\n  while (--expDiff >= 0) decimalIdx++;\n\n  // if all coefficient values are zero after the decimal point, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = decimals.match(/[1-9]/) ? ('.' + decimals) : '';\n\n  var str = c.slice(0, decimalIdx).join('') +\n      decimalVal +\n      'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n};\n\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = exports.splitNumber(value)\n  var rounded = exports.roundDigits(splitValue, splitValue.exponent + 1 + (precision || 0));\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n\n  // append zeros if needed\n  var pp = p + (precision || 0);\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  }\n\n  // insert a dot if needed\n  if (precision) {\n    c.splice(p, 0, (p === 0) ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nexports.toExponential = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // round if needed, else create a clone\n  var split = exports.splitNumber(value)\n  var rounded = precision ? exports.roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent;\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? ('.' + c.join('')) : '') +\n      'e' + (e >= 0 ? '+' : '') + e;\n}\n\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lower: number | undefined, upper: number | undefined}} [options]\n *                                       By default:\n *                                         lower = 1e-3 (excl)\n *                                         upper = 1e+5 (incl)\n * @return {string}\n */\nexports.toPrecision = function (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // determine lower and upper bound for exponential notation.\n  var lower = (options && options.lower !== undefined) ? options.lower : 1e-3;\n  var upper = (options && options.upper !== undefined) ? options.upper : 1e+5;\n\n  var split = exports.splitNumber(value)\n  var abs = Math.abs(Math.pow(10, split.exponent));\n  if (abs < lower || abs >= upper) {\n    // exponential notation\n    return exports.toExponential(value, precision);\n  }\n  else {\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent;\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 +\n        (c.length < precision ? precision - c.length : 0)));\n\n    // prepend zeros\n    c = zeros(-e).concat(c);\n\n    var dot = e > 0 ? e : 0;\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n}\n\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\nexports.roundDigits = function (split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  }\n  var c = rounded.coefficients;\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n      while (c[i] === 10) {\n        c.pop();\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n};\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n  return arr;\n}\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\nexports.digits = function(value) {\n  return value\n      .toExponential()\n      .replace(/e.*$/, '')          // remove exponential notation\n      .replace( /^0\\.?0*|\\./, '')   // remove decimal point and leading zeros\n      .length\n};\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\nexports.nearlyEqual = function(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) {\n    return x == y;\n  }\n\n  // use \"==\" operator, handles infinities\n  if (x == y) {\n    return true;\n  }\n\n  // NaN\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  }\n\n  // at this point x and y should be finite\n  if(isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n    if (diff < exports.DBL_EPSILON) {\n      return true;\n    }\n    else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nfunction DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual   = actual;\n  this.expected = expected;\n  this.relation = relation;\n\n  this.message = 'Dimension mismatch (' +\n      (Array.isArray(actual) ? ('[' + actual.join(', ') + ']') : actual) +\n      ' ' + (this.relation || '!=') + ' ' +\n      (Array.isArray(expected) ? ('[' + expected.join(', ') + ']') : expected) +\n      ')';\n\n  this.stack = (new Error()).stack;\n}\n\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;\n\nmodule.exports = DimensionError;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.array = __webpack_require__(23);\nexports['boolean'] = __webpack_require__(84);\nexports['function'] = __webpack_require__(85);\nexports.number = __webpack_require__(1);\nexports.object = __webpack_require__(0);\nexports.string = __webpack_require__(24);\nexports.types = __webpack_require__(25);\nexports.emitter = __webpack_require__(22);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    var m = math.matrix([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  var matrix = typed('matrix', {\n    '': function () {\n      return _create([]);\n    },\n\n    'string': function (format) {\n      return _create([], format);\n    },\n    \n    'string, string': function (format, datatype) {\n      return _create([], format, datatype);\n    },\n\n    'Array': function (data) {\n      return _create(data);\n    },\n      \n    'Matrix': function (data) {\n      return _create(data, data.storage());\n    },\n    \n    'Array | Matrix, string': _create,\n    \n    'Array | Matrix, string, string': _create\n  });\n\n  matrix.toTex = {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  };\n\n  return matrix;\n\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    var M = type.Matrix.storage(format || 'default');\n\n    // create instance\n    return new M(data, datatype);\n  }\n}\n\nexports.name = 'matrix';\nexports.factory = factory;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = __webpack_require__(0).hasOwnProperty;\n\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\nfunction getSafeProperty (object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\nfunction setSafeProperty (object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop] = value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\nfunction isSafeProperty (object, prop) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g length\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\nfunction validateSafeMethod (object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\nfunction isSafeMethod (object, method) {\n  if (!object || typeof object[method] !== 'function') {\n    return false;\n  }\n  // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n  if (hasOwnProperty(object, method) &&\n      (object.__proto__ && (method in object.__proto__))) {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g toString\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\nfunction isPlainObject (object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\n\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\n\nexports.getSafeProperty = getSafeProperty;\nexports.setSafeProperty = setSafeProperty;\nexports.isSafeProperty = isSafeProperty;\nexports.validateSafeMethod = validateSafeMethod;\nexports.isSafeMethod = isSafeMethod;\nexports.isPlainObject = isPlainObject;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(38);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/**\n * Test whether a value is a BigNumber\n * @param {*} x\n * @return {boolean}\n */\nmodule.exports = function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber || false\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(3);\n\nvar string = util.string;\n\nvar isString = string.isString;\n\nfunction factory (type, config, load, typed) {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *     var matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *     var matrix = math.matrix([[1, 2], [3, 4]]);\n   *     matix.size();              // [2, 2]\n   *     matrix.resize([3, 2], 5);\n   *     matrix.valueOf();          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n  Matrix.storage = function (format) {\n    // check storage format is a string\n    if (!isString(format)) {\n      throw new TypeError('format must be a string value');\n    }\n\n    // get storage format constructor\n    var constructor = Matrix._storage[format];\n    if (!constructor) {\n      throw new SyntaxError('Unsupported matrix storage format: ' + format);\n    }\n\n    // return storage constructor\n    return constructor;\n  };\n\n  // a map with all constructors for all storage types\n  Matrix._storage = {};\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  \n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n  Matrix.prototype.size = function() {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n   \n  // exports\n  return Matrix;\n}\n\nexports.name = 'Matrix';\nexports.path = 'type';\nexports.factory = factory;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar nearlyEqual = __webpack_require__(1).nearlyEqual;\nvar bigNearlyEqual = __webpack_require__(12);\n\nfunction factory (type, config, load, typed) {\n  \n  /**\n   * Test whether two values are equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  var equalScalar = typed('equalScalar', {\n\n    'boolean, boolean': function (x, y) {\n      return x === y;\n    },\n\n    'number, number': function (x, y) {\n      return x === y || nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.equals(y);\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.equals(y);\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return equalScalar(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x === y;\n    }\n  });\n  \n  return equalScalar;\n}\n\nexports.factory = factory;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nmodule.exports = function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) {\n    return x.eq(y);\n  }\n\n\n  // use \"==\" operator, handles infinities\n  if (x.eq(y)) {\n    return true;\n  }\n\n  // NaN\n  if (x.isNaN() || y.isNaN()) {\n    return false;\n  }\n\n  // at this point x and y should be finite\n  if(x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = x.minus(y).abs();\n    if (diff.isZero()) {\n      return true;\n    }\n    else {\n      // use relative error\n      var max = x.constructor.max(x.abs(), y.abs());\n      return diff.lte(max.times(epsilon));\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.symbols = {\n  // GREEK LETTERS\n  Alpha: 'A',     alpha: '\\\\alpha',\n  Beta: 'B',      beta: '\\\\beta',\n  Gamma: '\\\\Gamma',    gamma: '\\\\gamma',\n  Delta: '\\\\Delta',    delta: '\\\\delta',\n  Epsilon: 'E',   epsilon: '\\\\epsilon',  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',      zeta: '\\\\zeta',\n  Eta: 'H',       eta: '\\\\eta',\n  Theta: '\\\\Theta',    theta: '\\\\theta',    vartheta: '\\\\vartheta',\n  Iota: 'I',      iota: '\\\\iota',\n  Kappa: 'K',     kappa: '\\\\kappa',    varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',   lambda: '\\\\lambda',\n  Mu: 'M',        mu: '\\\\mu',\n  Nu: 'N',        nu: '\\\\nu',\n  Xi: '\\\\Xi',       xi: '\\\\xi',\n  Omicron: 'O',   omicron: 'o',\n  Pi: '\\\\Pi',       pi: '\\\\pi',       varpi: '\\\\varpi',\n  Rho: 'P',       rho: '\\\\rho',      varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',    sigma: '\\\\sigma',    varsigma: '\\\\varsigma',\n  Tau: 'T',       tau: '\\\\tau',\n  Upsilon: '\\\\Upsilon',  upsilon: '\\\\upsilon',\n  Phi: '\\\\Phi',      phi: '\\\\phi',      varphi: '\\\\varphi',\n  Chi: 'X',       chi: '\\\\chi',\n  Psi: '\\\\Psi',      psi: '\\\\psi',\n  Omega: '\\\\Omega',    omega: '\\\\omega',\n  //logic\n  'true': '\\\\mathrm{True}',\n  'false': '\\\\mathrm{False}',\n  //other\n  i: 'i', //TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  'undefined': '\\\\mathbf{?}'\n};\n\nexports.operators = {\n  'transpose': '^\\\\top',\n  'factorial': '!',\n  'pow': '^',\n  'dotPow': '.^\\\\wedge', //TODO find ideal solution\n  'unaryPlus': '+',\n  'unaryMinus': '-',\n  'bitNot': '~', //TODO find ideal solution\n  'not': '\\\\neg',\n  'multiply': '\\\\cdot',\n  'divide': '\\\\frac', //TODO how to handle that properly?\n  'dotMultiply': '.\\\\cdot', //TODO find ideal solution\n  'dotDivide': '.:', //TODO find ideal solution\n  'mod': '\\\\mod',\n  'add': '+',\n  'subtract': '-',\n  'to': '\\\\rightarrow',\n  'leftShift': '<<',\n  'rightArithShift': '>>',\n  'rightLogShift': '>>>',\n  'equal': '=',\n  'unequal': '\\\\neq',\n  'smaller': '<',\n  'larger': '>',\n  'smallerEq': '\\\\leq',\n  'largerEq': '\\\\geq',\n  'bitAnd': '\\\\&',\n  'bitXor': '\\\\underline{|}',\n  'bitOr': '|',\n  'and': '\\\\wedge',\n  'xor': '\\\\veebar',\n  'or': '\\\\vee'\n};\n\nexports.defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\n\nvar units = {\n  deg: '^\\\\circ'\n};\n\n//@param {string} name\n//@param {boolean} isUnit\nexports.toSymbol = function (name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n  if (isUnit) {\n    if (units.hasOwnProperty(name)) {\n      return units[name];\n    }\n    return '\\\\mathrm{' + name + '}';\n  }\n\n  if (exports.symbols.hasOwnProperty(name)) {\n    return exports.symbols[name];\n  }\n  else if (name.indexOf('_') !== -1) {\n    //symbol with index (eg. alpha_1)\n    var index = name.indexOf('_');\n    return exports.toSymbol(name.substring(0, index)) + '_{'\n      + exports.toSymbol(name.substring(index + 1)) + '}';\n  }\n  return name;\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(3);\nvar DimensionError = __webpack_require__(2);\n\nvar string = util.string,\n    isString = string.isString;\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  var algorithm13 = function (a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b arrays\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // c arrays\n    var csize = [];\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // validate each one of the dimension sizes\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s])\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      // update dimension in c\n      csize[s] = asize[s];\n    }\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // populate cdata, iterate through dimensions\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : [];\n    \n    // c matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  };\n  \n  // recursive function\n  var _iterate = function (f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    }\n    else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n    return cv;\n  };\n  \n  return algorithm13;\n}\n\nexports.name = 'algorithm13';\nexports.factory = factory;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar clone = __webpack_require__(0).clone;\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  var algorithm14 = function (a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    \n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n    \n    // populate cdata, iterate through dimensions\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : [];\n\n    // c matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    });\n  };\n  \n  // recursive function\n  var _iterate = function (f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    }\n    else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n    return cv;\n  };\n\n  return algorithm14;\n}\n\nexports.name = 'algorithm14';\nexports.factory = factory;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(34);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar times = __webpack_require__(57)\nvar core = __webpack_require__(72)\nvar math = core.create()\nmath.import(__webpack_require__(81))\nmath.import(__webpack_require__(100))\n\n/**\n * @typedef DatacubeOptions\n * @property {Number[][][]} data\n */\n\n /**\n * @memberOf Datacube\n * @property {mathjs.Matrix} data\n * @property {Object<string, Number>} midpoints\n * @property {Object<string, Number>} dims lengths of each dimension\n * @property {Number[]} xRange\n * @property {Number[]} yRange\n * @property {Number[]} zRange\n */\n\n /**\n * @class Datacube\n * @param {DatacubeOptions} opts\n */\nfunction Datacube (opts) {\n  this.data = math.matrix(opts.data)\n  var size = this.data.size()\n  this.dims = {\n    x: size[0],\n    y: size[1],\n    z: size[2]\n  }\n  this.midpoints = {\n    x: Math.floor(this.dims.x / 2),\n    y: Math.floor(this.dims.y / 2),\n    z: Math.floor(this.dims.z / 2)\n  }\n  this.xRange = times(this.dims.x)\n  this.yRange = times(this.dims.y)\n  this.zRange = times(this.dims.z)\n}\n\n/**\n * Query a planar slice at the provided point in the remaining axies\n * @param {Object} opts\n * @param {string} opts.axis axis, x, y, or z\n * @param {Number} opts.value\n */\nDatacube.prototype.querySlice = function (opts) {\n  var index\n  if (opts.axis === 'x') {\n    index = math.index(opts.value, this.yRange, this.zRange)\n    return math.subset(this.data, index).toArray()[0]\n  } else if (opts.axis === 'y') {\n    index = math.index(this.xRange, opts.value, this.zRange)\n    return math.subset(this.data, index).toArray()\n    .map(function (y, xi) { return y[0] })\n  } else if (opts.axis === 'z') {\n    index = math.index(this.xRange, this.yRange, opts.value)\n    return math.subset(this.data, index).toArray()\n    .map(function (yi, xi) { return yi.map(function (z) { return z[0] }) })\n  }\n  throw new Error('invalid axis')\n}\n\nmodule.exports = Datacube\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(67);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(77);\n\n/**\n * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n * @param {Object} obj\n * @return {Object} obj\n */\nexports.mixin = function (obj) {\n  // create event emitter\n  var emitter = new Emitter();\n\n  // bind methods to obj (we don't want to expose the emitter.e Array...)\n  obj.on   = emitter.on.bind(emitter);\n  obj.off  = emitter.off.bind(emitter);\n  obj.once = emitter.once.bind(emitter);\n  obj.emit = emitter.emit.bind(emitter);\n\n  return obj;\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar number = __webpack_require__(1);\nvar string = __webpack_require__(24);\nvar object = __webpack_require__(0);\nvar types = __webpack_require__(25);\n\nvar DimensionError = __webpack_require__(2);\nvar IndexError = __webpack_require__(83);\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\nexports.size = function (x) {\n  var s = [];\n\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n\n  return s;\n};\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len != size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n      _validate(array[i], size, dimNext);\n    }\n  }\n  else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexports.validate = function(array, size) {\n  var isScalar = (size.length == 0);\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  }\n  else {\n    // array\n    _validate(array, size, 0);\n  }\n};\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\nexports.validateIndex = function(index, length) {\n  if (!number.isNumber(index) || !number.isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n  if (index < 0 || (typeof length === 'number' && index >= length)) {\n    throw new IndexError(index, length);\n  }\n};\n\n// a constant used to specify an undefined defaultValue\nexports.UNINITIALIZED = {};\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. To leave new entries undefined,\n *                              specify array.UNINITIALIZED as defaultValue\n * @return {Array} array         The resized array\n */\nexports.resize = function(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + string.format(size) + ')');\n    }\n  });\n\n  // recursively resize the array\n  var _defaultValue = (defaultValue !== undefined) ? defaultValue : 0;\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n};\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize (array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen);\n\n  // apply new length\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1;\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n        array[i] = elem;\n      }\n      _resize(elem, size, dimNext, defaultValue);\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem;\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  }\n  else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    }\n\n    if(defaultValue !== exports.UNINITIALIZED) {\n      // fill new elements with the default value\n      for (i = minLen; i < newLen; i++) {\n        array[i] = defaultValue;\n      }\n    }\n  }\n}\n\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nexports.reshape = function(array, sizes) {\n  var flatArray = exports.flatten(array);\n  var newArray;\n\n  var product = function (arr) {\n    return arr.reduce(function (prev, curr) {\n      return prev * curr;\n    });\n  };\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(exports.size(array)), '!=');\n  }\n\n  try {\n    newArray  = _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(\n        product(sizes),\n        product(exports.size(array)),\n        '!='\n      );\n    }\n    throw e;\n  }\n\n  if (flatArray.length > 0) {\n    throw new DimensionError(\n      product(sizes),\n      product(exports.size(array)),\n      '!='\n    );\n  }\n\n  return newArray;\n};\n\n/**\n * Recursively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nfunction _reshape(array, sizes) {\n  var accumulator = [];\n  var i;\n\n  if (sizes.length === 0) {\n    if (array.length === 0) {\n      throw new DimensionError(null, null, '!=');\n    }\n    return array.shift();\n  }\n  for (i = 0; i < sizes[0]; i += 1) {\n    accumulator.push(_reshape(array, sizes.slice(1)));\n  }\n  return accumulator;\n}\n\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\nexports.squeeze = function(array, size) {\n  var s = size || exports.size(array);\n\n  // squeeze outer dimensions\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  }\n\n  // find the first dimension to be squeezed\n  var dims = s.length;\n  while (s[dims - 1] === 1) {\n    dims--;\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n};\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze (array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  }\n  else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n * \n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n * \n * @param {Array} array\n * @param {number} dims     Desired number of dimensions of the array\n * @param {number} [outer]  Number of outer dimensions to be added\n * @param {Array} [size]    Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\nexports.unsqueeze = function(array, dims, outer, size) {\n  var s = size || exports.size(array);\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0);\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n};\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze (array, dims, dim) {\n  var i, ii;\n\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  }\n  else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\nexports.flatten = function(array) {\n  if (!Array.isArray(array)) {\n    //if not an array, return as is\n    return array;\n  }\n  var flat = [];\n\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback);  //traverse through sub-arrays recursively\n    }\n    else {\n      flat.push(value);\n    }\n  });\n\n  return flat;\n};\n\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\nexports.map = function (array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\nexports.forEach = function (array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\nexports.filter = function (array, callback) {\n  if (exports.size(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, callback);\n}\n\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\nexports.filterRegExp = function (array, regexp) {\n  if (exports.size(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, function (entry) {\n    return regexp.test(entry);\n  });\n}\n\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\nexports.join = function (array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array}\ta  An array\n * @return {Array}\tAn array of objects containing the original value and its identifier\n */\nexports.identify = function(a) {\n  if (!Array.isArray(a)) {\n\tthrow new TypeError('Array input expected');\n  }\n\t\n  if (a.length === 0) {\n\treturn a;\n  }\n\t\n  var b = [];\n  var count = 0;\n  b[0] = {value: a[0], identifier: 0};\n  for (var i=1; i<a.length; i++) {\n    if (a[i] === a[i-1]) {\n  \tcount++;\n    }\n    else {\n      count = 0;\n    }\n    b.push({value: a[i], identifier: count});\n  }\n  return b;\n}\n\n/**\n * Remove the numeric identifier from the elements\n * @param\ta  An array\n * @return\tAn array of values without identifiers\n */\nexports.generalize = function(a) {\n  if (!Array.isArray(a)) {\n\tthrow new TypeError('Array input expected');\n  }\n\t\n  if (a.length === 0) {\n\treturn a;\n  }\n\t\n  var b = [];\n  for (var i=0; i<a.length; i++) {\n    b.push(a[i].value);\n  }\n  return b;\n}\n\n/**\n * Test whether an object is an array\n * @param {*} value\n * @return {boolean} isArray\n */\nexports.isArray = Array.isArray;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar formatNumber = __webpack_require__(1).format;\nvar formatBigNumber = __webpack_require__(82).format;\nvar isBigNumber = __webpack_require__(9);\n\n/**\n * Test whether value is a string\n * @param {*} value\n * @return {boolean} isString\n */\nexports.isString = function(value) {\n  return typeof value === 'string';\n};\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\nexports.endsWith = function(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return (text.substring(start, end) === search);\n};\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7);                // '0.2857142857142857'\n *     math.format(math.pi, 3);         // '3.14'\n *     math.format(new Complex(2, 3));  // '2 + 3i'\n *     math.format('hello');            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\nexports.format = function(value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  }\n\n  // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return (value.s * value.n) + '/' + value.d;\n    }\n    else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (exports.isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    }\n    else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString();\n    }\n    else {\n      var entries = [];\n\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n};\n\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function (value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n\n      c = text.charAt(i);\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\';  // no valid escape character -> escape it\n      }\n      escaped += c;\n    }\n    else if (c === '\"') {\n      escaped += '\\\\\"';\n    }\n    else {\n      escaped += c;\n    }\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n}\n\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\nexports.escape = function (value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;')\n\t\t\t .replace(/\"/g, '&quot;')\n\t\t\t .replace(/'/g, '&#39;')\n\t\t\t .replace(/</g, '&lt;')\n\t\t\t .replace(/>/g, '&gt;');\n  \n  return text;\n}\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\nfunction formatArray (array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n    for (var i = 0; i < len; i++) {\n      if (i != 0) {\n        str += ', ';\n      }\n      str += formatArray(array[i], options);\n    }\n    str += ']';\n    return str;\n  }\n  else {\n    return exports.format(array, options);\n  }\n}\n\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\nfunction looksLikeFraction (value) {\n  return (value &&\n      typeof value === 'object' &&\n      typeof value.s === 'number' &&\n      typeof value.n === 'number' &&\n      typeof value.d === 'number') || false;\n}\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determine the type of a variable\n *\n *     type(x)\n *\n * The following types are recognized:\n *\n *     'undefined'\n *     'null'\n *     'boolean'\n *     'number'\n *     'string'\n *     'Array'\n *     'Function'\n *     'Date'\n *     'RegExp'\n *     'Object'\n *\n * @param {*} x\n * @return {string} Returns the name of the type. Primitive types are lower case,\n *                  non-primitive types are upper-camel-case.\n *                  For example 'number', 'string', 'Array', 'Date'.\n */\nexports.type = function(x) {\n  var type = typeof x;\n\n  if (type === 'object') {\n    if (x === null)           return 'null';\n    if (Array.isArray(x))     return 'Array';\n    if (x instanceof Date)    return 'Date';\n    if (x instanceof RegExp)  return 'RegExp';\n    if (x instanceof Boolean) return 'boolean';\n    if (x instanceof Number)  return 'number';\n    if (x instanceof String)  return 'string';\n\n    return 'Object';\n  }\n\n  if (type === 'function')    return 'Function';\n\n  return type;\n};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(3);\nvar DimensionError = __webpack_require__(2);\nvar getSafeProperty = __webpack_require__(5).getSafeProperty;\nvar setSafeProperty = __webpack_require__(5).setSafeProperty;\n\nvar string = util.string;\nvar array = util.array;\nvar object = util.object;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = number.isNumber;\nvar isInteger = number.isInteger;\nvar isString = string.isString;\n\nvar validateIndex = array.validateIndex;\n\nfunction factory (type, config, load, typed) {\n  var Matrix = load(__webpack_require__(10)); // force loading Matrix (do not use via type.Matrix)\n\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n\n    if (type.isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = object.clone(data._data);\n        this._size = object.clone(data._size);\n        this._datatype = datatype || data._datatype;\n      }\n      else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    }\n    else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data);\n      // get the dimensions of the array\n      this._size = array.size(this._data);\n      // verify the dimensions of the array, TODO: compute size while processing array\n      array.validate(this._data, this._size);\n      // data type unknown\n      this._datatype = datatype;\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n  \n  DenseMatrix.prototype = new Matrix();\n\n  /**\n   * Attach type information\n   */\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | DenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check index\n    for (var x = 0; x < index.length; x++)\n      validateIndex(index[x], this._size[x]);\n\n    var data = this._data;\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    return data;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length < this._size.length)\n      throw new DimensionError(index.length, this._size.length, '<');\n\n    var i, ii, index_i;\n\n    // enlarge matrix when needed\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n    _fit(this, size, defaultValue);\n\n    // traverse over the dimensions\n    var data = this._data;\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    // set new value\n    index_i = index[index.length - 1];\n    validateIndex(index_i, data.length);\n    data[index_i] = value;\n\n    return this;\n  };\n  \n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get (matrix, index) {\n    if (!type.isIndex(index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    }\n    else {\n      // validate dimensions\n      var size = index.size();\n      if (size.length != matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      }\n\n      // validate if any of the ranges in the index is out of range\n      var min = index.min();\n      var max = index.max();\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n  \n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix (data, index, dims, dim) {\n    var last = (dim === dims - 1);\n    var range = index.dimension(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        return data[i];\n      }).valueOf();\n    }\n    else {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n  \n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set (matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (type.isMatrix(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    }\n    else {\n      sSize = array.size(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // set a submatrix\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // enlarge matrix when needed\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n      _fit(matrix, size, defaultValue);\n\n      // insert the sub matrix\n      var dims = iSize.length,\n          dim = 0;\n      _setSubmatrix (matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  \n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix (data, index, submatrix, dims, dim) {\n    var last = (dim === dims - 1),\n        range = index.dimension(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    }\n    else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size, defaultValue);\n  };\n  \n  var _resize = function (matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data;\n      // go deep\n      while (isArray(v)) {\n        v = v[0];\n      }\n      return v;\n    }\n    // resize matrix\n    matrix._size = size.slice(0); // copy the array\n    matrix._data = array.resize(matrix._data, matrix._size, defaultValue);\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n\n    m._data = array.reshape(m._data, size);\n    m._size = size.slice(0);\n    return m;\n  };\n  \n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit(matrix, size, defaultValue) {\n    var newSize = matrix._size.slice(0), // copy the array\n        changed = false;\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    }\n\n    // enlarge size when needed\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n  DenseMatrix.prototype.size = function() {\n    return this._size.slice(0); // return a clone of _size\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      }\n      else {\n        return callback(value, index, me);\n      }\n    };\n    // return dense format\n    return new DenseMatrix({\n      data: recurse(this._data, []),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      }\n      else {\n        callback(value, index, me);\n      }\n    };\n    recurse(this._data, []);\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return object.clone(this._data);\n  };\n  \n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return string.format(this._data, options);\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return string.format(this._data);\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  \n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Array}                      The array vector with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // x is a matrix get diagonal from matrix\n    var data = [];\n    \n    // loop rows\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n  \n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                   The matrix size.\n   * @param {number | Array} value          The values for the diagonal.\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]        The default value for non-diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (type.isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n    \n    if (defaultValue && isString(datatype)) {\n      // convert defaultValue to the same datatype\n      defaultValue = typed.convert(defaultValue, datatype);\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };      \n    }\n    else if (type.isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // discover default value if needed\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = type.isBigNumber(_value(0)) ? new type.BigNumber(0) : 0;\n    }\n\n    // empty array\n    var data = [];\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = array.resize(data, size, defaultValue);\n      // fill diagonal\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    }\n    \n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n  \n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n\n    // swap rows\n    DenseMatrix._swapRows(i, j, this._data);\n    // return current instance\n    return this;\n  };\n\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   */\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n      if (isArray(elem)) {\n        data[i] = preprocess(elem);\n      }\n      else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  // register this type in the base class Matrix\n  type.Matrix._storage.dense = DenseMatrix;\n  type.Matrix._storage['default'] = DenseMatrix;\n\n  // exports\n  return DenseMatrix;\n}\n\nexports.name = 'DenseMatrix';\nexports.path = 'type';\nexports.factory = factory;\nexports.lazy = false;  // no lazy loading, as we alter type.Matrix._storage\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar nearlyEqual = __webpack_require__(1).nearlyEqual;\nvar bigNearlyEqual = __webpack_require__(12);\n\nfunction factory (type, config, load, typed) {\n\n  var matrix = load(__webpack_require__(4));\n\n  var algorithm03 = load(__webpack_require__(28));\n  var algorithm07 = load(__webpack_require__(29));\n  var algorithm12 = load(__webpack_require__(30));\n  var algorithm13 = load(__webpack_require__(14));\n  var algorithm14 = load(__webpack_require__(15));\n\n  var latex = __webpack_require__(13);\n\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3);            // returns true\n   *    math.smaller(5, 2 * 2);        // returns false\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.smaller(a, b);            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, smaller, smallerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  var smaller = typed('smaller', {\n\n    'boolean, boolean': function (x, y) {\n      return x < y;\n    },\n\n    'number, number': function (x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.lt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === -1;\n    },\n\n    'Complex, Complex': function (x, y) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return smaller(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x < y;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n\n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm07(x, y, smaller);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm03(y, x, smaller, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm03(x, y, smaller, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, smaller);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), matrix(y)).valueOf();\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(x, matrix(y));\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm12(x, y, smaller, false);\n          break;\n        default:\n          c = algorithm14(x, y, smaller, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm12(y, x, smaller, true);\n          break;\n        default:\n          c = algorithm14(y, x, smaller, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, smaller, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, smaller, true).valueOf();\n    }\n  });\n\n  smaller.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['smaller'] + '${args[1]}\\\\right)'\n  };\n\n  return smaller;\n}\n\nexports.name = 'smaller';\nexports.factory = factory;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar DimensionError = __webpack_require__(2);\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  var algorithm03 = function (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype;\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues)\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result (DenseMatrix)\n    var cdata = [];\n\n    // initialize dense matrix\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    }\n\n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      }\n      // process workspace\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        }\n        else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n  \n  return algorithm03;\n}\n\nexports.name = 'algorithm03';\nexports.factory = factory;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar DimensionError = __webpack_require__(2);\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  var algorithm07 = function (a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype;\n    // sparse matrix arrays\n    var bsize = b._size;\n    var bdt = b._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // vars\n    var i, j;\n    \n    // result arrays\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++)\n      cdata[i] = [];\n\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var xa = [];\n    var xb = [];\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // scatter the values of A(:,j) into workspace\n      _scatter(a, j, wa, xa, mark);\n      // scatter the values of B(:,j) into workspace\n      _scatter(b, j, wb, xb, mark);\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero;\n        // invoke callback\n        cdata[i][j] = cf(va, vb);\n      }          \n    }\n\n    // return sparse matrix\n    return c;\n  };\n  \n  var _scatter = function (m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr;\n    // loop values in column j\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k];\n      // update workspace\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  };\n  \n  return algorithm07;\n}\n\nexports.name = 'algorithm07';\nexports.factory = factory;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm12 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n    \n    // result arrays\n    var cdata = [];\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        }\n        else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c;\n  };\n  \n  return algorithm12;\n}\n\nexports.name = 'algorithm12';\nexports.factory = factory;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(32);\nmodule.exports = __webpack_require__(37);\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(33).enable();\n  window.Promise = __webpack_require__(35);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(36);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(6);\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(16);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(16);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App__ = __webpack_require__(50);\n__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__App__[\"a\" /* default */],null),document.getElementById('root'));\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\n React v16.0.0\n react.production.min.js\n\n Copyright (c) 2013-present, Facebook, Inc.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n*/\nvar f=__webpack_require__(6),p=__webpack_require__(18);__webpack_require__(19);var r=__webpack_require__(8);\nfunction t(a){for(var b=arguments.length-1,d=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,e=0;e<b;e++)d+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[e+1]);b=Error(d+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar u={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function v(a,b,d){this.props=a;this.context=b;this.refs=p;this.updater=d||u}v.prototype.isReactComponent={};v.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?t(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};v.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction w(a,b,d){this.props=a;this.context=b;this.refs=p;this.updater=d||u}function x(){}x.prototype=v.prototype;var y=w.prototype=new x;y.constructor=w;f(y,v.prototype);y.isPureReactComponent=!0;function z(a,b,d){this.props=a;this.context=b;this.refs=p;this.updater=d||u}var A=z.prototype=new x;A.constructor=z;f(A,v.prototype);A.unstable_isAsyncReactComponent=!0;A.render=function(){return this.props.children};\nvar B={Component:v,PureComponent:w,AsyncComponent:z},C={current:null},D=Object.prototype.hasOwnProperty,E=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103,F={key:!0,ref:!0,__self:!0,__source:!0};function G(a,b,d,e,c,g,k){return{$$typeof:E,type:a,key:b,ref:d,props:k,_owner:g}}\nG.createElement=function(a,b,d){var e,c={},g=null,k=null,m=null,q=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),m=void 0===b.__self?null:b.__self,q=void 0===b.__source?null:b.__source,b)D.call(b,e)&&!F.hasOwnProperty(e)&&(c[e]=b[e]);var l=arguments.length-2;if(1===l)c.children=d;else if(1<l){for(var h=Array(l),n=0;n<l;n++)h[n]=arguments[n+2];c.children=h}if(a&&a.defaultProps)for(e in l=a.defaultProps,l)void 0===c[e]&&(c[e]=l[e]);return G(a,g,k,m,q,C.current,c)};\nG.createFactory=function(a){var b=G.createElement.bind(null,a);b.type=a;return b};G.cloneAndReplaceKey=function(a,b){return G(a.type,b,a.ref,a._self,a._source,a._owner,a.props)};\nG.cloneElement=function(a,b,d){var e=f({},a.props),c=a.key,g=a.ref,k=a._self,m=a._source,q=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,q=C.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var l=a.type.defaultProps;for(h in b)D.call(b,h)&&!F.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==l?l[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=d;else if(1<h){l=Array(h);for(var n=0;n<h;n++)l[n]=arguments[n+2];e.children=l}return G(a.type,c,g,k,m,q,e)};\nG.isValidElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===E};var H=\"function\"===typeof Symbol&&Symbol.iterator,I=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103;function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var J=/\\/+/g,K=[];\nfunction L(a,b,d,e){if(K.length){var c=K.pop();c.result=a;c.keyPrefix=b;c.func=d;c.context=e;c.count=0;return c}return{result:a,keyPrefix:b,func:d,context:e,count:0}}function M(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>K.length&&K.push(a)}\nfunction N(a,b,d,e){var c=typeof a;if(\"undefined\"===c||\"boolean\"===c)a=null;if(null===a||\"string\"===c||\"number\"===c||\"object\"===c&&a.$$typeof===I)return d(e,a,\"\"===b?\".\"+O(a,0):b),1;var g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var m=b+O(c,k);g+=N(c,m,d,e)}else if(m=H&&a[H]||a[\"@@iterator\"],\"function\"===typeof m)for(a=m.call(a),k=0;!(c=a.next()).done;)c=c.value,m=b+O(c,k++),g+=N(c,m,d,e);else\"object\"===c&&(d=\"\"+a,t(\"31\",\"[object Object]\"===d?\"object with keys {\"+\nObject.keys(a).join(\", \")+\"}\":d,\"\"));return g}function O(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function P(a,b){a.func.call(a.context,b,a.count++)}function Q(a,b,d){var e=a.result,c=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?R(a,e,d,r.thatReturnsArgument):null!=a&&(G.isValidElement(a)&&(a=G.cloneAndReplaceKey(a,c+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(J,\"$\\x26/\")+\"/\")+d)),e.push(a))}\nfunction R(a,b,d,e,c){var g=\"\";null!=d&&(g=(\"\"+d).replace(J,\"$\\x26/\")+\"/\");b=L(b,g,e,c);null==a||N(a,\"\",Q,b);M(b)}var S={forEach:function(a,b,d){if(null==a)return a;b=L(null,null,b,d);null==a||N(a,\"\",P,b);M(b)},map:function(a,b,d){if(null==a)return a;var e=[];R(a,e,null,b,d);return e},count:function(a){return null==a?0:N(a,\"\",r.thatReturnsNull,null)},toArray:function(a){var b=[];R(a,b,null,r.thatReturnsArgument);return b}};\nmodule.exports={Children:{map:S.map,forEach:S.forEach,count:S.count,toArray:S.toArray,only:function(a){G.isValidElement(a)?void 0:t(\"143\");return a}},Component:B.Component,PureComponent:B.PureComponent,unstable_AsyncComponent:B.AsyncComponent,createElement:G.createElement,cloneElement:G.cloneElement,isValidElement:G.isValidElement,createFactory:G.createFactory,version:\"16.0.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:f}};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(40);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\n React v16.0.0\n react-dom.production.min.js\n\n Copyright (c) 2013-present, Facebook, Inc.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(7);__webpack_require__(19);var l=__webpack_require__(41),n=__webpack_require__(6),ba=__webpack_require__(42),ca=__webpack_require__(8),da=__webpack_require__(18),ea=__webpack_require__(43),fa=__webpack_require__(44),ha=__webpack_require__(47),ia=__webpack_require__(48);\nfunction w(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:w(\"227\");\nfunction ja(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nvar ka={Namespaces:{html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"},getIntrinsicNamespace:ja,getChildNamespace:function(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ja(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}},la=null,oa={};\nfunction pa(){if(la)for(var a in oa){var b=oa[a],c=la.indexOf(a);-1<c?void 0:w(\"96\",a);if(!qa.plugins[c]){b.extractEvents?void 0:w(\"97\",a);qa.plugins[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.eventNameDispatchConfigs.hasOwnProperty(h)?w(\"99\",h):void 0;qa.eventNameDispatchConfigs[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:w(\"98\",d,a)}}}}\nfunction ra(a,b,c){qa.registrationNameModules[a]?w(\"100\",a):void 0;qa.registrationNameModules[a]=b;qa.registrationNameDependencies[a]=b.eventTypes[c].dependencies}\nvar qa={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(a){la?w(\"101\"):void 0;la=Array.prototype.slice.call(a);pa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];oa.hasOwnProperty(c)&&oa[c]===d||(oa[c]?w(\"102\",c):void 0,oa[c]=d,b=!0)}b&&pa()}},sa=qa,ta={children:!0,dangerouslySetInnerHTML:!0,autoFocus:!0,defaultValue:!0,defaultChecked:!0,\ninnerHTML:!0,suppressContentEditableWarning:!0,style:!0};function ua(a,b){return(a&b)===b}\nvar wa={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=wa,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){xa.properties.hasOwnProperty(f)?w(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:ua(h,b.MUST_USE_PROPERTY),\nhasBooleanValue:ua(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:ua(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:ua(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:ua(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:ua(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:w(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);xa.properties[f]=\ng}}},xa={ID_ATTRIBUTE_NAME:\"data-reactid\",ROOT_ATTRIBUTE_NAME:\"data-reactroot\",ATTRIBUTE_NAME_START_CHAR:\":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\",ATTRIBUTE_NAME_CHAR:\":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\",\nproperties:{},shouldSetAttribute:function(a,b){if(xa.isReservedProp(a)||!(\"o\"!==a[0]&&\"O\"!==a[0]||\"n\"!==a[1]&&\"N\"!==a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return xa.shouldAttributeAcceptBooleanValue(a);case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}},getPropertyInfo:function(a){return xa.properties.hasOwnProperty(a)?xa.properties[a]:null},shouldAttributeAcceptBooleanValue:function(a){if(xa.isReservedProp(a))return!0;var b=xa.getPropertyInfo(a);\nif(b)return b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue;a=a.toLowerCase().slice(0,5);return\"data-\"===a||\"aria-\"===a},isReservedProp:function(a){return ta.hasOwnProperty(a)},injection:wa},A=xa,E={IndeterminateComponent:0,FunctionalComponent:1,ClassComponent:2,HostRoot:3,HostPortal:4,HostComponent:5,HostText:6,CoroutineComponent:7,CoroutineHandlerPhase:8,YieldComponent:9,Fragment:10},F={ELEMENT_NODE:1,TEXT_NODE:3,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_FRAGMENT_NODE:11},\nya=E.HostComponent,za=E.HostText,Aa=F.ELEMENT_NODE,Ba=F.COMMENT_NODE,Ea=A.ID_ATTRIBUTE_NAME,Fa={hasCachedChildNodes:1},Ga=Math.random().toString(36).slice(2),Ha=\"__reactInternalInstance$\"+Ga,Ia=\"__reactEventHandlers$\"+Ga;function La(a){for(var b;b=a._renderedComponent;)a=b;return a}function Ma(a,b){a=La(a);a._hostNode=b;b[Ha]=a}\nfunction Na(a,b){if(!(a._flags&Fa.hasCachedChildNodes)){var c=a._renderedChildren;b=b.firstChild;var d;a:for(d in c)if(c.hasOwnProperty(d)){var e=c[d],f=La(e)._domID;if(0!==f){for(;null!==b;b=b.nextSibling){var g=b,h=f;if(g.nodeType===Aa&&g.getAttribute(Ea)===\"\"+h||g.nodeType===Ba&&g.nodeValue===\" react-text: \"+h+\" \"||g.nodeType===Ba&&g.nodeValue===\" react-empty: \"+h+\" \"){Ma(e,b);continue a}}w(\"32\",f)}}a._flags|=Fa.hasCachedChildNodes}}\nfunction Oa(a){if(a[Ha])return a[Ha];for(var b=[];!a[Ha];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=a[Ha];if(c.tag===ya||c.tag===za)return c;for(;a&&(c=a[Ha]);a=b.pop()){var d=c;b.length&&Na(c,a)}return d}\nvar G={getClosestInstanceFromNode:Oa,getInstanceFromNode:function(a){var b=a[Ha];if(b)return b.tag===ya||b.tag===za?b:b._hostNode===a?b:null;b=Oa(a);return null!=b&&b._hostNode===a?b:null},getNodeFromInstance:function(a){if(a.tag===ya||a.tag===za)return a.stateNode;void 0===a._hostNode?w(\"33\"):void 0;if(a._hostNode)return a._hostNode;for(var b=[];!a._hostNode;)b.push(a),a._hostParent?void 0:w(\"34\"),a=a._hostParent;for(;b.length;a=b.pop())Na(a,a._hostNode);return a._hostNode},precacheChildNodes:Na,\nprecacheNode:Ma,uncacheNode:function(a){var b=a._hostNode;b&&(delete b[Ha],a._hostNode=null)},precacheFiberNode:function(a,b){b[Ha]=a},getFiberCurrentPropsFromNode:function(a){return a[Ia]||null},updateFiberProps:function(a,b){a[Ia]=b}},Pa={remove:function(a){a._reactInternalFiber=void 0},get:function(a){return a._reactInternalFiber},has:function(a){return void 0!==a._reactInternalFiber},set:function(a,b){a._reactInternalFiber=b}},Qa={ReactCurrentOwner:aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner};\nfunction Ra(a){if(\"function\"===typeof a.getName)return a.getName();if(\"number\"===typeof a.tag){a=a.type;if(\"string\"===typeof a)return a;if(\"function\"===typeof a)return a.displayName||a.name}return null}var J={NoEffect:0,PerformedWork:1,Placement:2,Update:4,PlacementAndUpdate:6,Deletion:8,ContentReset:16,Callback:32,Err:64,Ref:128},Sa=E.HostComponent,Ta=E.HostRoot,Ua=E.HostPortal,Va=E.HostText,Wa=J.NoEffect,Xa=J.Placement;\nfunction Za(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if((b.effectTag&Xa)!==Wa)return 1;for(;b[\"return\"];)if(b=b[\"return\"],(b.effectTag&Xa)!==Wa)return 1}return b.tag===Ta?2:3}function $a(a){2!==Za(a)?w(\"188\"):void 0}\nfunction ab(a){var b=a.alternate;if(!b)return b=Za(a),3===b?w(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return $a(e),a;if(g===d)return $a(e),b;g=g.sibling}w(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:w(\"189\")}}c.alternate!==d?w(\"190\"):void 0}c.tag!==Ta?w(\"188\"):void 0;return c.stateNode.current===c?a:b}\nvar bb={isFiberMounted:function(a){return 2===Za(a)},isMounted:function(a){return(a=Pa.get(a))?2===Za(a):!1},findCurrentFiberUsingSlowPath:ab,findCurrentHostFiber:function(a){a=ab(a);if(!a)return null;for(var b=a;;){if(b.tag===Sa||b.tag===Va)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null},findCurrentHostFiberWithNoPortals:function(a){a=ab(a);\nif(!a)return null;for(var b=a;;){if(b.tag===Sa||b.tag===Va)return b;if(b.child&&b.tag!==Ua)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}},K={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?w(\"197\"):void 0;cb=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,\nb,c,d,e,f,g,h,k){cb.apply(K,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){K.invokeGuardedCallback.apply(this,arguments);if(K.hasCaughtError()){var p=K.clearCaughtError();K._hasRethrowError||(K._hasRethrowError=!0,K._rethrowError=p)}},rethrowCaughtError:function(){return db.apply(K,arguments)},hasCaughtError:function(){return K._hasCaughtError},clearCaughtError:function(){if(K._hasCaughtError){var a=K._caughtError;K._caughtError=null;K._hasCaughtError=!1;return a}w(\"198\")}};\nfunction cb(a,b,c,d,e,f,g,h,k){K._hasCaughtError=!1;K._caughtError=null;var p=Array.prototype.slice.call(arguments,3);try{b.apply(c,p)}catch(x){K._caughtError=x,K._hasCaughtError=!0}}function db(){if(K._hasRethrowError){var a=K._rethrowError;K._rethrowError=null;K._hasRethrowError=!1;throw a;}}var eb=K,fb;function gb(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=hb.getNodeFromInstance(d);eb.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nvar hb={isEndish:function(a){return\"topMouseUp\"===a||\"topTouchEnd\"===a||\"topTouchCancel\"===a},isMoveish:function(a){return\"topMouseMove\"===a||\"topTouchMove\"===a},isStartish:function(a){return\"topMouseDown\"===a||\"topTouchStart\"===a},executeDirectDispatch:function(a){var b=a._dispatchListeners,c=a._dispatchInstances;Array.isArray(b)?w(\"103\"):void 0;a.currentTarget=b?hb.getNodeFromInstance(c):null;b=b?b(a):null;a.currentTarget=null;a._dispatchListeners=null;a._dispatchInstances=null;return b},executeDispatchesInOrder:function(a,\nb){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)gb(a,b,c[e],d[e]);else c&&gb(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null},executeDispatchesInOrderStopAtTrue:function(a){a:{var b=a._dispatchListeners;var c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++){if(b[d](a,c[d])){b=c[d];break a}}else if(b&&b(a,c)){b=c;break a}b=null}a._dispatchInstances=null;a._dispatchListeners=\nnull;return b},hasDispatches:function(a){return!!a._dispatchListeners},getFiberCurrentPropsFromNode:function(a){return fb.getFiberCurrentPropsFromNode(a)},getInstanceFromNode:function(a){return fb.getInstanceFromNode(a)},getNodeFromInstance:function(a){return fb.getNodeFromInstance(a)},injection:{injectComponentTree:function(a){fb=a}}},ib=hb,jb=null,kb=null,lb=null;\nfunction mb(a){if(a=ib.getInstanceFromNode(a))if(\"number\"===typeof a.tag){jb&&\"function\"===typeof jb.restoreControlledState?void 0:w(\"194\");var b=ib.getFiberCurrentPropsFromNode(a.stateNode);jb.restoreControlledState(a.stateNode,a.type,b)}else\"function\"!==typeof a.restoreControlledState?w(\"195\"):void 0,a.restoreControlledState()}\nvar nb={injection:{injectFiberControlledHostComponent:function(a){jb=a}},enqueueStateRestore:function(a){kb?lb?lb.push(a):lb=[a]:kb=a},restoreStateIfNeeded:function(){if(kb){var a=kb,b=lb;lb=kb=null;mb(a);if(b)for(a=0;a<b.length;a++)mb(b[a])}}};function ob(a,b,c,d,e,f){return a(b,c,d,e,f)}function pb(a,b){return a(b)}function qb(a,b){return pb(a,b)}\nvar rb=!1,sb={batchedUpdates:function(a,b){if(rb)return ob(qb,a,b);rb=!0;try{return ob(qb,a,b)}finally{rb=!1,nb.restoreStateIfNeeded()}},injection:{injectStackBatchedUpdates:function(a){ob=a},injectFiberBatchedUpdates:function(a){pb=a}}},tb=F.TEXT_NODE;function ub(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return a.nodeType===tb?a.parentNode:a}var vb=E.HostRoot,wb=[];\nfunction xb(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c=b;if(\"number\"===typeof c.tag){for(;c[\"return\"];)c=c[\"return\"];c=c.tag!==vb?null:c.stateNode.containerInfo}else{for(;c._hostParent;)c=c._hostParent;c=G.getNodeFromInstance(c).parentNode}if(!c)break;a.ancestors.push(b);b=G.getClosestInstanceFromNode(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],yb._handleTopLevel(a.topLevelType,b,a.nativeEvent,ub(a.nativeEvent))}\nvar yb={_enabled:!0,_handleTopLevel:null,setHandleTopLevel:function(a){yb._handleTopLevel=a},setEnabled:function(a){yb._enabled=!!a},isEnabled:function(){return yb._enabled},trapBubbledEvent:function(a,b,c){return c?ba.listen(c,b,yb.dispatchEvent.bind(null,a)):null},trapCapturedEvent:function(a,b,c){return c?ba.capture(c,b,yb.dispatchEvent.bind(null,a)):null},dispatchEvent:function(a,b){if(yb._enabled){var c=ub(b);c=G.getClosestInstanceFromNode(c);null===c||\"number\"!==typeof c.tag||bb.isFiberMounted(c)||\n(c=null);if(wb.length){var d=wb.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{sb.batchedUpdates(xb,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>wb.length&&wb.push(a)}}}},L=yb;function Cb(a,b){null==b?w(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction Db(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Eb=null;function Fb(a,b){a&&(ib.executeDispatchesInOrder(a,b),a.isPersistent()||a.constructor.release(a))}function Gb(a){return Fb(a,!0)}function Hb(a){return Fb(a,!1)}\nfunction Ib(a,b,c){switch(a){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":return!(!c.disabled||\"button\"!==b&&\"input\"!==b&&\"select\"!==b&&\"textarea\"!==b);default:return!1}}\nvar Jb={injection:{injectEventPluginOrder:sa.injectEventPluginOrder,injectEventPluginsByName:sa.injectEventPluginsByName},getListener:function(a,b){if(\"number\"===typeof a.tag){var c=a.stateNode;if(!c)return null;var d=ib.getFiberCurrentPropsFromNode(c);if(!d)return null;c=d[b];if(Ib(b,a.type,d))return null}else{d=a._currentElement;if(\"string\"===typeof d||\"number\"===typeof d||!a._rootNodeID)return null;a=d.props;c=a[b];if(Ib(b,d.type,a))return null}c&&\"function\"!==typeof c?w(\"231\",b,typeof c):void 0;\nreturn c},extractEvents:function(a,b,c,d){for(var e,f=sa.plugins,g=0;g<f.length;g++){var h=f[g];h&&(h=h.extractEvents(a,b,c,d))&&(e=Cb(e,h))}return e},enqueueEvents:function(a){a&&(Eb=Cb(Eb,a))},processEventQueue:function(a){var b=Eb;Eb=null;a?Db(b,Gb):Db(b,Hb);Eb?w(\"95\"):void 0;eb.rethrowCaughtError()}},Kb;l.canUseDOM&&(Kb=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction Lb(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&Kb&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function Mb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar Nb={animationend:Mb(\"Animation\",\"AnimationEnd\"),animationiteration:Mb(\"Animation\",\"AnimationIteration\"),animationstart:Mb(\"Animation\",\"AnimationStart\"),transitionend:Mb(\"Transition\",\"TransitionEnd\")},Ob={},Pb={};l.canUseDOM&&(Pb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Nb.animationend.animation,delete Nb.animationiteration.animation,delete Nb.animationstart.animation),\"TransitionEvent\"in window||delete Nb.transitionend.transition);\nfunction Qb(a){if(Ob[a])return Ob[a];if(!Nb[a])return a;var b=Nb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Pb)return Ob[a]=b[c];return\"\"}\nvar Rb={topAbort:\"abort\",topAnimationEnd:Qb(\"animationend\")||\"animationend\",topAnimationIteration:Qb(\"animationiteration\")||\"animationiteration\",topAnimationStart:Qb(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:Qb(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Sb={},Tb=0,Ub=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Vb(a){Object.prototype.hasOwnProperty.call(a,Ub)||(a[Ub]=Tb++,Sb[a[Ub]]={});return Sb[a[Ub]]}\nvar M=n({},{handleTopLevel:function(a,b,c,d){a=Jb.extractEvents(a,b,c,d);Jb.enqueueEvents(a);Jb.processEventQueue(!1)}},{setEnabled:function(a){L&&L.setEnabled(a)},isEnabled:function(){return!(!L||!L.isEnabled())},listenTo:function(a,b){var c=Vb(b);a=sa.registrationNameDependencies[a];for(var d=0;d<a.length;d++){var e=a[d];c.hasOwnProperty(e)&&c[e]||(\"topWheel\"===e?Lb(\"wheel\")?L.trapBubbledEvent(\"topWheel\",\"wheel\",b):Lb(\"mousewheel\")?L.trapBubbledEvent(\"topWheel\",\"mousewheel\",b):L.trapBubbledEvent(\"topWheel\",\n\"DOMMouseScroll\",b):\"topScroll\"===e?L.trapCapturedEvent(\"topScroll\",\"scroll\",b):\"topFocus\"===e||\"topBlur\"===e?(L.trapCapturedEvent(\"topFocus\",\"focus\",b),L.trapCapturedEvent(\"topBlur\",\"blur\",b),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(Lb(\"cancel\",!0)&&L.trapCapturedEvent(\"topCancel\",\"cancel\",b),c.topCancel=!0):\"topClose\"===e?(Lb(\"close\",!0)&&L.trapCapturedEvent(\"topClose\",\"close\",b),c.topClose=!0):Rb.hasOwnProperty(e)&&L.trapBubbledEvent(e,Rb[e],b),c[e]=!0)}},isListeningToAllDependencies:function(a,\nb){b=Vb(b);a=sa.registrationNameDependencies[a];for(var c=0;c<a.length;c++){var d=a[c];if(!b.hasOwnProperty(d)||!b[d])return!1}return!0},trapBubbledEvent:function(a,b,c){return L.trapBubbledEvent(a,b,c)},trapCapturedEvent:function(a,b,c){return L.trapCapturedEvent(a,b,c)}}),Wb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,\nflexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Xb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];\nObject.keys(Wb).forEach(function(a){Xb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Wb[b]=Wb[a]})});\nvar Yb={isUnitlessNumber:Wb,shorthandPropertyExpansions:{background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,\nborderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}}},Zb=Yb.isUnitlessNumber,$b=!1;if(l.canUseDOM){var ac=document.createElement(\"div\").style;try{ac.font=\"\"}catch(a){$b=!0}}\nvar bc={createDangerousStringForStyles:function(){},setValueForStyles:function(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Zb.hasOwnProperty(e)&&Zb[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");if(d)a.setProperty(c,e);else if(e)a[c]=e;else if(d=$b&&Yb.shorthandPropertyExpansions[c])for(var g in d)a[g]=\"\";else a[c]=\"\"}}},cc=new RegExp(\"^[\"+A.ATTRIBUTE_NAME_START_CHAR+\n\"][\"+A.ATTRIBUTE_NAME_CHAR+\"]*$\"),dc={},ec={};function fc(a){if(ec.hasOwnProperty(a))return!0;if(dc.hasOwnProperty(a))return!1;if(cc.test(a))return ec[a]=!0;dc[a]=!0;return!1}\nvar gc={setAttributeForID:function(a,b){a.setAttribute(A.ID_ATTRIBUTE_NAME,b)},setAttributeForRoot:function(a){a.setAttribute(A.ROOT_ATTRIBUTE_NAME,\"\")},getValueForProperty:function(){},getValueForAttribute:function(){},setValueForProperty:function(a,b,c){var d=A.getPropertyInfo(b);if(d&&A.shouldSetAttribute(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?gc.deleteValueForProperty(a,\nb):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else gc.setValueForAttribute(a,b,A.shouldSetAttribute(b,c)?c:null)},setValueForAttribute:function(a,b,c){fc(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))},deleteValueForAttribute:function(a,b){a.removeAttribute(b)},deleteValueForProperty:function(a,b){var c=A.getPropertyInfo(b);\nc?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}},hc=gc,ic=Qa.ReactDebugCurrentFrame;function jc(){return null}\nvar kc={current:null,phase:null,resetCurrentFiber:function(){ic.getCurrentStack=null;kc.current=null;kc.phase=null},setCurrentFiber:function(a,b){ic.getCurrentStack=jc;kc.current=a;kc.phase=b},getCurrentFiberOwnerName:function(){return null},getCurrentFiberStackAddendum:jc},lc=kc,mc={getHostProps:function(a,b){var c=b.value,d=b.checked;return n({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?\nd:a._wrapperState.initialChecked})},initWrapperState:function(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}},updateWrapper:function(a,b){var c=b.checked;null!=c&&hc.setValueForProperty(a,\"checked\",c||!1);c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=\nc)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)},postMountWrapper:function(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==\nb&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)},restoreControlledState:function(a,b){mc.updateWrapper(a,b);var c=b.name;if(\"radio\"===b.type&&null!=c){for(b=a;b.parentNode;)b=b.parentNode;c=b.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+c)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=G.getFiberCurrentPropsFromNode(d);e?void 0:w(\"90\");mc.updateWrapper(d,e)}}}}},qc=mc;\nfunction rc(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}var sc={validateProps:function(){},postMountWrapper:function(a,b){null!=b.value&&a.setAttribute(\"value\",b.value)},getHostProps:function(a,b){a=n({children:void 0},b);if(b=rc(b.children))a.children=b;return a}};\nfunction tc(a,b,c){a=a.options;if(b){b={};for(var d=0;d<c.length;d++)b[\"$\"+c[d]]=!0;for(c=0;c<a.length;c++)d=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==d&&(a[c].selected=d)}else{c=\"\"+c;b=null;for(d=0;d<a.length;d++){if(a[d].value===c){a[d].selected=!0;return}null!==b||a[d].disabled||(b=a[d])}null!==b&&(b.selected=!0)}}\nvar uc={getHostProps:function(a,b){return n({},b,{value:void 0})},initWrapperState:function(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}},postMountWrapper:function(a,b){a.multiple=!!b.multiple;var c=b.value;null!=c?tc(a,!!b.multiple,c):null!=b.defaultValue&&tc(a,!!b.multiple,b.defaultValue)},postUpdateWrapper:function(a,b){a._wrapperState.initialValue=void 0;var c=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!b.multiple;var d=b.value;\nnull!=d?tc(a,!!b.multiple,d):c!==!!b.multiple&&(null!=b.defaultValue?tc(a,!!b.multiple,b.defaultValue):tc(a,!!b.multiple,b.multiple?[]:\"\"))},restoreControlledState:function(a,b){var c=b.value;null!=c&&tc(a,!!b.multiple,c)}},vc={getHostProps:function(a,b){null!=b.dangerouslySetInnerHTML?w(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})},initWrapperState:function(a,b){var c=b.value,d=c;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?\nw(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:w(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"),d=c);a._wrapperState={initialValue:\"\"+d}},updateWrapper:function(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)},postMountWrapper:function(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)},restoreControlledState:function(a,b){vc.updateWrapper(a,b)}},wc=vc,xc=n({menuitem:!0},{area:!0,\nbase:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function yc(a,b){b&&(xc[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?w(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?w(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:w(\"61\")),null!=b.style&&\"object\"!==typeof b.style?w(\"62\",\"\"):void 0)}\nfunction zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nvar Bc={_getTrackerFromNode:function(a){return a._valueTracker},track:function(a){a._valueTracker||(a._valueTracker=Ac(a))},updateValueIfChanged:function(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1},stopTracking:function(a){(a=a._valueTracker)&&a.stopTracking()}};\nfunction Cc(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nvar Dc=ka.Namespaces,Ec,Fc=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Dc.svg||\"innerHTML\"in a)a.innerHTML=b;else for(Ec=Ec||document.createElement(\"div\"),Ec.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\",b=Ec.firstChild;b.firstChild;)a.appendChild(b.firstChild)}),Gc=/[\"'&<>]/,Hc=F.TEXT_NODE;\nfunction Ic(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&c.nodeType===Hc){c.nodeValue=b;return}}a.textContent=b}\nl.canUseDOM&&(\"textContent\"in document.documentElement||(Ic=function(a,b){if(a.nodeType===Hc)a.nodeValue=b;else{if(\"boolean\"===typeof b||\"number\"===typeof b)b=\"\"+b;else{b=\"\"+b;var c=Gc.exec(b);if(c){var d=\"\",e,f=0;for(e=c.index;e<b.length;e++){switch(b.charCodeAt(e)){case 34:c=\"\\x26quot;\";break;case 38:c=\"\\x26amp;\";break;case 39:c=\"\\x26#x27;\";break;case 60:c=\"\\x26lt;\";break;case 62:c=\"\\x26gt;\";break;default:continue}f!==e&&(d+=b.substring(f,e));f=e+1;d+=c}b=f!==e?d+b.substring(f,e):d}}Fc(a,b)}}));\nvar Jc=Ic,Kc=lc.getCurrentFiberOwnerName,Lc=F.DOCUMENT_NODE,Mc=F.DOCUMENT_FRAGMENT_NODE,Nc=M.listenTo,Oc=sa.registrationNameModules,Pc=ka.Namespaces.html,Qc=ka.getIntrinsicNamespace;function Rc(a,b){Nc(b,a.nodeType===Lc||a.nodeType===Mc?a:a.ownerDocument)}\nvar Sc={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"},N={createElement:function(a,b,c,d){c=c.nodeType===Lc?c:c.ownerDocument;d===Pc&&(d=Qc(a));d===Pc?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a},createTextNode:function(a,b){return(b.nodeType===Lc?b:b.ownerDocument).createTextNode(a)},setInitialProperties:function(a,b,c,d){var e=Cc(b,c);switch(b){case \"iframe\":case \"object\":M.trapBubbledEvent(\"topLoad\",\n\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in Sc)Sc.hasOwnProperty(f)&&M.trapBubbledEvent(f,Sc[f],a);f=c;break;case \"source\":M.trapBubbledEvent(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":M.trapBubbledEvent(\"topError\",\"error\",a);M.trapBubbledEvent(\"topLoad\",\"load\",a);f=c;break;case \"form\":M.trapBubbledEvent(\"topReset\",\"reset\",a);M.trapBubbledEvent(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":M.trapBubbledEvent(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":qc.initWrapperState(a,\nc);f=qc.getHostProps(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(d,\"onChange\");break;case \"option\":sc.validateProps(a,c);f=sc.getHostProps(a,c);break;case \"select\":uc.initWrapperState(a,c);f=uc.getHostProps(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(d,\"onChange\");break;case \"textarea\":wc.initWrapperState(a,c);f=wc.getHostProps(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(d,\"onChange\");break;default:f=c}yc(b,f,Kc);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===\nh?bc.setValueForStyles(a,k):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Fc(a,k)):\"children\"===h?\"string\"===typeof k?Jc(a,k):\"number\"===typeof k&&Jc(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&(Oc.hasOwnProperty(h)?null!=k&&Rc(d,h):e?hc.setValueForAttribute(a,h,k):null!=k&&hc.setValueForProperty(a,h,k))}switch(b){case \"input\":Bc.track(a);qc.postMountWrapper(a,c);break;case \"textarea\":Bc.track(a);wc.postMountWrapper(a,c);break;case \"option\":sc.postMountWrapper(a,c);break;case \"select\":uc.postMountWrapper(a,\nc);break;default:\"function\"===typeof f.onClick&&(a.onclick=ca)}},diffProperties:function(a,b,c,d,e){var f=null;switch(b){case \"input\":c=qc.getHostProps(a,c);d=qc.getHostProps(a,d);f=[];break;case \"option\":c=sc.getHostProps(a,c);d=sc.getHostProps(a,d);f=[];break;case \"select\":c=uc.getHostProps(a,c);d=uc.getHostProps(a,d);f=[];break;case \"textarea\":c=wc.getHostProps(a,c);d=wc.getHostProps(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=ca)}yc(b,d,Kc);\nvar g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&(Oc.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&\nb[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&(Oc.hasOwnProperty(g)?(null!=k&&Rc(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f},updateProperties:function(a,b,c,d,e){Cc(c,d);d=Cc(c,e);for(var f=0;f<b.length;f+=\n2){var g=b[f],h=b[f+1];\"style\"===g?bc.setValueForStyles(a,h):\"dangerouslySetInnerHTML\"===g?Fc(a,h):\"children\"===g?Jc(a,h):d?null!=h?hc.setValueForAttribute(a,g,h):hc.deleteValueForAttribute(a,g):null!=h?hc.setValueForProperty(a,g,h):hc.deleteValueForProperty(a,g)}switch(c){case \"input\":qc.updateWrapper(a,e);Bc.updateValueIfChanged(a);break;case \"textarea\":wc.updateWrapper(a,e);break;case \"select\":uc.postUpdateWrapper(a,e)}},diffHydratedProperties:function(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":M.trapBubbledEvent(\"topLoad\",\n\"load\",a);break;case \"video\":case \"audio\":for(var f in Sc)Sc.hasOwnProperty(f)&&M.trapBubbledEvent(f,Sc[f],a);break;case \"source\":M.trapBubbledEvent(\"topError\",\"error\",a);break;case \"img\":case \"image\":M.trapBubbledEvent(\"topError\",\"error\",a);M.trapBubbledEvent(\"topLoad\",\"load\",a);break;case \"form\":M.trapBubbledEvent(\"topReset\",\"reset\",a);M.trapBubbledEvent(\"topSubmit\",\"submit\",a);break;case \"details\":M.trapBubbledEvent(\"topToggle\",\"toggle\",a);break;case \"input\":qc.initWrapperState(a,c);M.trapBubbledEvent(\"topInvalid\",\n\"invalid\",a);Rc(e,\"onChange\");break;case \"option\":sc.validateProps(a,c);break;case \"select\":uc.initWrapperState(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(e,\"onChange\");break;case \"textarea\":wc.initWrapperState(a,c),M.trapBubbledEvent(\"topInvalid\",\"invalid\",a),Rc(e,\"onChange\")}yc(b,c,Kc);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Oc.hasOwnProperty(g)&&\nnull!=f&&Rc(e,g));switch(b){case \"input\":Bc.track(a);qc.postMountWrapper(a,c);break;case \"textarea\":Bc.track(a);wc.postMountWrapper(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=ca)}return d},diffHydratedText:function(a,b){return a.nodeValue!==b},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,\nb,c){switch(b){case \"input\":qc.restoreControlledState(a,c);break;case \"textarea\":wc.restoreControlledState(a,c);break;case \"select\":uc.restoreControlledState(a,c)}}},Tc=void 0;\nif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback){var Uc=null,Vc=null,Wc=!1,Xc=!1,Yc=0,Zc=33,$c=33,ad={timeRemaining:\"object\"===typeof performance&&\"function\"===typeof performance.now?function(){return Yc-performance.now()}:function(){return Yc-Date.now()}},bd=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){a.source===window&&a.data===bd&&(Wc=!1,a=Vc,Vc=null,null!==a&&a(ad))},!1);var cd=function(a){Xc=!1;var b=a-Yc+$c;b<$c&&Zc<$c?(8>\nb&&(b=8),$c=b<Zc?Zc:b):Zc=b;Yc=a+$c;Wc||(Wc=!0,window.postMessage(bd,\"*\"));b=Uc;Uc=null;null!==b&&b(a)};Tc=function(a){Vc=a;Xc||(Xc=!0,requestAnimationFrame(cd));return 0}}else Tc=requestIdleCallback;else Tc=function(a){setTimeout(function(){a({timeRemaining:function(){return Infinity}})});return 0};\nvar dd={rIC:Tc},ed={enableAsyncSubtreeAPI:!0},Q={NoWork:0,SynchronousPriority:1,TaskPriority:2,HighPriority:3,LowPriority:4,OffscreenPriority:5},fd=J.Callback,gd=Q.NoWork,hd=Q.SynchronousPriority,id=Q.TaskPriority,jd=E.ClassComponent,kd=E.HostRoot,md=void 0,nd=void 0;function od(a,b){return a!==id&&a!==hd||b!==id&&b!==hd?a===gd&&b!==gd?-255:a!==gd&&b===gd?255:a-b:0}function pd(){return{first:null,last:null,hasForceUpdate:!1,callbackList:null}}\nfunction qd(a,b,c,d){null!==c?c.next=b:(b.next=a.first,a.first=b);null!==d?b.next=d:a.last=b}function rd(a,b){b=b.priorityLevel;var c=null;if(null!==a.last&&0>=od(a.last.priorityLevel,b))c=a.last;else for(a=a.first;null!==a&&0>=od(a.priorityLevel,b);)c=a,a=a.next;return c}\nfunction sd(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=pd());null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=pd())):a=null;md=d;nd=a!==d?a:null;var e=md;c=nd;var f=rd(e,b),g=null!==f?f.next:e.first;if(null===c)return qd(e,b,f,g),null;d=rd(c,b);a=null!==d?d.next:c.first;qd(e,b,f,g);if(g===a&&null!==g||f===d&&null!==f)return null===d&&(c.first=b),null===a&&(c.last=null),null;b={priorityLevel:b.priorityLevel,partialState:b.partialState,callback:b.callback,isReplace:b.isReplace,\nisForced:b.isForced,isTopLevelUnmount:b.isTopLevelUnmount,next:null};qd(c,b,d,a);return b}function td(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nvar ud={addUpdate:function(a,b,c,d){sd(a,{priorityLevel:d,partialState:b,callback:c,isReplace:!1,isForced:!1,isTopLevelUnmount:!1,next:null})},addReplaceUpdate:function(a,b,c,d){sd(a,{priorityLevel:d,partialState:b,callback:c,isReplace:!0,isForced:!1,isTopLevelUnmount:!1,next:null})},addForceUpdate:function(a,b,c){sd(a,{priorityLevel:c,partialState:null,callback:b,isReplace:!1,isForced:!0,isTopLevelUnmount:!1,next:null})},getUpdatePriority:function(a){var b=a.updateQueue;return null===b||a.tag!==\njd&&a.tag!==kd?gd:null!==b.first?b.first.priorityLevel:gd},addTopLevelUpdate:function(a,b,c,d){var e=null===b.element;b={priorityLevel:d,partialState:b,callback:c,isReplace:!1,isForced:!1,isTopLevelUnmount:e,next:null};a=sd(a,b);e&&(e=md,c=nd,null!==e&&null!==b.next&&(b.next=null,e.last=b),null!==c&&null!==a&&null!==a.next&&(a.next=null,c.last=b))},beginUpdateQueue:function(a,b,c,d,e,f,g){null!==a&&a.updateQueue===c&&(c=b.updateQueue={first:c.first,last:c.last,callbackList:null,hasForceUpdate:!1});\na=c.callbackList;for(var h=c.hasForceUpdate,k=!0,p=c.first;null!==p&&0>=od(p.priorityLevel,g);){c.first=p.next;null===c.first&&(c.last=null);var x;if(p.isReplace)e=td(p,d,e,f),k=!0;else if(x=td(p,d,e,f))e=k?n({},e,x):n(e,x),k=!1;p.isForced&&(h=!0);null===p.callback||p.isTopLevelUnmount&&null!==p.next||(a=null!==a?a:[],a.push(p.callback),b.effectTag|=fd);p=p.next}c.callbackList=a;c.hasForceUpdate=h;null!==c.first||null!==a||h||(b.updateQueue=null);return e},commitCallbacks:function(a,b,c){a=b.callbackList;\nif(null!==a)for(b.callbackList=null,b=0;b<a.length;b++){var d=a[b];\"function\"!==typeof d?w(\"191\",d):void 0;d.call(c)}}},vd=[],wd=-1,xd={createCursor:function(a){return{current:a}},isEmpty:function(){return-1===wd},pop:function(a){0>wd||(a.current=vd[wd],vd[wd]=null,wd--)},push:function(a,b){wd++;vd[wd]=a.current;a.current=b},reset:function(){for(;-1<wd;)vd[wd]=null,wd--}},yd=bb.isFiberMounted,zd=E.ClassComponent,Ad=E.HostRoot,Bd=xd.createCursor,Cd=xd.pop,Dd=xd.push,Ed=Bd(da),Fd=Bd(!1),Ld=da;\nfunction Md(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function Nd(a){return a.tag===zd&&null!=a.type.childContextTypes}function Od(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:w(\"108\",Ra(a)||\"Unknown\",e);return n({},b,c)}\nvar R={getUnmaskedContext:function(a){return Nd(a)?Ld:Ed.current},cacheContext:Md,getMaskedContext:function(a,b){var c=a.type.contextTypes;if(!c)return da;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&Md(a,b,e);return e},hasContextChanged:function(){return Fd.current},isContextConsumer:function(a){return a.tag===zd&&null!=a.type.contextTypes},isContextProvider:Nd,popContextProvider:function(a){Nd(a)&&\n(Cd(Fd,a),Cd(Ed,a))},popTopLevelContextObject:function(a){Cd(Fd,a);Cd(Ed,a)},pushTopLevelContextObject:function(a,b,c){null!=Ed.cursor?w(\"168\"):void 0;Dd(Ed,b,a);Dd(Fd,c,a)},processChildContext:Od,pushContextProvider:function(a){if(!Nd(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||da;Ld=Ed.current;Dd(Ed,b,a);Dd(Fd,Fd.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:w(\"169\");if(b){var d=Od(a,Ld,!0);c.__reactInternalMemoizedMergedChildContext=\nd;Cd(Fd,a);Cd(Ed,a);Dd(Ed,d,a)}else Cd(Fd,a);Dd(Fd,b,a)},resetContext:function(){Ld=da;Ed.current=da;Fd.current=!1},findCurrentUnmaskedContext:function(a){for(yd(a)&&a.tag===zd?void 0:w(\"170\");a.tag!==Ad;){if(Nd(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:w(\"171\")}return a.stateNode.context}},Pd={NoContext:0,AsyncUpdates:1},Qd=E.IndeterminateComponent,Rd=E.ClassComponent,Sd=E.HostRoot,Td=E.HostComponent,Ud=E.HostText,Vd=E.HostPortal,Wd=E.CoroutineComponent,\nXd=E.YieldComponent,Yd=E.Fragment,Zd=Q.NoWork,$d=Pd.NoContext,ae=J.NoEffect;function be(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=ae;this.lastEffect=this.firstEffect=this.nextEffect=null;this.pendingWorkPriority=Zd;this.alternate=null}\nfunction ce(a,b,c){var d=void 0;\"function\"===typeof a?(d=a.prototype&&a.prototype.isReactComponent?new be(Rd,b,c):new be(Qd,b,c),d.type=a):\"string\"===typeof a?(d=new be(Td,b,c),d.type=a):\"object\"===typeof a&&null!==a&&\"number\"===typeof a.tag?d=a:w(\"130\",null==a?a:typeof a,\"\");return d}\nvar de={createWorkInProgress:function(a,b){var c=a.alternate;null===c?(c=new be(a.tag,a.key,a.internalContextTag),c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.effectTag=ae,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.pendingWorkPriority=b;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c},createHostRootFiber:function(){return new be(Sd,null,$d)},\ncreateFiberFromElement:function(a,b,c){b=ce(a.type,a.key,b,null);b.pendingProps=a.props;b.pendingWorkPriority=c;return b},createFiberFromFragment:function(a,b,c){b=new be(Yd,null,b);b.pendingProps=a;b.pendingWorkPriority=c;return b},createFiberFromText:function(a,b,c){b=new be(Ud,null,b);b.pendingProps=a;b.pendingWorkPriority=c;return b},createFiberFromElementType:ce,createFiberFromHostInstanceForDeletion:function(){var a=new be(Td,null,$d);a.type=\"DELETED\";return a},createFiberFromCoroutine:function(a,\nb,c){b=new be(Wd,a.key,b);b.type=a.handler;b.pendingProps=a;b.pendingWorkPriority=c;return b},createFiberFromYield:function(a,b){return new be(Xd,null,b)},createFiberFromPortal:function(a,b,c){b=new be(Vd,a.key,b);b.pendingProps=a.children||[];b.pendingWorkPriority=c;b.stateNode={containerInfo:a.containerInfo,implementation:a.implementation};return b},largerPriority:function(a,b){return a!==Zd&&(b===Zd||b>a)?a:b}},ee=de.createHostRootFiber,fe=E.IndeterminateComponent,ge=E.FunctionalComponent,he=E.ClassComponent,\nie=E.HostComponent,je,ke;\"function\"===typeof Symbol&&Symbol[\"for\"]?(je=Symbol[\"for\"](\"react.coroutine\"),ke=Symbol[\"for\"](\"react.yield\")):(je=60104,ke=60105);\nvar le={createCoroutine:function(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:je,key:null==d?null:\"\"+d,children:a,handler:b,props:c}},createYield:function(a){return{$$typeof:ke,value:a}},isCoroutine:function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===je},isYield:function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===ke},REACT_YIELD_TYPE:ke,REACT_COROUTINE_TYPE:je},me=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||\n60106,ne={createPortal:function(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:me,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}},isPortal:function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===me},REACT_PORTAL_TYPE:me},oe=le.REACT_COROUTINE_TYPE,pe=le.REACT_YIELD_TYPE,qe=ne.REACT_PORTAL_TYPE,re=de.createWorkInProgress,se=de.createFiberFromElement,te=de.createFiberFromFragment,ue=de.createFiberFromText,ve=de.createFiberFromCoroutine,\nwe=de.createFiberFromYield,xe=de.createFiberFromPortal,ye=Array.isArray,ze=E.FunctionalComponent,Ae=E.ClassComponent,Be=E.HostText,Ce=E.HostPortal,De=E.CoroutineComponent,Ee=E.YieldComponent,Fe=E.Fragment,Ge=J.NoEffect,He=J.Placement,Ie=J.Deletion,Je=\"function\"===typeof Symbol&&Symbol.iterator,Ke=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103;\nfunction Le(a){if(null===a||\"undefined\"===typeof a)return null;a=Je&&a[Je]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Me(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(\"number\"===typeof b.tag?(b.tag!==Ae?w(\"110\"):void 0,d=b.stateNode):d=b.getPublicInstance());d?void 0:w(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===da?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?w(\"148\"):void 0;b._owner?void 0:w(\"149\",c)}return c}\nfunction Ne(a,b){\"textarea\"!==a.type&&w(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Oe(a,b){function c(c,d){if(b){if(!a){if(null===d.alternate)return;d=d.alternate}var m=c.lastEffect;null!==m?(m.nextEffect=d,c.lastEffect=d):c.firstEffect=c.lastEffect=d;d.nextEffect=null;d.effectTag=Ie}}function d(a,d){if(!b)return null;for(;null!==d;)c(a,d),d=d.sibling;return null}function e(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function f(b,c){if(a)return b=re(b,c),b.index=0,b.sibling=null,b;b.pendingWorkPriority=c;b.effectTag=Ge;\nb.index=0;b.sibling=null;return b}function g(a,c,d){a.index=d;if(!b)return c;d=a.alternate;if(null!==d)return d=d.index,d<c?(a.effectTag=He,c):d;a.effectTag=He;return c}function h(a){b&&null===a.alternate&&(a.effectTag=He);return a}function k(a,b,c,d){if(null===b||b.tag!==Be)return c=ue(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c;b[\"return\"]=a;return b}function p(a,b,c,d){if(null===b||b.type!==c.type)return d=se(c,a.internalContextTag,d),d.ref=Me(b,c),d[\"return\"]=a,d;d=f(b,\nd);d.ref=Me(b,c);d.pendingProps=c.props;d[\"return\"]=a;return d}function x(a,b,c,d){if(null===b||b.tag!==De)return c=ve(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c;b[\"return\"]=a;return b}function S(a,b,c,d){if(null===b||b.tag!==Ee)return b=we(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=f(b,d);b.type=c.value;b[\"return\"]=a;return b}function D(a,b,c,d){if(null===b||b.tag!==Ce||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return c=\nxe(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c.children||[];b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||b.tag!==Fe)return c=te(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c;b[\"return\"]=a;return b}function B(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ue(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Ke:return c=se(b,a.internalContextTag,c),c.ref=Me(null,b),c[\"return\"]=\na,c;case oe:return b=ve(b,a.internalContextTag,c),b[\"return\"]=a,b;case pe:return c=we(b,a.internalContextTag,c),c.type=b.value,c[\"return\"]=a,c;case qe:return b=xe(b,a.internalContextTag,c),b[\"return\"]=a,b}if(ye(b)||Le(b))return b=te(b,a.internalContextTag,c),b[\"return\"]=a,b;Ne(a,b)}return null}function H(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:k(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Ke:return c.key===e?p(a,\nb,c,d):null;case oe:return c.key===e?x(a,b,c,d):null;case pe:return null===e?S(a,b,c,d):null;case qe:return c.key===e?D(a,b,c,d):null}if(ye(c)||Le(c))return null!==e?null:y(a,b,c,d);Ne(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,k(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Ke:return a=a.get(null===d.key?c:d.key)||null,p(b,a,d,e);case oe:return a=a.get(null===d.key?c:d.key)||null,x(b,a,d,e);case pe:return a=a.get(c)||\nnull,S(b,a,d,e);case qe:return a=a.get(null===d.key?c:d.key)||null,D(b,a,d,e)}if(ye(d)||Le(d))return a=a.get(c)||null,y(b,a,d,e);Ne(b,d)}return null}function Ca(a,f,h,k){for(var m=null,t=null,q=f,r=f=0,p=null;null!==q&&r<h.length;r++){q.index>r?(p=q,q=null):p=q.sibling;var v=H(a,q,h[r],k);if(null===v){null===q&&(q=p);break}b&&q&&null===v.alternate&&c(a,q);f=g(v,f,r);null===t?m=v:t.sibling=v;t=v;q=p}if(r===h.length)return d(a,q),m;if(null===q){for(;r<h.length;r++)if(q=B(a,h[r],k))f=g(q,f,r),null===\nt?m=q:t.sibling=q,t=q;return m}for(q=e(a,q);r<h.length;r++)if(p=C(q,a,r,h[r],k)){if(b&&null!==p.alternate)q[\"delete\"](null===p.key?r:p.key);f=g(p,f,r);null===t?m=p:t.sibling=p;t=p}b&&q.forEach(function(b){return c(a,b)});return m}function r(a,f,h,r){var m=Le(h);\"function\"!==typeof m?w(\"150\"):void 0;h=m.call(h);null==h?w(\"151\"):void 0;for(var t=m=null,q=f,k=f=0,p=null,v=h.next();null!==q&&!v.done;k++,v=h.next()){q.index>k?(p=q,q=null):p=q.sibling;var V=H(a,q,v.value,r);if(null===V){q||(q=p);break}b&&\nq&&null===V.alternate&&c(a,q);f=g(V,f,k);null===t?m=V:t.sibling=V;t=V;q=p}if(v.done)return d(a,q),m;if(null===q){for(;!v.done;k++,v=h.next())v=B(a,v.value,r),null!==v&&(f=g(v,f,k),null===t?m=v:t.sibling=v,t=v);return m}for(q=e(a,q);!v.done;k++,v=h.next())if(v=C(q,a,k,v.value,r),null!==v){if(b&&null!==v.alternate)q[\"delete\"](null===v.key?k:v.key);f=g(v,f,k);null===t?m=v:t.sibling=v;t=v}b&&q.forEach(function(b){return c(a,b)});return m}return function(a,b,e,g){var m=\"object\"===typeof e&&null!==e;if(m)switch(e.$$typeof){case Ke:a:{var C=\ne.key;for(m=b;null!==m;){if(m.key===C)if(m.type===e.type){d(a,m.sibling);b=f(m,g);b.ref=Me(m,e);b.pendingProps=e.props;b[\"return\"]=a;a=b;break a}else{d(a,m);break}else c(a,m);m=m.sibling}g=se(e,a.internalContextTag,g);g.ref=Me(b,e);g[\"return\"]=a;a=g}return h(a);case oe:a:{for(m=e.key;null!==b;){if(b.key===m)if(b.tag===De){d(a,b.sibling);b=f(b,g);b.pendingProps=e;b[\"return\"]=a;a=b;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=ve(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return h(a);case pe:a:{if(null!==\nb)if(b.tag===Ee){d(a,b.sibling);b=f(b,g);b.type=e.value;b[\"return\"]=a;a=b;break a}else d(a,b);b=we(e,a.internalContextTag,g);b.type=e.value;b[\"return\"]=a;a=b}return h(a);case qe:a:{for(m=e.key;null!==b;){if(b.key===m)if(b.tag===Ce&&b.stateNode.containerInfo===e.containerInfo&&b.stateNode.implementation===e.implementation){d(a,b.sibling);b=f(b,g);b.pendingProps=e.children||[];b[\"return\"]=a;a=b;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=xe(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return h(a)}if(\"string\"===\ntypeof e||\"number\"===typeof e)return e=\"\"+e,null!==b&&b.tag===Be?(d(a,b.sibling),b=f(b,g),b.pendingProps=e,b[\"return\"]=a,a=b):(d(a,b),e=ue(e,a.internalContextTag,g),e[\"return\"]=a,a=e),h(a);if(ye(e))return Ca(a,b,e,g);if(Le(e))return r(a,b,e,g);m&&Ne(a,e);if(\"undefined\"===typeof e)switch(a.tag){case Ae:case ze:e=a.type,w(\"152\",e.displayName||e.name||\"Component\")}return d(a,b)}}\nvar Pe=Oe(!0,!0),Qe=Oe(!1,!0),Re=Oe(!1,!1),Se={reconcileChildFibers:Pe,reconcileChildFibersInPlace:Qe,mountChildFibersInPlace:Re,cloneChildFibers:function(a,b){null!==a&&b.child!==a.child?w(\"153\"):void 0;if(null!==b.child){a=b.child;var c=re(a,a.pendingWorkPriority);c.pendingProps=a.pendingProps;b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=re(a,a.pendingWorkPriority),c.pendingProps=a.pendingProps,c[\"return\"]=b;c.sibling=null}}},Te=J.Update,Ue=Pd.AsyncUpdates,Ve=R.cacheContext,\nWe=R.getMaskedContext,Xe=R.getUnmaskedContext,Ye=R.isContextConsumer,Ze=ud.addUpdate,$e=ud.addReplaceUpdate,af=ud.addForceUpdate,bf=ud.beginUpdateQueue,cf=R.hasContextChanged,df=bb.isMounted;\nfunction ef(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;Pa.set(b,a)}var f={isMounted:df,enqueueSetState:function(c,d,e){c=Pa.get(c);var f=b(c,!1);Ze(c,d,void 0===e?null:e,f);a(c,f)},enqueueReplaceState:function(c,d,e){c=Pa.get(c);var f=b(c,!1);$e(c,d,void 0===e?null:e,f);a(c,f)},enqueueForceUpdate:function(c,d){c=Pa.get(c);var e=b(c,!1);af(c,void 0===d?null:d,e);a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=Xe(a),f=Ye(a),g=f?We(a,d):da;b=new c(b,g);\ne(a,b);f&&Ve(a,d,g);return b},mountClassInstance:function(a,b){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:w(\"158\");var h=Xe(a);d.props=g;d.state=e;d.refs=da;d.context=We(a,h);ed.enableAsyncSubtreeAPI&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=Ue);\"function\"===typeof d.componentWillMount&&(h=d.state,d.componentWillMount(),h!==d.state&&f.enqueueReplaceState(d,d.state,null),h=a.updateQueue,null!==\nh&&(d.state=bf(c,a,h,d,e,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=Te)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?w(\"159\"):void 0);var D=g.context,y=Xe(b);y=We(b,y);\"function\"!==typeof g.componentWillReceiveProps||h===k&&D===y||(D=g.state,g.componentWillReceiveProps(k,y),g.state!==D&&f.enqueueReplaceState(g,g.state,null));D=b.memoizedState;e=null!==b.updateQueue?bf(a,\nb,b.updateQueue,g,D,k,e):D;if(!(h!==k||D!==e||cf()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&D===a.memoizedState||(b.effectTag|=Te),!1;var B=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)B=!0;else{var H=b.stateNode,C=b.type;B=\"function\"===typeof H.shouldComponentUpdate?H.shouldComponentUpdate(B,e,y):C.prototype&&C.prototype.isPureReactComponent?!ea(h,B)||!ea(D,e):!0}B?(\"function\"===typeof g.componentWillUpdate&&\ng.componentWillUpdate(k,e,y),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=Te)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&D===a.memoizedState||(b.effectTag|=Te),c(b,k),d(b,e));g.props=k;g.state=e;g.context=y;return B}}}\nvar ff=Se.mountChildFibersInPlace,gf=Se.reconcileChildFibers,hf=Se.reconcileChildFibersInPlace,jf=Se.cloneChildFibers,kf=ud.beginUpdateQueue,lf=R.getMaskedContext,mf=R.getUnmaskedContext,nf=R.hasContextChanged,of=R.pushContextProvider,pf=R.pushTopLevelContextObject,qf=R.invalidateContextProvider,rf=E.IndeterminateComponent,sf=E.FunctionalComponent,tf=E.ClassComponent,uf=E.HostRoot,wf=E.HostComponent,xf=E.HostText,yf=E.HostPortal,zf=E.CoroutineComponent,Af=E.CoroutineHandlerPhase,Bf=E.YieldComponent,\nCf=E.Fragment,Df=Q.NoWork,Ef=Q.OffscreenPriority,Ff=J.PerformedWork,Gf=J.Placement,Hf=J.ContentReset,If=J.Err,Jf=J.Ref,Kf=Qa.ReactCurrentOwner;\nfunction Lf(a,b,c,d,e){function f(a,b,c){g(a,b,c,b.pendingWorkPriority)}function g(a,b,c,d){b.child=null===a?ff(b,b.child,c,d):a.child===b.child?gf(b,b.child,c,d):hf(b,b.child,c,d)}function h(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=Jf)}function k(a,b,c,d){h(a,b);if(!c)return d&&qf(b,!1),x(a,b);c=b.stateNode;Kf.current=b;var e=c.render();b.effectTag|=Ff;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&qf(b,!0);return b.child}function p(a){var b=a.stateNode;b.pendingContext?\npf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&pf(a,b.context,!1);C(a,b.containerInfo)}function x(a,b){jf(a,b);return b.child}function S(a,b){switch(b.tag){case uf:p(b);break;case tf:of(b);break;case yf:C(b,b.stateNode.containerInfo)}return null}var D=a.shouldSetTextContent,y=a.useSyncScheduling,B=a.shouldDeprioritizeSubtree,H=b.pushHostContext,C=b.pushHostContainer,Ca=c.enterHydrationState,r=c.resetHydrationState,m=c.tryToClaimNextHydratableInstance;a=ef(d,e,function(a,b){a.memoizedProps=\nb},function(a,b){a.memoizedState=b});var t=a.adoptClassInstance,v=a.constructClassInstance,V=a.mountClassInstance,ld=a.updateClassInstance;return{beginWork:function(a,b,c){if(b.pendingWorkPriority===Df||b.pendingWorkPriority>c)return S(a,b);switch(b.tag){case rf:null!==a?w(\"155\"):void 0;var d=b.type,e=b.pendingProps,g=mf(b);g=lf(b,g);d=d(e,g);b.effectTag|=Ff;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=tf,e=of(b),t(b,d),V(b,c),b=k(a,b,!0,e)):(b.tag=sf,f(a,b,d),b.memoizedProps=\ne,b=b.child);return b;case sf:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(nf())null===c&&(c=d);else if(null===c||d===c){b=x(a,b);break a}d=mf(b);d=lf(b,d);e=e(c,d);b.effectTag|=Ff;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case tf:return e=of(b),d=void 0,null===a?b.stateNode?w(\"153\"):(v(b,b.pendingProps),V(b,c),d=!0):d=ld(a,b,c),k(a,b,d,e);case uf:return p(b),d=b.updateQueue,null!==d?(e=b.memoizedState,d=kf(a,b,d,null,e,null,c),e===d?(r(),b=x(a,b)):(e=d.element,null!==a&&null!==a.child||\n!Ca(b)?(r(),f(a,b,e)):(b.effectTag|=Gf,b.child=ff(b,b.child,e,c)),b.memoizedState=d,b=b.child)):(r(),b=x(a,b)),b;case wf:H(b);null===a&&m(b);e=b.type;var q=b.memoizedProps;d=b.pendingProps;null===d&&(d=q,null===d?w(\"154\"):void 0);g=null!==a?a.memoizedProps:null;nf()||null!==d&&q!==d?(q=d.children,D(e,d)?q=null:g&&D(e,g)&&(b.effectTag|=Hf),h(a,b),c!==Ef&&!y&&B(e,d)?(b.pendingWorkPriority=Ef,b=null):(f(a,b,q),b.memoizedProps=d,b=b.child)):b=x(a,b);return b;case xf:return null===a&&m(b),a=b.pendingProps,\nnull===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case Af:b.tag=zf;case zf:c=b.pendingProps;if(nf())null===c&&(c=a&&a.memoizedProps,null===c?w(\"154\"):void 0);else if(null===c||b.memoizedProps===c)c=b.memoizedProps;e=c.children;d=b.pendingWorkPriority;b.stateNode=null===a?ff(b,b.stateNode,e,d):a.child===b.child?gf(b,b.stateNode,e,d):hf(b,b.stateNode,e,d);b.memoizedProps=c;return b.stateNode;case Bf:return null;case yf:a:{C(b,b.stateNode.containerInfo);c=b.pendingWorkPriority;e=b.pendingProps;if(nf())null===\ne&&(e=a&&a.memoizedProps,null==e?w(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=x(a,b);break a}null===a?b.child=hf(b,b.child,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case Cf:a:{c=b.pendingProps;if(nf())null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=x(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:w(\"156\")}},beginFailedWork:function(a,b,c){switch(b.tag){case tf:of(b);break;case uf:p(b);break;default:w(\"157\")}b.effectTag|=If;null===a?\nb.child=null:b.child!==a.child&&(b.child=a.child);if(b.pendingWorkPriority===Df||b.pendingWorkPriority>c)return S(a,b);b.firstEffect=null;b.lastEffect=null;g(a,b,null,c);b.tag===tf&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nvar Mf=Se.reconcileChildFibers,Nf=R.popContextProvider,Of=R.popTopLevelContextObject,Pf=E.IndeterminateComponent,Qf=E.FunctionalComponent,Rf=E.ClassComponent,Sf=E.HostRoot,Tf=E.HostComponent,Uf=E.HostText,Vf=E.HostPortal,Wf=E.CoroutineComponent,Xf=E.CoroutineHandlerPhase,Yf=E.YieldComponent,Zf=E.Fragment,ag=J.Placement,bg=J.Ref,cg=J.Update,dg=Q.OffscreenPriority;\nfunction eg(a,b,c){var d=a.createInstance,e=a.createTextInstance,f=a.appendInitialChild,g=a.finalizeInitialChildren,h=a.prepareUpdate,k=b.getRootHostContainer,p=b.popHostContext,x=b.getHostContext,S=b.popHostContainer,D=c.prepareToHydrateHostInstance,y=c.prepareToHydrateHostTextInstance,B=c.popHydrationState;return{completeWork:function(a,b,c){var r=b.pendingProps;if(null===r)r=b.memoizedProps;else if(b.pendingWorkPriority!==dg||c===dg)b.pendingProps=null;switch(b.tag){case Qf:return null;case Rf:return Nf(b),\nnull;case Sf:S(b);Of(b);r=b.stateNode;r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null);if(null===a||null===a.child)B(b),b.effectTag&=~ag;return null;case Tf:p(b);c=k();var m=b.type;if(null!==a&&null!=b.stateNode){var t=a.memoizedProps,C=b.stateNode,V=x();r=h(C,m,t,r,c,V);if(b.updateQueue=r)b.effectTag|=cg;a.ref!==b.ref&&(b.effectTag|=bg)}else{if(!r)return null===b.stateNode?w(\"166\"):void 0,null;a=x();if(B(b))D(b,c,a)&&(b.effectTag|=cg);else{a=d(m,r,c,a,b);a:for(t=b.child;null!==\nt;){if(t.tag===Tf||t.tag===Uf)f(a,t.stateNode);else if(t.tag!==Vf&&null!==t.child){t=t.child;continue}if(t===b)break a;for(;null===t.sibling;){if(null===t[\"return\"]||t[\"return\"]===b)break a;t=t[\"return\"]}t=t.sibling}g(a,m,r,c)&&(b.effectTag|=cg);b.stateNode=a}null!==b.ref&&(b.effectTag|=bg)}return null;case Uf:if(a&&null!=b.stateNode)a.memoizedProps!==r&&(b.effectTag|=cg);else{if(\"string\"!==typeof r)return null===b.stateNode?w(\"166\"):void 0,null;a=k();c=x();B(b)?y(b)&&(b.effectTag|=cg):b.stateNode=\ne(r,a,c,b)}return null;case Wf:(r=b.memoizedProps)?void 0:w(\"165\");b.tag=Xf;c=[];a:for((m=b.stateNode)&&(m[\"return\"]=b);null!==m;){if(m.tag===Tf||m.tag===Uf||m.tag===Vf)w(\"164\");else if(m.tag===Yf)c.push(m.type);else if(null!==m.child){m.child[\"return\"]=m;m=m.child;continue}for(;null===m.sibling;){if(null===m[\"return\"]||m[\"return\"]===b)break a;m=m[\"return\"]}m.sibling[\"return\"]=m[\"return\"];m=m.sibling}m=r.handler;r=m(r.props,c);b.child=Mf(b,null!==a?a.child:null,r,b.pendingWorkPriority);return b.child;\ncase Xf:return b.tag=Wf,null;case Yf:return null;case Zf:return null;case Vf:return b.effectTag|=cg,S(b),null;case Pf:w(\"167\");default:w(\"156\")}}}}var fg=null,gg=null;function hg(a){return function(b){try{return a(b)}catch(c){}}}\nvar ig={injectInternals:function(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!b.supportsFiber)return!0;try{var c=b.inject(a);fg=hg(function(a){return b.onCommitFiberRoot(c,a)});gg=hg(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0},onCommitRoot:function(a){\"function\"===typeof fg&&fg(a)},onCommitUnmount:function(a){\"function\"===typeof gg&&gg(a)}},jg=E.ClassComponent,kg=E.HostRoot,lg=E.HostComponent,mg=E.HostText,ng=\nE.HostPortal,og=E.CoroutineComponent,pg=ud.commitCallbacks,qg=ig.onCommitUnmount,rg=J.Placement,sg=J.Update,tg=J.Callback,ug=J.ContentReset;\nfunction vg(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(t){b(a,t)}}function d(a){return a.tag===lg||a.tag===kg||a.tag===ng}function e(a){for(var b=a;;)if(g(b),null!==b.child&&b.tag!==ng)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}function f(a){for(var b=a,c=!1,d=void 0,f=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?w(\"160\"):void 0;switch(c.tag){case lg:d=\nc.stateNode;f=!1;break a;case kg:d=c.stateNode.containerInfo;f=!0;break a;case ng:d=c.stateNode.containerInfo;f=!0;break a}c=c[\"return\"]}c=!0}if(b.tag===lg||b.tag===mg)e(b),f?C(d,b.stateNode):H(d,b.stateNode);else if(b.tag===ng?d=b.stateNode.containerInfo:g(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];b.tag===ng&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}function g(a){\"function\"===\ntypeof qg&&qg(a);switch(a.tag){case jg:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(t){b(a,t)}break;case lg:c(a);break;case og:e(a.stateNode);break;case ng:f(a)}}var h=a.commitMount,k=a.commitUpdate,p=a.resetTextContent,x=a.commitTextUpdate,S=a.appendChild,D=a.appendChildToContainer,y=a.insertBefore,B=a.insertInContainerBefore,H=a.removeChild,C=a.removeChildFromContainer,Ca=a.getPublicInstance;\nreturn{commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(d(b)){var c=b;break a}b=b[\"return\"]}w(\"160\");c=void 0}var e=b=void 0;switch(c.tag){case lg:b=c.stateNode;e=!1;break;case kg:b=c.stateNode.containerInfo;e=!0;break;case ng:b=c.stateNode.containerInfo;e=!0;break;default:w(\"161\")}c.effectTag&ug&&(p(b),c.effectTag&=~ug);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||d(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;c.tag!==\nlg&&c.tag!==mg;){if(c.effectTag&rg)continue b;if(null===c.child||c.tag===ng)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&rg)){c=c.stateNode;break a}}for(var f=a;;){if(f.tag===lg||f.tag===mg)c?e?B(b,f.stateNode,c):y(b,f.stateNode,c):e?D(b,f.stateNode):S(b,f.stateNode);else if(f.tag!==ng&&null!==f.child){f.child[\"return\"]=f;f=f.child;continue}if(f===a)break;for(;null===f.sibling;){if(null===f[\"return\"]||f[\"return\"]===a)return;f=f[\"return\"]}f.sibling[\"return\"]=f[\"return\"];f=f.sibling}},\ncommitDeletion:function(a){f(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case jg:break;case lg:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&k(c,f,e,a,d,b)}break;case mg:null===b.stateNode?w(\"162\"):void 0;c=b.memoizedProps;x(b.stateNode,null!==a?a.memoizedProps:c,c);break;case kg:break;case ng:break;default:w(\"163\")}},\ncommitLifeCycles:function(a,b){switch(b.tag){case jg:var c=b.stateNode;if(b.effectTag&sg)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b.effectTag&tg&&null!==b.updateQueue&&pg(b,b.updateQueue,c);break;case kg:a=b.updateQueue;null!==a&&pg(b,a,b.child&&b.child.stateNode);break;case lg:c=b.stateNode;null===a&&b.effectTag&sg&&h(c,b.type,b.memoizedProps,\nb);break;case mg:break;case ng:break;default:w(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case lg:b(Ca(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var wg=xd.createCursor,xg=xd.pop,yg=xd.push,zg={};\nfunction Ag(a){function b(a){a===zg?w(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e=wg(zg),f=wg(zg),g=wg(zg);return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){xg(e,a);xg(f,a);xg(g,a)},popHostContext:function(a){f.current===a&&(xg(e,a),xg(f,a))},pushHostContainer:function(a,b){yg(g,b,a);b=d(b);yg(f,a,a);yg(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);d=c(h,a.type,\nd);h!==d&&(yg(f,a,a),yg(e,d,a))},resetHostContainer:function(){e.current=zg;g.current=zg}}}var Bg=E.HostComponent,Cg=E.HostText,Dg=E.HostRoot,Eg=J.Deletion,Fg=J.Placement,Gg=de.createFiberFromHostInstanceForDeletion;\nfunction Hg(a){function b(a,b){var c=Gg();c.stateNode=b;c[\"return\"]=a;c.effectTag=Eg;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case Bg:return f(b,a.type,a.pendingProps);case Cg:return g(b,a.pendingProps);default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&a.tag!==Bg&&a.tag!==Dg;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent,f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,\np=a.hydrateInstance,x=a.hydrateTextInstance,S=a.didNotHydrateInstance,D=a.didNotFindHydratableInstance;a=a.didNotFindHydratableTextInstance;if(!(f&&g&&h&&k&&p&&x&&S&&D&&a))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){w(\"175\")},prepareToHydrateHostTextInstance:function(){w(\"176\")},popHydrationState:function(){return!1}};var y=null,B=null,H=!1;return{enterHydrationState:function(a){B=\nk(a.stateNode.containerInfo);y=a;return H=!0},resetHydrationState:function(){B=y=null;H=!1},tryToClaimNextHydratableInstance:function(a){if(H){var d=B;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=Fg;H=!1;y=a;return}b(y,B)}a.stateNode=d;y=a;B=k(d)}else a.effectTag|=Fg,H=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=p(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return x(a.stateNode,a.memoizedProps,a)},\npopHydrationState:function(a){if(a!==y)return!1;if(!H)return d(a),H=!0,!1;var c=a.type;if(a.tag!==Bg||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=B;c;)b(a,c),c=h(c);d(a);B=y?h(a.stateNode):null;return!0}}}\nvar Ig=R.popContextProvider,Jg=xd.reset,Kg=Qa.ReactCurrentOwner,Lg=de.createWorkInProgress,Mg=de.largerPriority,Ng=ig.onCommitRoot,T=Q.NoWork,Og=Q.SynchronousPriority,U=Q.TaskPriority,Pg=Q.HighPriority,Qg=Q.LowPriority,Rg=Q.OffscreenPriority,Sg=Pd.AsyncUpdates,Tg=J.PerformedWork,Ug=J.Placement,Vg=J.Update,Wg=J.PlacementAndUpdate,Xg=J.Deletion,Yg=J.ContentReset,Zg=J.Callback,$g=J.Err,ah=J.Ref,bh=E.HostRoot,ch=E.HostComponent,dh=E.HostPortal,eh=E.ClassComponent,fh=ud.getUpdatePriority,gh=R.resetContext;\nfunction hh(a){function b(){for(;null!==ma&&ma.current.pendingWorkPriority===T;){ma.isScheduled=!1;var a=ma.nextScheduledRoot;ma.nextScheduledRoot=null;if(ma===zb)return zb=ma=null,z=T,null;ma=a}a=ma;for(var b=null,c=T;null!==a;)a.current.pendingWorkPriority!==T&&(c===T||c>a.current.pendingWorkPriority)&&(c=a.current.pendingWorkPriority,b=a),a=a.nextScheduledRoot;null!==b?(z=c,Jg(),gh(),t(),I=Lg(b.current,c),b!==nc&&(oc=0,nc=b)):(z=T,nc=I=null)}function c(c){Hd=!0;na=null;var d=c.stateNode;d.current===\nc?w(\"177\"):void 0;z!==Og&&z!==U||oc++;Kg.current=null;if(c.effectTag>Tg)if(null!==c.lastEffect){c.lastEffect.nextEffect=c;var e=c.firstEffect}else e=c;else e=c.firstEffect;Ui();for(u=e;null!==u;){var f=!1,g=void 0;try{for(;null!==u;){var h=u.effectTag;h&Yg&&a.resetTextContent(u.stateNode);if(h&ah){var k=u.alternate;null!==k&&Ph(k)}switch(h&~(Zg|$g|Yg|ah|Tg)){case Ug:q(u);u.effectTag&=~Ug;break;case Wg:q(u);u.effectTag&=~Ug;vf(u.alternate,u);break;case Vg:vf(u.alternate,u);break;case Xg:Id=!0,Mh(u),\nId=!1}u=u.nextEffect}}catch(Jd){f=!0,g=Jd}f&&(null===u?w(\"178\"):void 0,x(u,g),null!==u&&(u=u.nextEffect))}Vi();d.current=c;for(u=e;null!==u;){d=!1;e=void 0;try{for(;null!==u;){var Gd=u.effectTag;Gd&(Vg|Zg)&&Nh(u.alternate,u);Gd&ah&&Oh(u);if(Gd&$g)switch(f=u,g=void 0,null!==P&&(g=P.get(f),P[\"delete\"](f),null==g&&null!==f.alternate&&(f=f.alternate,g=P.get(f),P[\"delete\"](f))),null==g?w(\"184\"):void 0,f.tag){case eh:f.stateNode.componentDidCatch(g.error,{componentStack:g.componentStack});break;case bh:null===\nJa&&(Ja=g.error);break;default:w(\"157\")}var m=u.nextEffect;u.nextEffect=null;u=m}}catch(Jd){d=!0,e=Jd}d&&(null===u?w(\"178\"):void 0,x(u,e),null!==u&&(u=u.nextEffect))}Hd=!1;\"function\"===typeof Ng&&Ng(c.stateNode);va&&(va.forEach(H),va=null);b()}function d(a){for(;;){var b=Lh(a.alternate,a,z),c=a[\"return\"],d=a.sibling;var e=a;if(!(e.pendingWorkPriority!==T&&e.pendingWorkPriority>z)){for(var f=fh(e),g=e.child;null!==g;)f=Mg(f,g.pendingWorkPriority),g=g.sibling;e.pendingWorkPriority=f}if(null!==b)return b;\nnull!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),a.effectTag>Tg&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{na=a;break}}return null}function e(a){var b=V(a.alternate,a,z);null===b&&(b=d(a));Kg.current=null;return b}function f(a){var b=ld(a.alternate,a,z);null===b&&(b=d(a));Kg.current=null;return b}\nfunction g(a){p(Rg,a)}function h(){if(null!==P&&0<P.size&&z===U)for(;null!==I;){var a=I;I=null!==P&&(P.has(a)||null!==a.alternate&&P.has(a.alternate))?f(I):e(I);if(null===I&&(null===na?w(\"179\"):void 0,O=U,c(na),O=z,null===P||0===P.size||z!==U))break}}function k(a,d){null!==na?(O=U,c(na),h()):null===I&&b();if(!(z===T||z>a)){O=z;a:do{if(z<=U)for(;null!==I&&!(I=e(I),null===I&&(null===na?w(\"179\"):void 0,O=U,c(na),O=z,h(),z===T||z>a||z>U)););else if(null!==d)for(;null!==I&&!Ab;)if(1<d.timeRemaining()){if(I=\ne(I),null===I)if(null===na?w(\"179\"):void 0,1<d.timeRemaining()){if(O=U,c(na),O=z,h(),z===T||z>a||z<Pg)break}else Ab=!0}else Ab=!0;switch(z){case Og:case U:if(z<=a)continue a;break a;case Pg:case Qg:case Rg:if(null===d)break a;if(!Ab&&z<=a)continue a;break a;case T:break a;default:w(\"181\")}}while(1)}}function p(a,b){Da?w(\"182\"):void 0;Da=!0;var c=O,d=!1,e=null;try{k(a,b)}catch(Kd){d=!0,e=Kd}for(;d;){if(Ya){Ja=e;break}var h=I;if(null===h)Ya=!0;else{var p=x(h,e);null===p?w(\"183\"):void 0;if(!Ya){try{d=\np;e=a;p=b;for(var q=d;null!==h;){switch(h.tag){case eh:Ig(h);break;case ch:m(h);break;case bh:r(h);break;case dh:r(h)}if(h===q||h.alternate===q)break;h=h[\"return\"]}I=f(d);k(e,p)}catch(Kd){d=!0;e=Kd;continue}break}}}O=c;null!==b&&(Bb=!1);z>U&&!Bb&&($f(g),Bb=!0);a=Ja;Ya=Ab=Da=!1;nc=Ka=P=Ja=null;oc=0;if(null!==a)throw a;}function x(a,b){var c=Kg.current=null,d=!1,e=!1,f=null;if(a.tag===bh)c=a,S(a)&&(Ya=!0);else for(var g=a[\"return\"];null!==g&&null===c;){g.tag===eh?\"function\"===typeof g.stateNode.componentDidCatch&&\n(d=!0,f=Ra(g),c=g,e=!0):g.tag===bh&&(c=g);if(S(g)){if(Id||null!==va&&(va.has(g)||null!==g.alternate&&va.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===Ka&&(Ka=new Set);Ka.add(c);var h=\"\";g=a;do{a:switch(g.tag){case fe:case ge:case he:case ie:var k=g._debugOwner,m=g._debugSource;var p=Ra(g);var q=null;k&&(q=Ra(k));k=m;p=\"\\n    in \"+(p||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":q?\" (created by \"+q+\")\":\"\");break a;default:p=\"\"}h+=p;g=g[\"return\"]}while(g);\ng=h;a=Ra(a);null===P&&(P=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};P.set(c,b);try{console.error(b.error)}catch(Wi){console.error(Wi)}Hd?(null===va&&(va=new Set),va.add(c)):H(c);return c}null===Ja&&(Ja=b);return null}function S(a){return null!==Ka&&(Ka.has(a)||null!==a.alternate&&Ka.has(a.alternate))}function D(a,b){return y(a,b,!1)}function y(a,b){oc>Xi&&(Ya=!0,w(\"185\"));!Da&&b<=z&&(I=null);for(var c=\n!0;null!==a&&c;){c=!1;if(a.pendingWorkPriority===T||a.pendingWorkPriority>b)c=!0,a.pendingWorkPriority=b;null!==a.alternate&&(a.alternate.pendingWorkPriority===T||a.alternate.pendingWorkPriority>b)&&(c=!0,a.alternate.pendingWorkPriority=b);if(null===a[\"return\"])if(a.tag===bh){var d=a.stateNode;b===T||d.isScheduled||(d.isScheduled=!0,zb?zb.nextScheduledRoot=d:ma=d,zb=d);if(!Da)switch(b){case Og:pc?p(Og,null):p(U,null);break;case U:W?void 0:w(\"186\");break;default:Bb||($f(g),Bb=!0)}}else break;a=a[\"return\"]}}\nfunction B(a,b){var c=O;c===T&&(c=!Yi||a.internalContextTag&Sg||b?Qg:Og);return c===Og&&(Da||W)?U:c}function H(a){y(a,U,!0)}var C=Ag(a),Ca=Hg(a),r=C.popHostContainer,m=C.popHostContext,t=C.resetHostContainer,v=Lf(a,C,Ca,D,B),V=v.beginWork,ld=v.beginFailedWork,Lh=eg(a,C,Ca).completeWork;C=vg(a,x);var q=C.commitPlacement,Mh=C.commitDeletion,vf=C.commitWork,Nh=C.commitLifeCycles,Oh=C.commitAttachRef,Ph=C.commitDetachRef,$f=a.scheduleDeferredCallback,Yi=a.useSyncScheduling,Ui=a.prepareForCommit,Vi=a.resetAfterCommit,\nO=T,Da=!1,Ab=!1,W=!1,pc=!1,I=null,z=T,u=null,na=null,ma=null,zb=null,Bb=!1,P=null,Ka=null,va=null,Ja=null,Ya=!1,Hd=!1,Id=!1,Xi=1E3,oc=0,nc=null;return{scheduleUpdate:D,getPriorityContext:B,batchedUpdates:function(a,b){var c=W;W=!0;try{return a(b)}finally{W=c,Da||W||p(U,null)}},unbatchedUpdates:function(a){var b=pc,c=W;pc=W;W=!1;try{return a()}finally{W=c,pc=b}},flushSync:function(a){var b=W,c=O;W=!0;O=Og;try{return a()}finally{W=b,O=c,Da?w(\"187\"):void 0,p(U,null)}},deferredUpdates:function(a){var b=\nO;O=Qg;try{return a()}finally{O=b}}}}function ih(){w(\"196\")}function jh(a){if(!a)return da;a=Pa.get(a);return\"number\"===typeof a.tag?ih(a):a._processChildContext(a._context)}jh._injectFiber=function(a){ih=a};var kh=ud.addTopLevelUpdate,lh=R.findCurrentUnmaskedContext,mh=R.isContextProvider,nh=R.processChildContext,oh=E.HostComponent,ph=bb.findCurrentHostFiber,qh=bb.findCurrentHostFiberWithNoPortals;jh._injectFiber(function(a){var b=lh(a);return mh(a)?nh(a,b,!1):b});var rh=F.TEXT_NODE;\nfunction sh(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function th(a,b){var c=sh(a);a=0;for(var d;c;){if(c.nodeType===rh){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=sh(c)}}var uh=null;function vh(){!uh&&l.canUseDOM&&(uh=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return uh}\nvar wh={getOffsets:function(a){var b=window.getSelection&&window.getSelection();if(!b||0===b.rangeCount)return null;var c=b.anchorNode,d=b.anchorOffset,e=b.focusNode,f=b.focusOffset,g=b.getRangeAt(0);try{g.startContainer.nodeType,g.endContainer.nodeType}catch(k){return null}b=b.anchorNode===b.focusNode&&b.anchorOffset===b.focusOffset?0:g.toString().length;var h=g.cloneRange();h.selectNodeContents(a);h.setEnd(g.startContainer,g.startOffset);a=h.startContainer===h.endContainer&&h.startOffset===h.endOffset?\n0:h.toString().length;g=a+b;b=document.createRange();b.setStart(c,d);b.setEnd(e,f);c=b.collapsed;return{start:c?g:a,end:c?a:g}},setOffsets:function(a,b){if(window.getSelection){var c=window.getSelection(),d=a[vh()].length,e=Math.min(b.start,d);b=void 0===b.end?e:Math.min(b.end,d);!c.extend&&e>b&&(d=b,b=e,e=d);d=th(a,e);a=th(a,b);if(d&&a){var f=document.createRange();f.setStart(d.node,d.offset);c.removeAllRanges();e>b?(c.addRange(f),c.extend(a.node,a.offset)):(f.setEnd(a.node,a.offset),c.addRange(f))}}}},\nxh=F.ELEMENT_NODE,yh={hasSelectionCapabilities:function(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)},getSelectionInformation:function(){var a=ia();return{focusedElem:a,selectionRange:yh.hasSelectionCapabilities(a)?yh.getSelection(a):null}},restoreSelection:function(a){var b=ia(),c=a.focusedElem;a=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){yh.hasSelectionCapabilities(c)&&yh.setSelection(c,a);b=\n[];for(a=c;a=a.parentNode;)a.nodeType===xh&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ha(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}},getSelection:function(a){return(\"selectionStart\"in a?{start:a.selectionStart,end:a.selectionEnd}:wh.getOffsets(a))||{start:0,end:0}},setSelection:function(a,b){var c=b.start,d=b.end;void 0===d&&(d=c);\"selectionStart\"in a?(a.selectionStart=c,a.selectionEnd=Math.min(d,a.value.length)):wh.setOffsets(a,b)}},zh=yh,\nAh=F.ELEMENT_NODE;function Bh(){w(\"211\")}function Ch(){w(\"212\")}function Dh(a){if(null==a)return null;if(a.nodeType===Ah)return a;var b=Pa.get(a);if(b)return\"number\"===typeof b.tag?Bh(b):Ch(b);\"function\"===typeof a.render?w(\"188\"):w(\"213\",Object.keys(a))}Dh._injectFiber=function(a){Bh=a};Dh._injectStack=function(a){Ch=a};var Eh=E.HostComponent;function Fh(a){if(void 0!==a._hostParent)return a._hostParent;if(\"number\"===typeof a.tag){do a=a[\"return\"];while(a&&a.tag!==Eh);if(a)return a}return null}\nfunction Gh(a,b){for(var c=0,d=a;d;d=Fh(d))c++;d=0;for(var e=b;e;e=Fh(e))d++;for(;0<c-d;)a=Fh(a),c--;for(;0<d-c;)b=Fh(b),d--;for(;c--;){if(a===b||a===b.alternate)return a;a=Fh(a);b=Fh(b)}return null}\nvar Hh={isAncestor:function(a,b){for(;b;){if(a===b||a===b.alternate)return!0;b=Fh(b)}return!1},getLowestCommonAncestor:Gh,getParentInstance:function(a){return Fh(a)},traverseTwoPhase:function(a,b,c){for(var d=[];a;)d.push(a),a=Fh(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)},traverseEnterLeave:function(a,b,c,d,e){for(var f=a&&b?Gh(a,b):null,g=[];a&&a!==f;)g.push(a),a=Fh(a);for(a=[];b&&b!==f;)a.push(b),b=Fh(b);for(b=0;b<g.length;b++)c(g[b],\"bubbled\",d);for(b=\na.length;0<b--;)c(a[b],\"captured\",e)}},Ih=Jb.getListener;function Jh(a,b,c){if(b=Ih(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Cb(c._dispatchListeners,b),c._dispatchInstances=Cb(c._dispatchInstances,a)}function Kh(a){a&&a.dispatchConfig.phasedRegistrationNames&&Hh.traverseTwoPhase(a._targetInst,Jh,a)}function Qh(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?Hh.getParentInstance(b):null;Hh.traverseTwoPhase(b,Jh,a)}}\nfunction Rh(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ih(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Cb(c._dispatchListeners,b),c._dispatchInstances=Cb(c._dispatchInstances,a))}function Sh(a){a&&a.dispatchConfig.registrationName&&Rh(a._targetInst,null,a)}\nvar Th={accumulateTwoPhaseDispatches:function(a){Db(a,Kh)},accumulateTwoPhaseDispatchesSkipTarget:function(a){Db(a,Qh)},accumulateDirectDispatches:function(a){Db(a,Sh)},accumulateEnterLeaveDispatches:function(a,b,c,d){Hh.traverseEnterLeave(c,d,Rh,a,b)}},X={_root:null,_startText:null,_fallbackText:null},Uh={initialize:function(a){X._root=a;X._startText=Uh.getText();return!0},reset:function(){X._root=null;X._startText=null;X._fallbackText=null},getData:function(){if(X._fallbackText)return X._fallbackText;\nvar a,b=X._startText,c=b.length,d,e=Uh.getText(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);X._fallbackText=e.slice(a,1<d?1-d:void 0);return X._fallbackText},getText:function(){return\"value\"in X._root?X._root.value:X._root[vh()]}},Vh=Uh,Wh=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Xh={type:null,target:null,currentTarget:ca.thatReturnsNull,eventPhase:null,bubbles:null,\ncancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction Y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?ca.thatReturnsTrue:ca.thatReturnsFalse;this.isPropagationStopped=ca.thatReturnsFalse;return this}\nn(Y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=ca.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=ca.thatReturnsTrue)},persist:function(){this.isPersistent=ca.thatReturnsTrue},isPersistent:ca.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Wh.length;a++)this[Wh[a]]=null}});Y.Interface=Xh;Y.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;n(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=n({},this.Interface,b);a.augmentClass=this.augmentClass;Yh(a)};Yh(Y);function Zh(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction $h(a){a instanceof this?void 0:w(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Yh(a){a.eventPool=[];a.getPooled=Zh;a.release=$h}function ai(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(ai,{data:null});function bi(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(bi,{data:null});var ci=[9,13,27,32],di=l.canUseDOM&&\"CompositionEvent\"in window,ei=null;l.canUseDOM&&\"documentMode\"in document&&(ei=document.documentMode);var fi;\nif(fi=l.canUseDOM&&\"TextEvent\"in window&&!ei){var gi=window.opera;fi=!(\"object\"===typeof gi&&\"function\"===typeof gi.version&&12>=parseInt(gi.version(),10))}\nvar hi=fi,ii=l.canUseDOM&&(!di||ei&&8<ei&&11>=ei),ji=String.fromCharCode(32),ki={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},li=!1;\nfunction mi(a,b){switch(a){case \"topKeyUp\":return-1!==ci.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ni(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var oi=!1;function pi(a,b){switch(a){case \"topCompositionEnd\":return ni(b);case \"topKeyPress\":if(32!==b.which)return null;li=!0;return ji;case \"topTextInput\":return a=b.data,a===ji&&li?null:a;default:return null}}\nfunction qi(a,b){if(oi)return\"topCompositionEnd\"===a||!di&&mi(a,b)?(a=Vh.getData(),Vh.reset(),oi=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return ii?null:b.data;default:return null}}\nvar ri={eventTypes:ki,extractEvents:function(a,b,c,d){var e;if(di)b:{switch(a){case \"topCompositionStart\":var f=ki.compositionStart;break b;case \"topCompositionEnd\":f=ki.compositionEnd;break b;case \"topCompositionUpdate\":f=ki.compositionUpdate;break b}f=void 0}else oi?mi(a,c)&&(f=ki.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=ki.compositionStart);f?(ii&&(oi||f!==ki.compositionStart?f===ki.compositionEnd&&oi&&(e=Vh.getData()):oi=Vh.initialize(d)),f=ai.getPooled(f,b,c,d),e?f.data=e:(e=ni(c),\nnull!==e&&(f.data=e)),Th.accumulateTwoPhaseDispatches(f),e=f):e=null;(a=hi?pi(a,c):qi(a,c))?(b=bi.getPooled(ki.beforeInput,b,c,d),b.data=a,Th.accumulateTwoPhaseDispatches(b)):b=null;return[e,b]}},si={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ti(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!si[a.type]:\"textarea\"===b?!0:!1}\nvar ui={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function vi(a,b,c){a=Y.getPooled(ui.change,a,b,c);a.type=\"change\";nb.enqueueStateRestore(c);Th.accumulateTwoPhaseDispatches(a);return a}var wi=null,xi=null;function yi(a){Jb.enqueueEvents(a);Jb.processEventQueue(!1)}\nfunction zi(a){var b=G.getNodeFromInstance(a);if(Bc.updateValueIfChanged(b))return a}function Ai(a,b){if(\"topChange\"===a)return b}var Bi=!1;l.canUseDOM&&(Bi=Lb(\"input\")&&(!document.documentMode||9<document.documentMode));function Ci(){wi&&(wi.detachEvent(\"onpropertychange\",Di),xi=wi=null)}function Di(a){\"value\"===a.propertyName&&zi(xi)&&(a=vi(xi,a,ub(a)),sb.batchedUpdates(yi,a))}function Ei(a,b,c){\"topFocus\"===a?(Ci(),wi=b,xi=c,wi.attachEvent(\"onpropertychange\",Di)):\"topBlur\"===a&&Ci()}\nfunction Fi(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return zi(xi)}function Gi(a,b){if(\"topClick\"===a)return zi(b)}function Hi(a,b){if(\"topInput\"===a||\"topChange\"===a)return zi(b)}\nvar Ii={eventTypes:ui,_isInputEventSupported:Bi,extractEvents:function(a,b,c,d){var e=b?G.getNodeFromInstance(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Ai;else if(ti(e))if(Bi)g=Hi;else{g=Fi;var h=Ei}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Gi);if(g&&(g=g(a,b)))return vi(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,\ne.getAttribute(\"value\")!==a&&e.setAttribute(\"value\",a))}};function Ji(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(Ji,{view:function(a){if(a.view)return a.view;a=ub(a);return a.window===a?a:(a=a.ownerDocument)?a.defaultView||a.parentWindow:window},detail:function(a){return a.detail||0}});var Ki={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Li(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Ki[a])?!!b[a]:!1}function Mi(){return Li}\nfunction Ni(a,b,c,d){return Y.call(this,a,b,c,d)}Ji.augmentClass(Ni,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mi,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar Oi={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},Pi={eventTypes:Oi,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?G.getClosestInstanceFromNode(b):\nnull):a=null;if(a===b)return null;var f=null==a?e:G.getNodeFromInstance(a);e=null==b?e:G.getNodeFromInstance(b);var g=Ni.getPooled(Oi.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=Ni.getPooled(Oi.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Th.accumulateEnterLeaveDispatches(g,c,a,b);return[g,c]}},Qi=F.DOCUMENT_NODE,Ri=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Si={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},\ndependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Ti=null,Zi=null,$i=null,aj=!1,bj=M.isListeningToAllDependencies;\nfunction cj(a,b){if(aj||null==Ti||Ti!==ia())return null;var c=Ti;\"selectionStart\"in c&&zh.hasSelectionCapabilities(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return $i&&ea($i,c)?null:($i=c,a=Y.getPooled(Si.select,Zi,a,b),a.type=\"select\",a.target=Ti,Th.accumulateTwoPhaseDispatches(a),a)}\nvar dj={eventTypes:Si,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:d.nodeType===Qi?d:d.ownerDocument;if(!e||!bj(\"onSelect\",e))return null;e=b?G.getNodeFromInstance(b):window;switch(a){case \"topFocus\":if(ti(e)||\"true\"===e.contentEditable)Ti=e,Zi=b,$i=null;break;case \"topBlur\":$i=Zi=Ti=null;break;case \"topMouseDown\":aj=!0;break;case \"topContextMenu\":case \"topMouseUp\":return aj=!1,cj(c,d);case \"topSelectionChange\":if(Ri)break;case \"topKeyDown\":case \"topKeyUp\":return cj(c,d)}return null}};\nfunction ej(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(ej,{animationName:null,elapsedTime:null,pseudoElement:null});function fj(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(fj,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function gj(a,b,c,d){return Y.call(this,a,b,c,d)}Ji.augmentClass(gj,{relatedTarget:null});function hj(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar ij={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},jj={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function kj(a,b,c,d){return Y.call(this,a,b,c,d)}\nJi.augmentClass(kj,{key:function(a){if(a.key){var b=ij[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=hj(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?jj[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mi,charCode:function(a){return\"keypress\"===a.type?hj(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?hj(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function lj(a,b,c,d){return Y.call(this,a,b,c,d)}Ni.augmentClass(lj,{dataTransfer:null});function mj(a,b,c,d){return Y.call(this,a,b,c,d)}Ji.augmentClass(mj,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mi});function nj(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(nj,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction oj(a,b,c,d){return Y.call(this,a,b,c,d)}Ni.augmentClass(oj,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var pj={},qj={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};pj[a]=c;qj[b]=c});\nvar rj={eventTypes:pj,extractEvents:function(a,b,c,d){var e=qj[a];if(!e)return null;switch(a){case \"topAbort\":case \"topCancel\":case \"topCanPlay\":case \"topCanPlayThrough\":case \"topClose\":case \"topDurationChange\":case \"topEmptied\":case \"topEncrypted\":case \"topEnded\":case \"topError\":case \"topInput\":case \"topInvalid\":case \"topLoad\":case \"topLoadedData\":case \"topLoadedMetadata\":case \"topLoadStart\":case \"topPause\":case \"topPlay\":case \"topPlaying\":case \"topProgress\":case \"topRateChange\":case \"topReset\":case \"topSeeked\":case \"topSeeking\":case \"topStalled\":case \"topSubmit\":case \"topSuspend\":case \"topTimeUpdate\":case \"topToggle\":case \"topVolumeChange\":case \"topWaiting\":var f=Y;\nbreak;case \"topKeyPress\":if(0===hj(c))return null;case \"topKeyDown\":case \"topKeyUp\":f=kj;break;case \"topBlur\":case \"topFocus\":f=gj;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":f=Ni;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":f=lj;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":f=\nmj;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":f=ej;break;case \"topTransitionEnd\":f=nj;break;case \"topScroll\":f=Ji;break;case \"topWheel\":f=oj;break;case \"topCopy\":case \"topCut\":case \"topPaste\":f=fj}f?void 0:w(\"86\",a);a=f.getPooled(e,b,c,d);Th.accumulateTwoPhaseDispatches(a);return a}};L.setHandleTopLevel(M.handleTopLevel);Jb.injection.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nib.injection.injectComponentTree(G);Jb.injection.injectEventPluginsByName({SimpleEventPlugin:rj,EnterLeaveEventPlugin:Pi,ChangeEventPlugin:Ii,SelectEventPlugin:dj,BeforeInputEventPlugin:ri});\nvar sj=A.injection.MUST_USE_PROPERTY,Z=A.injection.HAS_BOOLEAN_VALUE,tj=A.injection.HAS_NUMERIC_VALUE,uj=A.injection.HAS_POSITIVE_NUMERIC_VALUE,vj=A.injection.HAS_STRING_BOOLEAN_VALUE,wj={Properties:{allowFullScreen:Z,allowTransparency:vj,async:Z,autoPlay:Z,capture:Z,checked:sj|Z,cols:uj,contentEditable:vj,controls:Z,\"default\":Z,defer:Z,disabled:Z,download:A.injection.HAS_OVERLOADED_BOOLEAN_VALUE,draggable:vj,formNoValidate:Z,hidden:Z,loop:Z,multiple:sj|Z,muted:sj|Z,noValidate:Z,open:Z,playsInline:Z,\nreadOnly:Z,required:Z,reversed:Z,rows:uj,rowSpan:tj,scoped:Z,seamless:Z,selected:sj|Z,size:uj,start:tj,span:uj,spellCheck:vj,style:0,itemScope:Z,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:vj},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&\na.ownerDocument.activeElement!==a&&a.setAttribute(\"value\",\"\"+b)}}},xj=A.injection.HAS_STRING_BOOLEAN_VALUE,yj={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},zj={Properties:{autoReverse:xj,externalResourcesRequired:xj,preserveAlpha:xj},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:yj.xlink,xlinkArcrole:yj.xlink,xlinkHref:yj.xlink,xlinkRole:yj.xlink,\nxlinkShow:yj.xlink,xlinkTitle:yj.xlink,xlinkType:yj.xlink,xmlBase:yj.xml,xmlLang:yj.xml,xmlSpace:yj.xml}},Aj=/[\\-\\:]([a-z])/g;function Bj(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Aj,\nBj);zj.Properties[b]=0;zj.DOMAttributeNames[b]=a});A.injection.injectDOMPropertyConfig(wj);A.injection.injectDOMPropertyConfig(zj);\nvar Cj=ig.injectInternals,Dj=F.ELEMENT_NODE,Ej=F.TEXT_NODE,Fj=F.COMMENT_NODE,Gj=F.DOCUMENT_NODE,Hj=F.DOCUMENT_FRAGMENT_NODE,Ij=A.ROOT_ATTRIBUTE_NAME,Jj=ka.getChildNamespace,Kj=N.createElement,Lj=N.createTextNode,Mj=N.setInitialProperties,Nj=N.diffProperties,Oj=N.updateProperties,Pj=N.diffHydratedProperties,Qj=N.diffHydratedText,Rj=N.warnForDeletedHydratableElement,Sj=N.warnForDeletedHydratableText,Tj=N.warnForInsertedHydratedElement,Uj=N.warnForInsertedHydratedText,Vj=G.precacheFiberNode,Wj=G.updateFiberProps;\nnb.injection.injectFiberControlledHostComponent(N);Dh._injectFiber(function(a){return Xj.findHostInstance(a)});var Yj=null,Zj=null;function ak(a){return!(!a||a.nodeType!==Dj&&a.nodeType!==Gj&&a.nodeType!==Hj&&(a.nodeType!==Fj||\" react-mount-point-unstable \"!==a.nodeValue))}function bk(a){a=a?a.nodeType===Gj?a.documentElement:a.firstChild:null;return!(!a||a.nodeType!==Dj||!a.hasAttribute(Ij))}\nvar Xj=function(a){var b=a.getPublicInstance;a=hh(a);var c=a.scheduleUpdate,d=a.getPriorityContext;return{createContainer:function(a){var b=ee();a={current:b,containerInfo:a,isScheduled:!1,nextScheduledRoot:null,context:null,pendingContext:null};return b.stateNode=a},updateContainer:function(a,b,g,h){var e=b.current;g=jh(g);null===b.context?b.context=g:b.pendingContext=g;b=h;h=d(e,ed.enableAsyncSubtreeAPI&&null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent);\na={element:a};kh(e,a,void 0===b?null:b,h);c(e,h)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case oh:return b(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:function(a){a=ph(a);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=qh(a);return null===a?null:a.stateNode}}}({getRootHostContext:function(a){if(a.nodeType===\nGj)a=(a=a.documentElement)?a.namespaceURI:Jj(null,\"\");else{var b=a.nodeType===Fj?a.parentNode:a;a=b.namespaceURI||null;b=b.tagName;a=Jj(a,b)}return a},getChildHostContext:function(a,b){return Jj(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){Yj=M.isEnabled();Zj=zh.getSelectionInformation();M.setEnabled(!1)},resetAfterCommit:function(){zh.restoreSelection(Zj);Zj=null;M.setEnabled(Yj);Yj=null},createInstance:function(a,b,c,d,e){a=Kj(a,b,c,d);Vj(e,a);Wj(a,b);return a},appendInitialChild:function(a,\nb){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){Mj(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return Nj(a,b,c,d,e)},commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){Wj(a,e);Oj(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\n\"string\"===typeof b.dangerouslySetInnerHTML.__html},resetTextContent:function(a){a.textContent=\"\"},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=Lj(a,b);Vj(d,a);return a},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){a.nodeType===Fj?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,\nb,c){a.nodeType===Fj?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){a.nodeType===Fj?a.parentNode.removeChild(b):a.removeChild(b)},canHydrateInstance:function(a,b){return a.nodeType===Dj&&b===a.nodeName.toLowerCase()},canHydrateTextInstance:function(a,b){return\"\"===b?!1:a.nodeType===Ej},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&a.nodeType!==Dj&&a.nodeType!==Ej;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=\na.firstChild;a&&a.nodeType!==Dj&&a.nodeType!==Ej;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){Vj(f,a);Wj(a,c);return Pj(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){Vj(c,a);return Qj(a,b)},didNotHydrateInstance:function(a,b){1===b.nodeType?Rj(a,b):Sj(a,b)},didNotFindHydratableInstance:function(a,b,c){Tj(a,b,c)},didNotFindHydratableTextInstance:function(a,b){Uj(a,b)},scheduleDeferredCallback:dd.rIC,useSyncScheduling:!0});sb.injection.injectFiberBatchedUpdates(Xj.batchedUpdates);\nfunction ck(a,b,c,d,e){ak(c)?void 0:w(\"200\");var f=c._reactRootContainer;if(f)Xj.updateContainer(b,f,a,e);else{if(!d&&!bk(c))for(d=void 0;d=c.lastChild;)c.removeChild(d);var g=Xj.createContainer(c);f=c._reactRootContainer=g;Xj.unbatchedUpdates(function(){Xj.updateContainer(b,g,a,e)})}return Xj.getPublicRootInstance(f)}function dk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ak(b)?void 0:w(\"200\");return ne.createPortal(a,b,null,c)}\nvar ek={createPortal:dk,hydrate:function(a,b,c){return ck(null,a,b,!0,c)},render:function(a,b,c){return ck(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null!=a&&Pa.has(a)?void 0:w(\"38\");return ck(a,b,c,!1,d)},unmountComponentAtNode:function(a){ak(a)?void 0:w(\"40\");return a._reactRootContainer?(Xj.unbatchedUpdates(function(){ck(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},findDOMNode:Dh,unstable_createPortal:dk,unstable_batchedUpdates:sb.batchedUpdates,\nunstable_deferredUpdates:Xj.deferredUpdates,flushSync:Xj.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Jb,EventPluginRegistry:sa,EventPropagators:Th,ReactControlledComponent:nb,ReactDOMComponentTree:G,ReactDOMEventListener:L}};Cj({findFiberByHostInstance:G.getClosestInstanceFromNode,findHostInstanceByFiber:Xj.findHostInstance,bundleType:0,version:\"16.0.0\",rendererPackageName:\"react-dom\"});module.exports=ek;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = __webpack_require__(8);\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (false) {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(45);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(46);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 50 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__logo_svg__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__logo_svg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__logo_svg__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var dummyBrainJson=__webpack_require__(55);// eslint-disable-line\nvar _require=__webpack_require__(56),DatacubeView=_require.DatacubeView;var App=function(_Component){_inherits(App,_Component);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,(App.__proto__||Object.getPrototypeOf(App)).apply(this,arguments));}_createClass(App,[{key:'componentDidMount',value:function(){var _ref=_asyncToGenerator(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(){var _this2=this;var res,data,views,animationQueue,renderAllViews;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:renderAllViews=function renderAllViews(view){++animationQueue;window.requestAnimationFrame(function(){if(animationQueue)return--animationQueue;var toRender=views.filter(function(v){return v!==view;});toRender.forEach(function(otherView){otherView.position=view.position;otherView.render();});--animationQueue;});};_context.next=3;return window.fetch(dummyBrainJson);case 3:res=_context.sent;_context.next=6;return res.json();case 6:data=_context.sent;views=[{data:data,node:this.a,axis:'x',matchCanvasToData:true},{data:data,node:this.b,axis:'y',matchCanvasToData:true},{data:data,node:this.c,axis:'z',matchCanvasToData:true}].map(function(view){return new DatacubeView(view);});animationQueue=-1;views.forEach(function(view){view.onMouseMove=renderAllViews.bind(_this2);});case 10:case'end':return _context.stop();}}},_callee,this);}));function componentDidMount(){return _ref.apply(this,arguments);}return componentDidMount;}()},{key:'render',value:function render(){var _this3=this;return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{className:'App'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('header',{className:'App-header'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('img',{src:__WEBPACK_IMPORTED_MODULE_2__logo_svg___default.a,width:'100px',alt:'logo'}),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('h1',{className:'App-title'},'datacube-image-slicer')),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{className:'brains'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{className:'brain-col brains-left'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('figure',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{style:{float:'right'}},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('canvas',{id:'a',className:'brain-slice brain-slice-a',ref:function ref(a){_this3.a=a;}}),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('canvas',{id:'b',className:'brain-slice brain-slice-b',ref:function ref(b){_this3.b=b;}})),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('figcaption',{className:'left-caption'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('p',{className:'caption-xy'},'x-y'),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('p',{className:'caption-xz'},'x-z'))))),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{className:'brain-col brains-right'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('figure',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('canvas',{id:'c',className:'brain-slice  brain-slice-c',ref:function ref(c){_this3.c=c;}}),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('figcaption',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('p',{className:'caption-yz'},'y-z')))))),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('p',null,'Hover your mouse over the above frames.'),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('hr',null),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('iframe',{style:{border:0,width:'100%',height:'100%'},src:'docs/',title:'api-docs'}));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (App);\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(52);\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(53);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/logo.803bab53.svg\";\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"6e91c334bbc4d659b19412aeef096b62.json\";\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Datacube: __webpack_require__(20),\n  DatacubeView: __webpack_require__(101)\n}\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseTimes = __webpack_require__(58),\n    castFunction = __webpack_require__(59),\n    toInteger = __webpack_require__(61);\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar identity = __webpack_require__(60);\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toFinite = __webpack_require__(62);\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toNumber = __webpack_require__(63);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(64),\n    isSymbol = __webpack_require__(65);\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(66),\n    isObjectLike = __webpack_require__(71);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(21),\n    getRawTag = __webpack_require__(69),\n    objectToString = __webpack_require__(70);\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar freeGlobal = __webpack_require__(68);\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(21);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(73);\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFactory = __webpack_require__(0).isFactory;\nvar typedFactory = __webpack_require__(74);\nvar emitter = __webpack_require__(22);\n\nvar importFactory = __webpack_require__(78);\nvar configFactory = __webpack_require__(80);\n\n/**\n * Math.js core. Creates a new, empty math.js instance\n * @param {Object} [options] Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\nexports.create = function create (options) {\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' +\n    'Please load the es5-shim and es5-sham library for compatibility.');\n  }\n\n  // cached factories and instances\n  var factories = [];\n  var instances = [];\n\n  // create a namespace for the mathjs instance, and attach emitter functions\n  var math = emitter.mixin({});\n  math.type = {};\n  math.expression = {\n    transform: {},\n    mathWithTransform: {}\n  };\n\n  // create a new typed instance\n  math.typed = typedFactory.create(math.type);\n\n  // create configuration options. These are private\n  var _config = {\n    // minimum relative difference between two compared values,\n    // used by all comparison functions\n    epsilon: 1e-12,\n\n    // type of default matrix output. Choose 'matrix' (default) or 'array'\n    matrix: 'Matrix',\n\n    // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n    number: 'number',\n\n    // number of significant digits in BigNumbers\n    precision: 64,\n\n    // predictable output type of functions. When true, output type depends only\n    // on the input types. When false (default), output type can vary depending\n    // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n    // predictable is false, and returns `NaN` when true.\n    predictable: false,\n\n    // random seed for seeded pseudo random number generation\n    // null = randomly seed\n    randomSeed: null\n  };\n\n  /**\n   * Load a function or data type from a factory.\n   * If the function or data type already exists, the existing instance is\n   * returned.\n   * @param {{type: string, name: string, factory: Function}} factory\n   * @returns {*}\n   */\n  function load (factory) {\n    if (!isFactory(factory)) {\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = factories.indexOf(factory);\n    var instance;\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, _config, load, math.typed, math);\n      }\n      else {\n        instance = factory.factory(math.type, _config, load, math.typed);\n      }\n\n      // append to the cache\n      factories.push(factory);\n      instances.push(instance);\n    }\n    else {\n      // already existing function, return the cached instance\n      instance = instances[index];\n    }\n\n    return instance;\n  }\n\n  // load the import and config functions\n  math['import'] = load(importFactory);\n  math['config'] = load(configFactory);\n  math.expression.mathWithTransform['config'] = math['config']\n\n  // apply options\n  if (options) {\n    math.config(options);\n  }\n\n  return math;\n};\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar typedFunction = __webpack_require__(75);\nvar digits = __webpack_require__(1).digits;\nvar isBigNumber = __webpack_require__(9);\nvar isMatrix = __webpack_require__(76);\n\n// returns a new instance of typed-function\nvar createTyped = function () {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  createTyped = typedFunction.create;\n  return typedFunction;\n};\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} type   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexports.create = function create(type) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // type checks for all known types\n  //\n  // note that:\n  //\n  // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n  //   instanceof cannot be used because that would not allow to pass data from\n  //   one instance of math.js to another since each has it's own instance of Unit.\n  // - check the `isUnit` property via the constructor, so there will be no\n  //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n  //   That is important for security reasons.\n  // - It must not be possible to override the type checks used internally,\n  //   for security reasons, so these functions are not exposed in the expression\n  //   parser.\n  type.isNumber = function (x) { return typeof x === 'number' };\n  type.isComplex = function (x) { return type.Complex && x instanceof type.Complex || false };\n  type.isBigNumber = isBigNumber;\n  type.isFraction = function (x) { return type.Fraction && x instanceof type.Fraction || false };\n  type.isUnit = function (x) { return x && x.constructor.prototype.isUnit || false };\n  type.isString = function (x) { return typeof x === 'string' };\n  type.isArray = Array.isArray;\n  type.isMatrix = isMatrix;\n  type.isDenseMatrix = function (x) { return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false };\n  type.isSparseMatrix = function (x) { return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false };\n  type.isRange = function (x) { return x && x.constructor.prototype.isRange || false };\n  type.isIndex = function (x) { return x && x.constructor.prototype.isIndex || false };\n  type.isBoolean = function (x) { return typeof x === 'boolean' };\n  type.isResultSet = function (x) { return x && x.constructor.prototype.isResultSet || false };\n  type.isHelp = function (x) { return x && x.constructor.prototype.isHelp || false };\n  type.isFunction = function (x) { return typeof x === 'function'};\n  type.isDate = function (x) { return x instanceof Date };\n  type.isRegExp = function (x) { return x instanceof RegExp };\n  type.isObject = function (x) { return typeof x === 'object' };\n  type.isNull = function (x) { return x === null };\n  type.isUndefined = function (x) { return x === undefined };\n\n  type.isAccessorNode = function (x) { return x && x.isAccessorNode && x.constructor.prototype.isNode || false };\n  type.isArrayNode = function (x) { return x && x.isArrayNode && x.constructor.prototype.isNode || false };\n  type.isAssignmentNode = function (x) { return x && x.isAssignmentNode && x.constructor.prototype.isNode || false };\n  type.isBlockNode = function (x) { return x && x.isBlockNode && x.constructor.prototype.isNode || false };\n  type.isConditionalNode = function (x) { return x && x.isConditionalNode && x.constructor.prototype.isNode || false };\n  type.isConstantNode = function (x) { return x && x.isConstantNode && x.constructor.prototype.isNode || false };\n  type.isFunctionAssignmentNode = function (x) { return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false };\n  type.isFunctionNode = function (x) { return x && x.isFunctionNode && x.constructor.prototype.isNode || false };\n  type.isIndexNode = function (x) { return x && x.isIndexNode && x.constructor.prototype.isNode || false };\n  type.isNode = function (x) { return x && x.isNode && x.constructor.prototype.isNode || false };\n  type.isObjectNode = function (x) { return x && x.isObjectNode && x.constructor.prototype.isNode || false };\n  type.isOperatorNode = function (x) { return x && x.isOperatorNode && x.constructor.prototype.isNode || false };\n  type.isParenthesisNode = function (x) { return x && x.isParenthesisNode && x.constructor.prototype.isNode || false };\n  type.isRangeNode = function (x) { return x && x.isRangeNode && x.constructor.prototype.isNode || false };\n  type.isSymbolNode = function (x) { return x && x.isSymbolNode && x.constructor.prototype.isNode || false };\n\n  type.isChain = function (x) { return x && x.constructor.prototype.isChain || false };\n\n  // get a new instance of typed-function\n  var typed = createTyped();\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.types = [\n    { name: 'number',          test: type.isNumber },\n    { name: 'Complex',         test: type.isComplex },\n    { name: 'BigNumber',       test: type.isBigNumber },\n    { name: 'Fraction',        test: type.isFraction },\n    { name: 'Unit',            test: type.isUnit },\n    { name: 'string',          test: type.isString },\n    { name: 'Array',           test: type.isArray },\n    { name: 'Matrix',          test: type.isMatrix },\n    { name: 'DenseMatrix',     test: type.isDenseMatrix },\n    { name: 'SparseMatrix',    test: type.isSparseMatrix },\n    { name: 'Range',           test: type.isRange },\n    { name: 'Index',           test: type.isIndex },\n    { name: 'boolean',         test: type.isBoolean },\n    { name: 'ResultSet',       test: type.isResultSet },\n    { name: 'Help',            test: type.isHelp },\n    { name: 'function',        test: type.isFunction },\n    { name: 'Date',            test: type.isDate },\n    { name: 'RegExp',          test: type.isRegExp },\n    { name: 'Object',          test: type.isObject },\n    { name: 'null',            test: type.isNull },\n    { name: 'undefined',       test: type.isUndefined },\n\n    { name: 'OperatorNode',    test: type.isOperatorNode },\n    { name: 'ConstantNode',    test: type.isConstantNode },\n    { name: 'SymbolNode',      test: type.isSymbolNode },\n    { name: 'ParenthesisNode', test: type.isParenthesisNode },\n    { name: 'FunctionNode',    test: type.isFunctionNode },\n    { name: 'FunctionAssignmentNode',    test: type.isFunctionAssignmentNode },\n    { name: 'ArrayNode',                 test: type.isArrayNode },\n    { name: 'AssignmentNode',            test: type.isAssignmentNode },\n    { name: 'BlockNode',                 test: type.isBlockNode },\n    { name: 'ConditionalNode',           test: type.isConditionalNode },\n    { name: 'IndexNode',                 test: type.isIndexNode },\n    { name: 'RangeNode',                 test: type.isRangeNode },\n    { name: 'Node',                      test: type.isNode }\n  ];\n\n  // TODO: add conversion from BigNumber to number?\n  typed.conversions = [\n    {\n      from: 'number',\n      to: 'BigNumber',\n      convert: function (x) {\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' +\n          '(value: ' + x + '). ' +\n          'Use function bignumber(x) to convert to BigNumber.');\n        }\n        return new type.BigNumber(x);\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x, 0);\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function (x) {\n        return x + '';\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x.toNumber(), 0);\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function (x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' +\n            'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x.valueOf(), 0);\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function (x) {\n        var f = new type.Fraction(x);\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' +\n              '(value: ' + x + '). ' +\n              'Use function fraction(x) to convert to Fraction.');\n        }\n        return new type.Fraction(x);\n      }\n    }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf();\n    //  }\n    //}, {\n      from: 'string',\n      to: 'number',\n      convert: function (x) {\n        var n = Number(x);\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number');\n        }\n        return n;\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function (x) {\n        try {\n          return new type.BigNumber(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function (x) {\n        try {\n          return new type.Fraction(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function (x) {\n        try {\n          return new type.Complex(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex');\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function (x) {\n        return +x;\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function (x) {\n        return new type.BigNumber(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function (x) {\n        return new type.Fraction(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function (x) {\n        return +x;\n      }\n    }, {\n      from: 'null',\n      to: 'number',\n      convert: function () {\n        return 0;\n      }\n    }, {\n      from: 'null',\n      to: 'string',\n      convert: function () {\n        return 'null';\n      }\n    }, {\n      from: 'null',\n      to: 'BigNumber',\n      convert: function () {\n        return new type.BigNumber(0);\n      }\n    }, {\n      from: 'null',\n      to: 'Fraction',\n      convert: function () {\n        return new type.Fraction(0);\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function (array) {\n        // TODO: how to decide on the right type of matrix to create?\n        return new type.DenseMatrix(array);\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function (matrix) {\n        return matrix.valueOf();\n      }\n    }\n  ];\n\n  return typed;\n};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n\n\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n  // factory function to create a new instance of typed-function\n  // TODO: allow passing configuration, types, tests via the factory function\n  function create() {\n    /**\n     * Get a type test function for a specific data type\n     * @param {string} name                   Name of a data type like 'number' or 'string'\n     * @returns {Function(obj: *) : boolean}  Returns a type testing function.\n     *                                        Throws an error for an unknown type.\n     */\n    function getTypeTest(name) {\n      var test;\n      for (var i = 0; i < typed.types.length; i++) {\n        var entry = typed.types[i];\n        if (entry.name === name) {\n          test = entry.test;\n          break;\n        }\n      }\n\n      if (!test) {\n        var hint;\n        for (i = 0; i < typed.types.length; i++) {\n          entry = typed.types[i];\n          if (entry.name.toLowerCase() == name.toLowerCase()) {\n            hint = entry.name;\n            break;\n          }\n        }\n\n        throw new Error('Unknown type \"' + name + '\"' +\n            (hint ? ('. Did you mean \"' + hint + '\"?') : ''));\n      }\n      return test;\n    }\n\n    /**\n     * Retrieve the function name from a set of functions, and check\n     * whether the name of all functions match (if given)\n     * @param {Array.<function>} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // merge function name when this is a typed function\n        if (fn.signatures && fn.name != '') {\n          if (name == '') {\n            name = fn.name;\n          }\n          else if (name != fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    /**\n     * Create an ArgumentsError. Creates messages like:\n     *\n     *   Unexpected type of argument (expected: ..., actual: ..., index: ...)\n     *   Too few arguments (expected: ..., index: ...)\n     *   Too many arguments (expected: ..., actual: ...)\n     *\n     * @param {String} fn         Function name\n     * @param {number} argCount   Number of arguments\n     * @param {Number} index      Current argument index\n     * @param {*} actual          Current argument\n     * @param {string} [expected] An optional, comma separated string with\n     *                            expected types on given index\n     * @extends Error\n     */\n    function createError(fn, argCount, index, actual, expected) {\n      var actualType = getTypeOf(actual);\n      var _expected = expected ? expected.split(',') : null;\n      var _fn = (fn || 'unnamed');\n      var anyType = _expected && contains(_expected, 'any');\n      var message;\n      var data = {\n        fn: fn,\n        index: index,\n        actual: actual,\n        expected: _expected\n      };\n\n      if (_expected) {\n        if (argCount > index && !anyType) {\n          // unexpected type\n          message = 'Unexpected type of argument in function ' + _fn +\n              ' (expected: ' + _expected.join(' or ') + ', actual: ' + actualType + ', index: ' + index + ')';\n        }\n        else {\n          // too few arguments\n          message = 'Too few arguments in function ' + _fn +\n              ' (expected: ' + _expected.join(' or ') + ', index: ' + index + ')';\n        }\n      }\n      else {\n        // too many arguments\n        message = 'Too many arguments in function ' + _fn +\n            ' (expected: ' + index + ', actual: ' + argCount + ')'\n      }\n\n      var err = new TypeError(message);\n      err.data = data;\n      return err;\n    }\n\n    /**\n     * Collection with function references (local shortcuts to functions)\n     * @constructor\n     * @param {string} [name='refs']  Optional name for the refs, used to generate\n     *                                JavaScript code\n     */\n    function Refs(name) {\n      this.name = name || 'refs';\n      this.categories = {};\n    }\n\n    /**\n     * Add a function reference.\n     * @param {Function} fn\n     * @param {string} [category='fn']    A function category, like 'fn' or 'signature'\n     * @returns {string} Returns the function name, for example 'fn0' or 'signature2'\n     */\n    Refs.prototype.add = function (fn, category) {\n      var cat = category || 'fn';\n      if (!this.categories[cat]) this.categories[cat] = [];\n\n      var index = this.categories[cat].indexOf(fn);\n      if (index == -1) {\n        index = this.categories[cat].length;\n        this.categories[cat].push(fn);\n      }\n\n      return cat + index;\n    };\n\n    /**\n     * Create code lines for all function references\n     * @returns {string} Returns the code containing all function references\n     */\n    Refs.prototype.toCode = function () {\n      var code = [];\n      var path = this.name + '.categories';\n      var categories = this.categories;\n\n      for (var cat in categories) {\n        if (categories.hasOwnProperty(cat)) {\n          var category = categories[cat];\n\n          for (var i = 0; i < category.length; i++) {\n            code.push('var ' + cat + i + ' = ' + path + '[\\'' + cat + '\\'][' + i + '];');\n          }\n        }\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * A function parameter\n     * @param {string | string[] | Param} types    A parameter type like 'string',\n     *                                             'number | boolean'\n     * @param {boolean} [varArgs=false]            Variable arguments if true\n     * @constructor\n     */\n    function Param(types, varArgs) {\n      // parse the types, can be a string with types separated by pipe characters |\n      if (typeof types === 'string') {\n        // parse variable arguments operator (ellipses '...number')\n        var _types = types.trim();\n        var _varArgs = _types.substr(0, 3) === '...';\n        if (_varArgs) {\n          _types = _types.substr(3);\n        }\n        if (_types === '') {\n          this.types = ['any'];\n        }\n        else {\n          this.types = _types.split('|');\n          for (var i = 0; i < this.types.length; i++) {\n            this.types[i] = this.types[i].trim();\n          }\n        }\n      }\n      else if (Array.isArray(types)) {\n        this.types = types;\n      }\n      else if (types instanceof Param) {\n        return types.clone();\n      }\n      else {\n        throw new Error('String or Array expected');\n      }\n\n      // can hold a type to which to convert when handling this parameter\n      this.conversions = [];\n      // TODO: implement better API for conversions, be able to add conversions via constructor (support a new type Object?)\n\n      // variable arguments\n      this.varArgs = _varArgs || varArgs || false;\n\n      // check for any type arguments\n      this.anyType = this.types.indexOf('any') !== -1;\n    }\n\n    /**\n     * Order Params\n     * any type ('any') will be ordered last, and object as second last (as other\n     * types may be an object as well, like Array).\n     *\n     * @param {Param} a\n     * @param {Param} b\n     * @returns {number} Returns 1 if a > b, -1 if a < b, and else 0.\n     */\n    Param.compare = function (a, b) {\n      // TODO: simplify parameter comparison, it's a mess\n      if (a.anyType) return 1;\n      if (b.anyType) return -1;\n\n      if (contains(a.types, 'Object')) return 1;\n      if (contains(b.types, 'Object')) return -1;\n\n      if (a.hasConversions()) {\n        if (b.hasConversions()) {\n          var i, ac, bc;\n\n          for (i = 0; i < a.conversions.length; i++) {\n            if (a.conversions[i] !== undefined) {\n              ac = a.conversions[i];\n              break;\n            }\n          }\n\n          for (i = 0; i < b.conversions.length; i++) {\n            if (b.conversions[i] !== undefined) {\n              bc = b.conversions[i];\n              break;\n            }\n          }\n\n          return typed.conversions.indexOf(ac) - typed.conversions.indexOf(bc);\n        }\n        else {\n          return 1;\n        }\n      }\n      else {\n        if (b.hasConversions()) {\n          return -1;\n        }\n        else {\n          // both params have no conversions\n          var ai, bi;\n\n          for (i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === a.types[0]) {\n              ai = i;\n              break;\n            }\n          }\n\n          for (i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === b.types[0]) {\n              bi = i;\n              break;\n            }\n          }\n\n          return ai - bi;\n        }\n      }\n    };\n\n    /**\n     * Test whether this parameters types overlap an other parameters types.\n     * Will not match ['any'] with ['number']\n     * @param {Param} other\n     * @return {boolean} Returns true when there are overlapping types\n     */\n    Param.prototype.overlapping = function (other) {\n      for (var i = 0; i < this.types.length; i++) {\n        if (contains(other.types, this.types[i])) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Test whether this parameters types matches an other parameters types.\n     * When any of the two parameters contains `any`, true is returned\n     * @param {Param} other\n     * @return {boolean} Returns true when there are matching types\n     */\n    Param.prototype.matches = function (other) {\n      return this.anyType || other.anyType || this.overlapping(other);\n    };\n\n    /**\n     * Create a clone of this param\n     * @returns {Param} Returns a cloned version of this param\n     */\n    Param.prototype.clone = function () {\n      var param = new Param(this.types.slice(), this.varArgs);\n      param.conversions = this.conversions.slice();\n      return param;\n    };\n\n    /**\n     * Test whether this parameter contains conversions\n     * @returns {boolean} Returns true if the parameter contains one or\n     *                    multiple conversions.\n     */\n    Param.prototype.hasConversions = function () {\n      return this.conversions.length > 0;\n    };\n\n    /**\n     * Tests whether this parameters contains any of the provided types\n     * @param {Object} types  A Map with types, like {'number': true}\n     * @returns {boolean}     Returns true when the parameter contains any\n     *                        of the provided types\n     */\n    Param.prototype.contains = function (types) {\n      for (var i = 0; i < this.types.length; i++) {\n        if (types[this.types[i]]) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Return a string representation of this params types, like 'string' or\n     * 'number | boolean' or '...number'\n     * @param {boolean} [toConversion]   If true, the returned types string\n     *                                   contains the types where the parameter\n     *                                   will convert to. If false (default)\n     *                                   the \"from\" types are returned\n     * @returns {string}\n     */\n    Param.prototype.toString = function (toConversion) {\n      var types = [];\n      var keys = {};\n\n      for (var i = 0; i < this.types.length; i++) {\n        var conversion = this.conversions[i];\n        var type = toConversion && conversion ? conversion.to : this.types[i];\n        if (!(type in keys)) {\n          keys[type] = true;\n          types.push(type);\n        }\n      }\n\n      return (this.varArgs ? '...' : '') + types.join('|');\n    };\n\n    /**\n     * A function signature\n     * @param {string | string[] | Param[]} params\n     *                         Array with the type(s) of each parameter,\n     *                         or a comma separated string with types\n     * @param {Function} fn    The actual function\n     * @constructor\n     */\n    function Signature(params, fn) {\n      var _params;\n      if (typeof params === 'string') {\n        _params = (params !== '') ? params.split(',') : [];\n      }\n      else if (Array.isArray(params)) {\n        _params = params;\n      }\n      else {\n        throw new Error('string or Array expected');\n      }\n\n      this.params = new Array(_params.length);\n      this.anyType = false;\n      this.varArgs = false;\n      for (var i = 0; i < _params.length; i++) {\n        var param = new Param(_params[i]);\n        this.params[i] = param;\n        if (param.anyType) {\n          this.anyType = true;\n        }\n        if (i === _params.length - 1) {\n          // the last argument\n          this.varArgs = param.varArgs;\n        }\n        else {\n          // non-last argument\n          if (param.varArgs) {\n            throw new SyntaxError('Unexpected variable arguments operator \"...\"');\n          }\n        }\n      }\n\n      this.fn = fn;\n    }\n\n    /**\n     * Create a clone of this signature\n     * @returns {Signature} Returns a cloned version of this signature\n     */\n    Signature.prototype.clone = function () {\n      return new Signature(this.params.slice(), this.fn);\n    };\n\n    /**\n     * Expand a signature: split params with union types in separate signatures\n     * For example split a Signature \"string | number\" into two signatures.\n     * @return {Signature[]} Returns an array with signatures (at least one)\n     */\n    Signature.prototype.expand = function () {\n      var signatures = [];\n\n      function recurse(signature, path) {\n        if (path.length < signature.params.length) {\n          var i, newParam, conversion;\n\n          var param = signature.params[path.length];\n          if (param.varArgs) {\n            // a variable argument. do not split the types in the parameter\n            newParam = param.clone();\n\n            // add conversions to the parameter\n            // recurse for all conversions\n            for (i = 0; i < typed.conversions.length; i++) {\n              conversion = typed.conversions[i];\n              if (!contains(param.types, conversion.from) && contains(param.types, conversion.to)) {\n                var j = newParam.types.length;\n                newParam.types[j] = conversion.from;\n                newParam.conversions[j] = conversion;\n              }\n            }\n\n            recurse(signature, path.concat(newParam));\n          }\n          else {\n            // split each type in the parameter\n            for (i = 0; i < param.types.length; i++) {\n              recurse(signature, path.concat(new Param(param.types[i])));\n            }\n\n            // recurse for all conversions\n            for (i = 0; i < typed.conversions.length; i++) {\n              conversion = typed.conversions[i];\n              if (!contains(param.types, conversion.from) && contains(param.types, conversion.to)) {\n                newParam = new Param(conversion.from);\n                newParam.conversions[0] = conversion;\n                recurse(signature, path.concat(newParam));\n              }\n            }\n          }\n        }\n        else {\n          signatures.push(new Signature(path, signature.fn));\n        }\n      }\n\n      recurse(this, []);\n\n      return signatures;\n    };\n\n    /**\n     * Compare two signatures.\n     *\n     * When two params are equal and contain conversions, they will be sorted\n     * by lowest index of the first conversions.\n     *\n     * @param {Signature} a\n     * @param {Signature} b\n     * @returns {number} Returns 1 if a > b, -1 if a < b, and else 0.\n     */\n    Signature.compare = function (a, b) {\n      if (a.params.length > b.params.length) return 1;\n      if (a.params.length < b.params.length) return -1;\n\n      // count the number of conversions\n      var i;\n      var len = a.params.length; // a and b have equal amount of params\n      var ac = 0;\n      var bc = 0;\n      for (i = 0; i < len; i++) {\n        if (a.params[i].hasConversions()) ac++;\n        if (b.params[i].hasConversions()) bc++;\n      }\n\n      if (ac > bc) return 1;\n      if (ac < bc) return -1;\n\n      // compare the order per parameter\n      for (i = 0; i < a.params.length; i++) {\n        var cmp = Param.compare(a.params[i], b.params[i]);\n        if (cmp !== 0) {\n          return cmp;\n        }\n      }\n\n      return 0;\n    };\n\n    /**\n     * Test whether any of the signatures parameters has conversions\n     * @return {boolean} Returns true when any of the parameters contains\n     *                   conversions.\n     */\n    Signature.prototype.hasConversions = function () {\n      for (var i = 0; i < this.params.length; i++) {\n        if (this.params[i].hasConversions()) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Test whether this signature should be ignored.\n     * Checks whether any of the parameters contains a type listed in\n     * typed.ignore\n     * @return {boolean} Returns true when the signature should be ignored\n     */\n    Signature.prototype.ignore = function () {\n      // create a map with ignored types\n      var types = {};\n      for (var i = 0; i < typed.ignore.length; i++) {\n        types[typed.ignore[i]] = true;\n      }\n\n      // test whether any of the parameters contains this type\n      for (i = 0; i < this.params.length; i++) {\n        if (this.params[i].contains(types)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    /**\n     * Test whether the path of this signature matches a given path.\n     * @param {Param[]} params\n     */\n    Signature.prototype.paramsStartWith = function (params) {\n      if (params.length === 0) {\n        return true;\n      }\n\n      var aLast = last(this.params);\n      var bLast = last(params);\n\n      for (var i = 0; i < params.length; i++) {\n        var a = this.params[i] || (aLast.varArgs ? aLast: null);\n        var b = params[i]      || (bLast.varArgs ? bLast: null);\n\n        if (!a ||  !b || !a.matches(b)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Generate the code to invoke this signature\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns code\n     */\n    Signature.prototype.toCode = function (refs, prefix) {\n      var code = [];\n\n      var args = new Array(this.params.length);\n      for (var i = 0; i < this.params.length; i++) {\n        var param = this.params[i];\n        var conversion = param.conversions[0];\n        if (param.varArgs) {\n          args[i] = 'varArgs';\n        }\n        else if (conversion) {\n          args[i] = refs.add(conversion.convert, 'convert') + '(arg' + i + ')';\n        }\n        else {\n          args[i] = 'arg' + i;\n        }\n      }\n\n      var ref = this.fn ? refs.add(this.fn, 'signature') : undefined;\n      if (ref) {\n        return prefix + 'return ' + ref + '(' + args.join(', ') + '); // signature: ' + this.params.join(', ');\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * Return a string representation of the signature\n     * @returns {string}\n     */\n    Signature.prototype.toString = function () {\n      return this.params.join(', ');\n    };\n\n    /**\n     * A group of signatures with the same parameter on given index\n     * @param {Param[]} path\n     * @param {Signature} [signature]\n     * @param {Node[]} childs\n     * @param {boolean} [fallThrough=false]\n     * @constructor\n     */\n    function Node(path, signature, childs, fallThrough) {\n      this.path = path || [];\n      this.param = path[path.length - 1] || null;\n      this.signature = signature || null;\n      this.childs = childs || [];\n      this.fallThrough = fallThrough || false;\n    }\n\n    /**\n     * Generate code for this group of signatures\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the code as string\n     */\n    Node.prototype.toCode = function (refs, prefix) {\n      // TODO: split this function in multiple functions, it's too large\n      var code = [];\n\n      if (this.param) {\n        var index = this.path.length - 1;\n        var conversion = this.param.conversions[0];\n        var comment = '// type: ' + (conversion ?\n                (conversion.from + ' (convert to ' + conversion.to + ')') :\n                this.param);\n\n        // non-root node (path is non-empty)\n        if (this.param.varArgs) {\n          if (this.param.anyType) {\n            // variable arguments with any type\n            code.push(prefix + 'if (arguments.length > ' + index + ') {');\n            code.push(prefix + '  var varArgs = [];');\n            code.push(prefix + '  for (var i = ' + index + '; i < arguments.length; i++) {');\n            code.push(prefix + '    varArgs.push(arguments[i]);');\n            code.push(prefix + '  }');\n            code.push(this.signature.toCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n          else {\n            // variable arguments with a fixed type\n            var getTests = function (types, arg) {\n              var tests = [];\n              for (var i = 0; i < types.length; i++) {\n                tests[i] = refs.add(getTypeTest(types[i]), 'test') + '(' + arg + ')';\n              }\n              return tests.join(' || ');\n            }.bind(this);\n\n            var allTypes = this.param.types;\n            var exactTypes = [];\n            for (var i = 0; i < allTypes.length; i++) {\n              if (this.param.conversions[i] === undefined) {\n                exactTypes.push(allTypes[i]);\n              }\n            }\n\n            code.push(prefix + 'if (' + getTests(allTypes, 'arg' + index) + ') { ' + comment);\n            code.push(prefix + '  var varArgs = [arg' + index + '];');\n            code.push(prefix + '  for (var i = ' + (index + 1) + '; i < arguments.length; i++) {');\n            code.push(prefix + '    if (' + getTests(exactTypes, 'arguments[i]') + ') {');\n            code.push(prefix + '      varArgs.push(arguments[i]);');\n\n            for (var i = 0; i < allTypes.length; i++) {\n              var conversion_i = this.param.conversions[i];\n              if (conversion_i) {\n                var test = refs.add(getTypeTest(allTypes[i]), 'test');\n                var convert = refs.add(conversion_i.convert, 'convert');\n                code.push(prefix + '    }');\n                code.push(prefix + '    else if (' + test + '(arguments[i])) {');\n                code.push(prefix + '      varArgs.push(' + convert + '(arguments[i]));');\n              }\n            }\n            code.push(prefix + '    } else {');\n            code.push(prefix + '      throw createError(name, arguments.length, i, arguments[i], \\'' + exactTypes.join(',') + '\\');');\n            code.push(prefix + '    }');\n            code.push(prefix + '  }');\n            code.push(this.signature.toCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n        }\n        else {\n          if (this.param.anyType) {\n            // any type\n            code.push(prefix + '// type: any');\n            code.push(this._innerCode(refs, prefix));\n          }\n          else {\n            // regular type\n            var type = this.param.types[0];\n            var test = type !== 'any' ? refs.add(getTypeTest(type), 'test') : null;\n\n            code.push(prefix + 'if (' + test + '(arg' + index + ')) { ' + comment);\n            code.push(this._innerCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n        }\n      }\n      else {\n        // root node (path is empty)\n        code.push(this._innerCode(refs, prefix));\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * Generate inner code for this group of signatures.\n     * This is a helper function of Node.prototype.toCode\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the inner code as string\n     * @private\n     */\n    Node.prototype._innerCode = function (refs, prefix) {\n      var code = [];\n      var i;\n\n      if (this.signature) {\n        code.push(prefix + 'if (arguments.length === ' + this.path.length + ') {');\n        code.push(this.signature.toCode(refs, prefix + '  '));\n        code.push(prefix + '}');\n      }\n\n      for (i = 0; i < this.childs.length; i++) {\n        code.push(this.childs[i].toCode(refs, prefix));\n      }\n\n      // TODO: shouldn't the this.param.anyType check be redundant\n      if (!this.fallThrough || (this.param && this.param.anyType)) {\n        var exceptions = this._exceptions(refs, prefix);\n        if (exceptions) {\n          code.push(exceptions);\n        }\n      }\n\n      return code.join('\\n');\n    };\n\n\n    /**\n     * Generate code to throw exceptions\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the inner code as string\n     * @private\n     */\n    Node.prototype._exceptions = function (refs, prefix) {\n      var index = this.path.length;\n\n      if (this.childs.length === 0) {\n        // TODO: can this condition be simplified? (we have a fall-through here)\n        return [\n          prefix + 'if (arguments.length > ' + index + ') {',\n          prefix + '  throw createError(name, arguments.length, ' + index + ', arguments[' + index + ']);',\n          prefix + '}'\n        ].join('\\n');\n      }\n      else {\n        var keys = {};\n        var types = [];\n\n        for (var i = 0; i < this.childs.length; i++) {\n          var node = this.childs[i];\n          if (node.param) {\n            for (var j = 0; j < node.param.types.length; j++) {\n              var type = node.param.types[j];\n              if (!(type in keys) && !node.param.conversions[j]) {\n                keys[type] = true;\n                types.push(type);\n              }\n            }\n          }\n        }\n\n        return prefix + 'throw createError(name, arguments.length, ' + index + ', arguments[' + index + '], \\'' + types.join(',') + '\\');';\n      }\n    };\n\n    /**\n     * Split all raw signatures into an array with expanded Signatures\n     * @param {Object.<string, Function>} rawSignatures\n     * @return {Signature[]} Returns an array with expanded signatures\n     */\n    function parseSignatures(rawSignatures) {\n      // FIXME: need to have deterministic ordering of signatures, do not create via object\n      var signature;\n      var keys = {};\n      var signatures = [];\n      var i;\n\n      for (var types in rawSignatures) {\n        if (rawSignatures.hasOwnProperty(types)) {\n          var fn = rawSignatures[types];\n          signature = new Signature(types, fn);\n\n          if (signature.ignore()) {\n            continue;\n          }\n\n          var expanded = signature.expand();\n\n          for (i = 0; i < expanded.length; i++) {\n            var signature_i = expanded[i];\n            var key = signature_i.toString();\n            var existing = keys[key];\n            if (!existing) {\n              keys[key] = signature_i;\n            }\n            else {\n              var cmp = Signature.compare(signature_i, existing);\n              if (cmp < 0) {\n                // override if sorted first\n                keys[key] = signature_i;\n              }\n              else if (cmp === 0) {\n                throw new Error('Signature \"' + key + '\" is defined twice');\n              }\n              // else: just ignore\n            }\n          }\n        }\n      }\n\n      // convert from map to array\n      for (key in keys) {\n        if (keys.hasOwnProperty(key)) {\n          signatures.push(keys[key]);\n        }\n      }\n\n      // order the signatures\n      signatures.sort(function (a, b) {\n        return Signature.compare(a, b);\n      });\n\n      // filter redundant conversions from signatures with varArgs\n      // TODO: simplify this loop or move it to a separate function\n      for (i = 0; i < signatures.length; i++) {\n        signature = signatures[i];\n\n        if (signature.varArgs) {\n          var index = signature.params.length - 1;\n          var param = signature.params[index];\n\n          var t = 0;\n          while (t < param.types.length) {\n            if (param.conversions[t]) {\n              var type = param.types[t];\n\n              for (var j = 0; j < signatures.length; j++) {\n                var other = signatures[j];\n                var p = other.params[index];\n\n                if (other !== signature &&\n                    p &&\n                    contains(p.types, type) && !p.conversions[index]) {\n                  // this (conversion) type already exists, remove it\n                  param.types.splice(t, 1);\n                  param.conversions.splice(t, 1);\n                  t--;\n                  break;\n                }\n              }\n            }\n            t++;\n          }\n        }\n      }\n\n      return signatures;\n    }\n\n    /**\n     * Filter all any type signatures\n     * @param {Signature[]} signatures\n     * @return {Signature[]} Returns only any type signatures\n     */\n    function filterAnyTypeSignatures (signatures) {\n      var filtered = [];\n\n      for (var i = 0; i < signatures.length; i++) {\n        if (signatures[i].anyType) {\n          filtered.push(signatures[i]);\n        }\n      }\n\n      return filtered;\n    }\n\n    /**\n     * create a map with normalized signatures as key and the function as value\n     * @param {Signature[]} signatures   An array with split signatures\n     * @return {Object.<string, Function>} Returns a map with normalized\n     *                                     signatures as key, and the function\n     *                                     as value.\n     */\n    function mapSignatures(signatures) {\n      var normalized = {};\n\n      for (var i = 0; i < signatures.length; i++) {\n        var signature = signatures[i];\n        if (signature.fn && !signature.hasConversions()) {\n          var params = signature.params.join(',');\n          normalized[params] = signature.fn;\n        }\n      }\n\n      return normalized;\n    }\n\n    /**\n     * Parse signatures recursively in a node tree.\n     * @param {Signature[]} signatures  Array with expanded signatures\n     * @param {Param[]} path            Traversed path of parameter types\n     * @param {Signature[]} anys\n     * @return {Node}                   Returns a node tree\n     */\n    function parseTree(signatures, path, anys) {\n      var i, signature;\n      var index = path.length;\n      var nodeSignature;\n\n      var filtered = [];\n      for (i = 0; i < signatures.length; i++) {\n        signature = signatures[i];\n\n        // filter the first signature with the correct number of params\n        if (signature.params.length === index && !nodeSignature) {\n          nodeSignature = signature;\n        }\n\n        if (signature.params[index] != undefined) {\n          filtered.push(signature);\n        }\n      }\n\n      // sort the filtered signatures by param\n      filtered.sort(function (a, b) {\n        return Param.compare(a.params[index], b.params[index]);\n      });\n\n      // recurse over the signatures\n      var entries = [];\n      for (i = 0; i < filtered.length; i++) {\n        signature = filtered[i];\n        // group signatures with the same param at current index\n        var param = signature.params[index];\n\n        // TODO: replace the next filter loop\n        var existing = entries.filter(function (entry) {\n          return entry.param.overlapping(param);\n        })[0];\n\n        //var existing;\n        //for (var j = 0; j < entries.length; j++) {\n        //  if (entries[j].param.overlapping(param)) {\n        //    existing = entries[j];\n        //    break;\n        //  }\n        //}\n\n        if (existing) {\n          if (existing.param.varArgs) {\n            throw new Error('Conflicting types \"' + existing.param + '\" and \"' + param + '\"');\n          }\n          existing.signatures.push(signature);\n        }\n        else {\n          entries.push({\n            param: param,\n            signatures: [signature]\n          });\n        }\n      }\n\n      // find all any type signature that can still match our current path\n      var matchingAnys = [];\n      for (i = 0; i < anys.length; i++) {\n        if (anys[i].paramsStartWith(path)) {\n          matchingAnys.push(anys[i]);\n        }\n      }\n\n      // see if there are any type signatures that don't match any of the\n      // signatures that we have in our tree, i.e. we have alternative\n      // matching signature(s) outside of our current tree and we should\n      // fall through to them instead of throwing an exception\n      var fallThrough = false;\n      for (i = 0; i < matchingAnys.length; i++) {\n        if (!contains(signatures, matchingAnys[i])) {\n          fallThrough = true;\n          break;\n        }\n      }\n\n      // parse the childs\n      var childs = new Array(entries.length);\n      for (i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n        childs[i] = parseTree(entry.signatures, path.concat(entry.param), matchingAnys)\n      }\n\n      return new Node(path, nodeSignature, childs, fallThrough);\n    }\n\n    /**\n     * Generate an array like ['arg0', 'arg1', 'arg2']\n     * @param {number} count Number of arguments to generate\n     * @returns {Array} Returns an array with argument names\n     */\n    function getArgs(count) {\n      // create an array with all argument names\n      var args = [];\n      for (var i = 0; i < count; i++) {\n        args[i] = 'arg' + i;\n      }\n\n      return args;\n    }\n\n    /**\n     * Compose a function from sub-functions each handling a single type signature.\n     * Signatures:\n     *   typed(signature: string, fn: function)\n     *   typed(name: string, signature: string, fn: function)\n     *   typed(signatures: Object.<string, function>)\n     *   typed(name: string, signatures: Object.<string, function>)\n     *\n     * @param {string | null} name\n     * @param {Object.<string, Function>} signatures\n     * @return {Function} Returns the typed function\n     * @private\n     */\n    function _typed(name, signatures) {\n      var refs = new Refs();\n\n      // parse signatures, expand them\n      var _signatures = parseSignatures(signatures);\n      if (_signatures.length == 0) {\n        throw new Error('No signatures provided');\n      }\n\n      // filter all any type signatures\n      var anys = filterAnyTypeSignatures(_signatures);\n\n      // parse signatures into a node tree\n      var node = parseTree(_signatures, [], anys);\n\n      //var util = require('util');\n      //console.log('ROOT');\n      //console.log(util.inspect(node, { depth: null }));\n\n      // generate code for the typed function\n      var code = [];\n      var _name = name || '';\n      var _args = getArgs(maxParams(_signatures));\n      code.push('function ' + _name + '(' + _args.join(', ') + ') {');\n      code.push('  \"use strict\";');\n      code.push('  var name = \\'' + _name + '\\';');\n      code.push(node.toCode(refs, '  ', false));\n      code.push('}');\n\n      // generate body for the factory function\n      var body = [\n        refs.toCode(),\n        'return ' + code.join('\\n')\n      ].join('\\n');\n\n      // evaluate the JavaScript code and attach function references\n      var factory = (new Function(refs.name, 'createError', body));\n      var fn = factory(refs, createError);\n\n      //console.log('FN\\n' + fn.toString()); // TODO: cleanup\n\n      // attach the signatures with sub-functions to the constructed function\n      fn.signatures = mapSignatures(_signatures);\n\n      return fn;\n    }\n\n    /**\n     * Calculate the maximum number of parameters in givens signatures\n     * @param {Signature[]} signatures\n     * @returns {number} The maximum number of parameters\n     */\n    function maxParams(signatures) {\n      var max = 0;\n\n      for (var i = 0; i < signatures.length; i++) {\n        var len = signatures[i].params.length;\n        if (len > max) {\n          max = len;\n        }\n      }\n\n      return max;\n    }\n\n    /**\n     * Get the type of a value\n     * @param {*} x\n     * @returns {string} Returns a string with the type of value\n     */\n    function getTypeOf(x) {\n      var obj;\n\n      for (var i = 0; i < typed.types.length; i++) {\n        var entry = typed.types[i];\n\n        if (entry.name === 'Object') {\n          // Array and Date are also Object, so test for Object afterwards\n          obj = entry;\n        }\n        else {\n          if (entry.test(x)) return entry.name;\n        }\n      }\n\n      // at last, test whether an object\n      if (obj && obj.test(x)) return obj.name;\n\n      return 'unknown';\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Returns the last item in the array\n     * @param {Array} array\n     * @return {*} item\n     */\n    function last (array) {\n      return array[array.length - 1];\n    }\n\n    // data type tests\n    var types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) { return typeof x === 'object' } },\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    // configuration\n    var config = {};\n\n    // type conversions. Order is important\n    var conversions = [];\n\n    // types to be ignored\n    var ignore = [];\n\n    // temporary object for holding types and conversions, for constructing\n    // the `typed` function itself\n    // TODO: find a more elegant solution for this\n    var typed = {\n      config: config,\n      types: types,\n      conversions: conversions,\n      ignore: ignore\n    };\n\n    /**\n     * Construct the typed function itself with various signatures\n     *\n     * Signatures:\n     *\n     *   typed(signatures: Object.<string, function>)\n     *   typed(name: string, signatures: Object.<string, function>)\n     */\n    typed = _typed('typed', {\n      'Object': function (signatures) {\n        var fns = [];\n        for (var signature in signatures) {\n          if (signatures.hasOwnProperty(signature)) {\n            fns.push(signatures[signature]);\n          }\n        }\n        var name = getName(fns);\n\n        return _typed(name, signatures);\n      },\n      'string, Object': _typed,\n      // TODO: add a signature 'Array.<function>'\n      '...Function': function (fns) {\n        var err;\n        var name = getName(fns);\n        var signatures = {};\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // test whether this is a typed-function\n          if (!(typeof fn.signatures === 'object')) {\n            err = new TypeError('Function is no typed-function (index: ' + i + ')');\n            err.data = {index: i};\n            throw err;\n          }\n\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              if (signatures.hasOwnProperty(signature)) {\n                if (fn.signatures[signature] !== signatures[signature]) {\n                  err = new Error('Signature \"' + signature + '\" is defined twice');\n                  err.data = {signature: signature};\n                  throw err;\n                }\n                // else: both signatures point to the same function, that's fine\n              }\n              else {\n                signatures[signature] = fn.signatures[signature];\n              }\n            }\n          }\n        }\n\n        return _typed(name, signatures);\n      }\n    });\n\n    /**\n     * Find a specific signature from a (composed) typed function, for\n     * example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an errror when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = getTypeOf(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n\n    // attach types and conversions to the final `typed` function\n    typed.config = config;\n    typed.types = types;\n    typed.conversions = conversions;\n    typed.ignore = ignore;\n    typed.create = create;\n    typed.find = find;\n    typed.convert = convert;\n\n    // add a type\n    typed.addType = function (type) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Test whether a value is a Matrix\n * @param {*} x\n * @returns {boolean} returns true with input is a Matrix\n *                    (like a DenseMatrix or SparseMatrix)\n */\nmodule.exports = function isMatrix (x) {\n  return x && x.constructor.prototype.isMatrix || false;\n};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar lazy = __webpack_require__(0).lazy;\nvar isFactory = __webpack_require__(0).isFactory;\nvar traverse = __webpack_require__(0).traverse;\nvar ArgumentsError = __webpack_require__(79);\n\nfunction factory (type, config, load, typed, math) {\n  /**\n   * Import functions from an object or a module\n   *\n   * Syntax:\n   *\n   *    math.import(object)\n   *    math.import(object, options)\n   *\n   * Where:\n   *\n   * - `object: Object`\n   *   An object with functions to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!';\n   *      }\n   *    });\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2;               // 84\n   *    math.hello('user');             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(require('numbers'), {wrap: true});\n   *\n   *    math.fibonacci(7); // returns 13\n   *\n   * @param {Object | Array} object   Object with functions to be imported.\n   * @param {Object} [options]        Import options.\n   */\n  function math_import(object, options) {\n    var num = arguments.length;\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (isFactory(object)) {\n      _importFactory(object, options);\n    }\n    // TODO: allow a typed-function with name too\n    else if (Array.isArray(object)) {\n      object.forEach(function (entry) {\n        math_import(entry, options);\n      });\n    }\n    else if (typeof object === 'object') {\n      // a map with functions\n      for (var name in object) {\n        if (object.hasOwnProperty(name)) {\n          var value = object[name];\n          if (isSupportedType(value)) {\n            _import(name, value, options);\n          }\n          else if (isFactory(object)) {\n            _importFactory(object, options);\n          }\n          else {\n            math_import(value, options);\n          }\n        }\n      }\n    }\n    else {\n      if (!options.silent) {\n        throw new TypeError('Factory, Object, or Array expected');\n      }\n    }\n  }\n\n  /**\n   * Add a property to the math namespace and create a chain proxy for it.\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    }\n\n    if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      }\n      else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n\n      math[name] = value;\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n\n  function _importTransform (name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform\n      }\n    }\n    else {\n      // remove existing transform\n      delete math.expression.transform[name]\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value\n      }\n    }\n  }\n\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n  function _wrap (fn) {\n    var wrapper = function wrapper () {\n      var args = [];\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n      return fn.apply(math, args);\n    };\n\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n\n    return wrapper;\n  }\n\n  /**\n   * Import an instance of a factory into math.js\n   * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _importFactory(factory, options) {\n    if (typeof factory.name === 'string') {\n      var name = factory.name;\n      var existingTransform = name in math.expression.transform\n      var namespace = factory.path ? traverse(math, factory.path) : math;\n      var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n      var resolver = function () {\n        var instance = load(factory);\n        if (instance && typeof instance.transform === 'function') {\n          throw new Error('Transforms cannot be attached to factory functions. ' +\n              'Please create a separate function for it with exports.path=\"expression.transform\"');\n        }\n\n        if (isTypedFunction(existing) && isTypedFunction(instance)) {\n          if (options.override) {\n            // replace the existing typed function (nothing to do)\n          }\n          else {\n            // merge the existing and new typed function\n            instance = typed(existing, instance);\n          }\n\n          return instance;\n        }\n\n        if (existing === undefined || options.override) {\n          return instance;\n        }\n\n        if (!options.silent) {\n          throw new Error('Cannot import \"' + name + '\": already exists');\n        }\n      };\n\n      if (factory.lazy !== false) {\n        lazy(namespace, name, resolver);\n\n        if (!existingTransform) {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            lazy(math.expression.mathWithTransform, name, resolver);\n          }\n        }\n      }\n      else {\n        namespace[name] = resolver();\n\n        if (!existingTransform) {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            math.expression.mathWithTransform[name] = resolver();\n          }\n        }\n      }\n\n      math.emit('import', name, resolver, factory.path);\n    }\n    else {\n      // unnamed factory.\n      // no lazy loading\n      load(factory);\n    }\n  }\n\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n  function isSupportedType(object) {\n    return typeof object === 'function'\n        || typeof object === 'number'\n        || typeof object === 'string'\n        || typeof object === 'boolean'\n        || object === null\n        || (object && type.isUnit(object))\n        || (object && type.isComplex(object))\n        || (object && type.isBigNumber(object))\n        || (object && type.isFraction(object))\n        || (object && type.isMatrix(object))\n        || (object && Array.isArray(object))\n  }\n\n  /**\n   * Test whether a given thing is a typed-function\n   * @param {*} fn\n   * @return {boolean} Returns true when `fn` is a typed-function\n   */\n  function isTypedFunction (fn) {\n    return typeof fn === 'function' && typeof fn.signatures === 'object';\n  }\n\n  function allowedInExpressions (name) {\n    return !unsafe.hasOwnProperty(name);\n  }\n\n  function factoryAllowedInExpressions (factory) {\n    return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n  }\n\n  // namespaces and functions not available in the parser for safety reasons\n  var unsafe = {\n    'expression': true,\n    'type': true,\n    'docs': true,\n    'error': true,\n    'json': true,\n    'chain': true // chain method not supported. Note that there is a unit chain too.\n  };\n\n  return math_import;\n}\n\nexports.math = true; // request access to the math namespace as 5th argument of the factory function\nexports.name = 'import';\nexports.factory = factory;\nexports.lazy = true;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n\n  this.message = 'Wrong number of arguments in function ' + fn +\n      ' (' + count + ' provided, ' +\n      min + ((max != undefined) ? ('-' + max) : '') + ' expected)';\n\n  this.stack = (new Error()).stack;\n}\n\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;\n\nmodule.exports = ArgumentsError;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar object = __webpack_require__(0);\n\nfunction factory (type, config, load, typed, math) {\n  var MATRIX = ['Matrix', 'Array'];                   // valid values for option matrix\n  var NUMBER = ['number', 'BigNumber', 'Fraction'];   // valid values for option number\n\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *     math.config().number;                // outputs 'number'\n   *     math.eval('0.4');                    // outputs number 0.4\n   *     math.config({number: 'Fraction'});\n   *     math.eval('0.4');                    // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      var prev = object.map(config, object.clone);\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX);\n      validateOption(options, 'number', NUMBER);\n\n      // merge options\n      object.deepExtend(config, options);\n\n      var curr = object.map(config, object.clone);\n\n      var changes = object.map(options, object.clone);\n\n      // emit 'config' event\n      math.emit('config', curr, prev, changes);\n\n      return curr;\n    }\n    else {\n      return object.map(config, object.clone);\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX = MATRIX;\n  _config.NUMBER = NUMBER;\n\n  return _config;\n}\n\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\nfunction contains (array, item) {\n  return array.indexOf(item) !== -1;\n}\n\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\nfunction findIndex (array, item) {\n  return array\n      .map(function (i) {\n        return i.toLowerCase();\n      })\n      .indexOf(item.toLowerCase());\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    var index = findIndex(values, options[name]);\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n\n      options[name] = values[index]; // change the option to the right casing\n    }\n    else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n    }\n  }\n}\n\nexports.name = 'config';\nexports.math = true; // request the math namespace as fifth argument\nexports.factory = factory;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = [\n  // types\n  __webpack_require__(10),\n  __webpack_require__(26),\n  __webpack_require__(86),\n  __webpack_require__(87),\n  __webpack_require__(93),\n  __webpack_require__(95),\n  __webpack_require__(96),\n  __webpack_require__(97),\n\n  // construction functions\n  __webpack_require__(98),\n  __webpack_require__(4),\n  __webpack_require__(99)\n];\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {number} lower and {number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : (value.gt(0) ? 'Infinity' : '-Infinity');\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (typeof options === 'number') {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n      var lower = 1e-3;\n      var upper = 1e5;\n      if (options && options.exponential) {\n        if (options.exponential.lower !== undefined) {\n          lower = options.exponential.lower;\n        }\n        if (options.exponential.upper !== undefined) {\n          upper = options.exponential.upper;\n        }\n      }\n\n      // adjust the configuration of the BigNumber constructor (yeah, this is quite tricky...)\n      var oldConfig = {\n        toExpNeg: value.constructor.toExpNeg,\n        toExpPos: value.constructor.toExpPos\n      };\n\n      value.constructor.config({\n        toExpNeg: Math.round(Math.log(lower) / Math.LN10),\n        toExpPos: Math.round(Math.log(upper) / Math.LN10)\n      });\n\n      // handle special case zero\n      if (value.isZero()) return '0';\n\n      // determine whether or not to output exponential notation\n      var str;\n      var abs = value.abs();\n      if (abs.gte(lower) && abs.lt(upper)) {\n        // normal number notation\n        str = value.toSignificantDigits(precision).toFixed();\n      }\n      else {\n        // exponential notation\n        str = exports.toExponential(value, precision);\n      }\n\n      // remove trailing zeros after the decimal point\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return (digits !== '.') ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexports.toExponential = function (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  }\n  else {\n    return value.toExponential();\n  }\n};\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function (value, precision) {\n  return value.toFixed(precision || 0);\n  // Note: the (precision || 0) is needed as the toFixed of BigNumber has an\n  // undefined default precision instead of 0.\n};\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nfunction IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  }\n  else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  }\n  else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  }\n  else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = (new Error()).stack;\n}\n\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;\n\nmodule.exports = IndexError;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Test whether value is a boolean\n * @param {*} value\n * @return {boolean} isBoolean\n */\nexports.isBoolean = function(value) {\n  return typeof value == 'boolean';\n};\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\n// function utils\n\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {function(args: Array)} [hasher]  A custom hash builder.\n *                                          Is JSON.stringify by default.\n * @return {function}                       Returns the memoized function\n */\nexports.memoize = function(fn, hasher) {\n  return function memoize() {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {};\n    }\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    var hash = hasher ? hasher(args) : JSON.stringify(args);\n    if (!(hash in memoize.cache)) {\n      return memoize.cache[hash] = fn.apply(fn, args);\n    }\n    return memoize.cache[hash];\n  };\n};\n\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexports.maxArgumentCount = function (fn) {\n  return Object.keys(fn.signatures || {})\n      .reduce(function (args, signature) {\n        var count = (signature.match(/,/g) || []).length + 1;\n        return Math.max(args, count);\n      }, -1);\n};\n\n/**\n * Call a typed function with the\n * @param {function} fn   A function or typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexports.callWithRightArgumentCount = function (fn, args, argCount) {\n  return Object.keys(fn.signatures || {})\n      .reduce(function (args, signature) {\n        var count = (signature.match(/,/g) || []).length + 1;\n        return Math.max(args, count);\n      }, -1);\n};\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(3);\nvar DimensionError = __webpack_require__(2);\n\nvar array = util.array;\nvar object = util.object;\nvar string = util.string;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = number.isNumber;\nvar isInteger = number.isInteger;\nvar isString = string.isString;\n\nvar validateIndex = array.validateIndex;\n\nfunction factory (type, config, load, typed) {\n  var Matrix = load(__webpack_require__(10)); // force loading Matrix (do not use via type.Matrix)\n  var equalScalar = load(__webpack_require__(11));\n\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n    \n    if (type.isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    }\n    else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    }\n    else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n  \n  var _createFromMatrix = function (matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? object.clone(source._values) : undefined;\n      matrix._index = object.clone(source._index);\n      matrix._ptr = object.clone(source._ptr);\n      matrix._size = object.clone(source._size);\n      matrix._datatype = datatype || source._datatype;\n    }\n    else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  };\n  \n  var _createFromArray = function (matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype;\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    var rows = data.length;\n    var columns = 0;\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    \n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      var j = 0;\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length);\n        // loop rows\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i];\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length)\n              columns = row.length;\n            // check row has column\n            if (j < row.length) {\n              // value\n              var v = row[j];\n              // check value != 0\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v);\n                // index\n                matrix._index.push(i);\n              }\n            }\n          }\n          else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1)\n              columns = 1;\n            // check value != 0 (row is a scalar)\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row);\n              // index\n              matrix._index.push(i);\n            }\n          }\n        }\n        // increment index\n        j++;      \n      }\n      while (j < columns);\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._index.length);\n    // size\n    matrix._size = [rows, columns];\n  };\n  \n  SparseMatrix.prototype = new Matrix();\n\n  /**\n   * Attach type information\n   */\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     var density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // calculate density\n    return rows !== 0 && columns !== 0 ? (this._index.length / (rows * columns)) : 0;\n  };\n  \n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Maytrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) { // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  var _getsubset = function (matrix, idx) {\n    // check idx\n    if (!type.isIndex(idx)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = idx.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    }\n    // validate dimensions\n    var size = idx.size();\n    if (size.length != matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    }\n\n    // vars\n    var i, ii, k, kk;\n    \n    // validate if any of the ranges in the index is out of range\n    var min = idx.min();\n    var max = idx.max();\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    }\n    \n    // matrix arrays\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr;\n        \n    // rows & columns dimensions for result matrix\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1);\n    \n    // workspace & permutation vector\n    var w = [];\n    var pv = [];\n    \n    // loop rows in resulting matrix\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0];  \n      // mark i in workspace\n      w[i] = true;\n    });\n\n    // result matrix arrays\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = [];\n        \n    // loop columns in result matrix\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length);\n      // loop values in column j\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k];\n        // check row is in result matrix\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]);\n          // check we need to process values\n          if (values)\n            values.push(mvalues[k]);\n        }\n      }\n    });\n    // update ptr\n    ptr.push(index.length);\n    \n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    });\n  };\n  \n  var _setsubset = function (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n    \n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n    \n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (type.isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size();\n      // use array representation\n      submatrix = submatrix.toArray();\n    }\n    else {\n      // get submatrix size (array, scalar)\n      sSize = array.size(submatrix);\n    }\n    \n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n      \n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n      \n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n      \n      // offsets\n      var x0 = index.min()[0];\n      var y0 = index.min()[1];      \n      \n      // submatrix rows and columns\n      var m = sSize[0];\n      var n = sSize[1];\n\n      // loop submatrix\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y];\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n    return matrix;\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // check i, j are valid\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i)\n      return this._values[k];\n\n    return 0;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n      \n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, this._datatype);\n    }\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue);\n      // update rows & columns\n      rows = this._size[0];\n      columns = this._size[1];\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows);\n    validateIndex(j, columns);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      }\n      else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    }\n    else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n  \n  var _getValueIndex = function(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0)\n      return bottom;\n    // loop rows [top, bottom[\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i)\n        return r;\n    }\n    // we did not find row\n    return top;\n  };\n\n  var _remove = function (k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1);\n    // update pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]--;\n  };\n\n  var _insert = function (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v);\n    // update row for k\n    index.splice(k, 0, i);\n    // update column pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]++;\n  };\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {    \n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n    \n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue);\n  };\n  \n  var _resize = function (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0;\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n      // convert value to the same datatype\n      value = typed.convert(value, matrix._datatype);\n    }\n    \n    // should we insert the value?\n    var ins = !eq(value, zero);\n\n    // old columns and rows\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n\n    var i, j, k;\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length;\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value);\n            // update matrix._index\n            matrix._index.push(i);\n          }\n        }        \n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length;\n    }\n    else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns);\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    }\n    // update columns\n    c = columns;\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0;\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n;\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n;\n          // pointer\n          var p = 0;\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value);\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i);\n            // increment inserts\n            n++;\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length;\n      }\n    }\n    else if (rows < r) {\n      // deletes\n      var d = 0;\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d;\n        // where matrix._values start for next column\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d;\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k];\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1);\n            // remove item from matrix._index\n            matrix._index.splice(k, 1);\n            // increase deletes\n            d++;\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length;\n    }\n    // update matrix._size\n    matrix._size[0] = rows;\n    matrix._size[1] = columns;\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  SparseMatrix.prototype.reshape = function (size, copy) {\n\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n\n    // m * n must not change\n    if(this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    }\n\n    // matrix to reshape\n    var m = copy ? this.clone() : this;\n\n    // return unchanged if the same shape\n    if(this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m;\n    }\n\n    // Convert to COO format (generate a column index)\n    var colIndex = [];\n    for(var i=0; i<m._ptr.length; i++) {\n      for(var j=0; j<m._ptr[i+1]-m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    }\n\n    // Clone the values array\n    var values = m._values.slice();\n\n    // Clone the row index array\n    var rowIndex = m._index.slice();\n\n    // Transform the (row, column) indices\n    for(var i=0; i<m._index.length; i++) {\n      var r1 = rowIndex[i];\n      var c1 = colIndex[i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[i] = flat % size[1];\n      rowIndex[i] = Math.floor(flat / size[1]);\n    }\n\n    // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n\n    // OR, we could easily just:\n\n    // 1. Remove all values from the matrix\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = size[1] + 1;\n    m._size = size.slice();\n    for(var i=0; i<m._ptr.length; i++) {\n      m._ptr[i] = 0;\n    }\n\n    // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n    for(var h=0; h<values.length; h++) {\n      var i = rowIndex[h];\n      var j = colIndex[h];\n      var v = values[h];\n      var k = _getValueIndex(i, m._ptr[j], m._ptr[j + 1], m._index);\n      _insert(k, i, j, v, m._values, m._index, m._ptr);\n    }\n\n    // The value indices are inserted out of order, but apparently that's... still OK?\n\n    return m;\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? object.clone(this._values) : undefined,\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n  SparseMatrix.prototype.size = function() {\n    return this._size.slice(0); // copy the Array\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // invoke callback\n    var invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    };\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  var _map = function (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n    }\n    \n    // invoke callback\n    var invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y);\n      // check value != 0\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v);\n        // index\n        index.push(x);\n      }\n    };\n    // loop columns\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n      // row pointer\n      var p = minRow;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = matrix._index[k];\n        // check i is in range\n        if (i >= minRow && i <= maxRow) {\n          // zero values\n          if (!skipZeros) {\n           for (var x = p; x < i; x++)\n             invoke(0, x - minRow, j - minColumn);\n          }\n          // value @ k\n          invoke(matrix._values[k], i - minRow, j - minColumn);\n        }\n        // update pointer\n        p = i + 1;\n      }\n      // zero values\n      if (!skipZeros) {\n        for (var y = p; y <= maxRow; y++)\n          invoke(0, y - minRow, j - minColumn);\n      }\n    }\n    // store number of values in ptr\n    ptr.push(values.length);\n    // return sparse matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // column pointer\n      var p = 0;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // check we need to process zeros\n        if (!skipZeros) {\n          // zero values\n          for (var x = p; x < i; x++)\n            callback(0, [x, j], me);\n        }\n        // value @ k\n        callback(this._values[k], [i, j], me);\n        // update pointer\n        p = i + 1;\n      }\n      // check we need to process zeros\n      if (!skipZeros) {\n        // zero values\n        for (var y = p; y < rows; y++)\n          callback(0, [y, j], me);\n      }\n    }\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n  \n  var _toArray = function (values, index, ptr, size, copy) {    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    // result\n    var a = [];\n    // vars\n    var i, j;\n    // initialize array\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n      for (j = 0; j < columns; j++)\n        a[i][j] = 0;\n    }\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k];\n        // set value (use one for pattern matrix)\n        a[i][j] = values ? (copy ? object.clone(values[k]) : values[k]) : 1;\n      }\n    }\n    return a;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // density\n    var density = this.density();\n    // rows & columns\n    var str = 'Sparse Matrix [' + string.format(rows, options) + ' x ' + string.format(columns, options) + '] density: ' + string.format(density, options) + '\\n';\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // append value\n        str += '\\n    (' + string.format(i, options) + ', ' + string.format(j, options) + ') ==> ' + (this._values ? string.format(this._values[k], options) : 'X');\n      }\n    }\n    return str;\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.toString = function () {\n    return string.format(this.toArray());\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n  SparseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // diagonal arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    // initial ptr value\n    ptr[0] = 0;\n    // loop columns\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop x within [k0, k1[\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x];\n        // check row\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]);\n          // store row\n          index[values.length - 1] = i - kSub;\n          // exit loop\n          break;\n        }\n      }\n    }\n    // close ptr\n    ptr.push(values.length);\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    });\n  };\n  \n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n    \n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (type.isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n    \n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n    \n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    \n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // value extraction function\n    var _value;\n      \n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };\n    }\n    else if (type.isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // create arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // loop items\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length);\n      // diagonal index\n      var i = j - kSuper;      \n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i);\n        // check for zero\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub);\n          // add value\n          values.push(v);\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length);\n    // create SparseMatrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  \n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n    \n    // swap rows\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr);\n    // return current instance\n    return this;\n  };\n  \n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1];\n    // loop\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n  \n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // find value index @ x\n      var kx = _getValueIndex(x, k0, k1, index);\n      // find value index @ x\n      var ky = _getValueIndex(y, k0, k1, index);\n      // check both rows exist in matrix\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        }\n        // next column\n        continue;\n      }\n      // check x row exist & no y row\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined;\n        // insert value @ y\n        index.splice(ky, 0, y);\n        if (values)\n          values.splice(ky, 0, vx);        \n        // remove value @ x (adjust array index if needed)\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n        if (values)\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        // next column\n        continue;\n      }\n      // check y row exist & no x row\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined;\n        // insert value @ x\n        index.splice(kx, 0, x);\n        if (values)\n          values.splice(kx, 0, vy);\n        // remove value @ y (adjust array index if needed)\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n        if (values)\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n      }\n    }\n  };\n\n  // register this type in the base class Matrix\n  type.Matrix._storage.sparse = SparseMatrix;\n\n  return SparseMatrix;\n}\n\nexports.name = 'SparseMatrix';\nexports.path = 'type';\nexports.factory = factory;\nexports.lazy = false;  // no lazy loading, as we alter type.Matrix._storage\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load) {\n  \n  var add = load(__webpack_require__(88));\n  var equalScalar = load(__webpack_require__(11));\n  \n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array \n   * of the vector elements and an ordered list of non-zero elements.\n   */\n  function Spa() {\n    if (!(this instanceof Spa))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    \n    // allocate vector, TODO use typed arrays\n    this._values = [];\n    this._heap = new type.FibonacciHeap();\n  }\n\n  /**\n   * Attach type information\n   */\n  Spa.prototype.type = 'Spa';\n  Spa.prototype.isSpa = true;\n\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      var node = this._heap.insert(i, v);\n      // set the value @ i\n      this._values[i] = node;\n    }\n    else {\n      // update the value @ i\n      this._values[i].value = v;\n    }\n  };\n  \n  Spa.prototype.get = function (i) {\n    var node = this._values[i];\n    if (node)\n      return node.value;\n    return 0;\n  };\n  \n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    var node = this._values[i];\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v);\n      // initialize value\n      this._values[i] = node;\n    }\n    else {\n      // accumulate value\n      node.value = add(node.value, v);\n    }\n  };\n  \n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    var heap = this._heap;\n    var values = this._values;\n    // nodes\n    var nodes = [];\n    // node with minimum key, save it\n    var node = heap.extractMinimum();\n    if (node)\n      nodes.push(node);\n    // extract nodes from heap (ordered)\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this);\n        }\n      }\n      // extract next node, save it\n      node = heap.extractMinimum();\n      if (node)\n        nodes.push(node);\n    }\n    // reinsert all nodes in heap\n    for (var i = 0; i < nodes.length; i++) {\n      // current node\n      var n = nodes[i];\n      // insert node in heap\n      node = heap.insert(n.key, n.value);\n      // update values\n      values[node.key] = node;\n    }\n  };\n  \n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    var nodei = this._values[i];\n    var nodej = this._values[j];\n    // check we need to insert indeces\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value);\n      // remove from heap\n      this._heap.remove(nodej);\n      // set values\n      this._values[i] = nodei;\n      this._values[j] = undefined;\n    }\n    else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value);\n      // remove from heap\n      this._heap.remove(nodei);\n      // set values\n      this._values[j] = nodej;\n      this._values[i] = undefined;\n    }\n    else if (nodei && nodej) {\n      // swap values\n      var v = nodei.value;\n      nodei.value = nodej.value;\n      nodej.value = v;\n    }\n  };\n  \n  return Spa;\n}\n\nexports.name = 'Spa';\nexports.path = 'type';\nexports.factory = factory;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar extend = __webpack_require__(0).extend;\n\nfunction factory (type, config, load, typed) {\n\n  var matrix = load(__webpack_require__(4));\n  var addScalar = load(__webpack_require__(89));\n  var latex = __webpack_require__(13);\n  \n  var algorithm01 = load(__webpack_require__(90));\n  var algorithm04 = load(__webpack_require__(91));\n  var algorithm10 = load(__webpack_require__(92));\n  var algorithm13 = load(__webpack_require__(14));\n  var algorithm14 = load(__webpack_require__(15));\n\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3);               // returns number 5\n   *    math.add(2, 3, 4);            // returns number 9\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(-4, 1);\n   *    math.add(a, b);               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4);       // returns Array [5, 6, 7]\n   *\n   *    var c = math.unit('5 cm');\n   *    var d = math.unit('2.1 mm');\n   *    math.add(c, d);               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\");         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n  var add = typed('add', extend({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n      \n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm04(x, y, addScalar);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm01(y, x, addScalar, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm01(x, y, addScalar, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, addScalar);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n    \n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), matrix(y)).valueOf();\n    },\n    \n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), y);\n    },\n    \n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return add(x, matrix(y));\n    },\n    \n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm10(x, y, addScalar, false);\n          break;\n        default:\n          c = algorithm14(x, y, addScalar, false);\n          break;\n      }\n      return c;\n    },\n    \n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm10(y, x, addScalar, true);\n          break;\n        default:\n          c = algorithm14(y, x, addScalar, true);\n          break;\n      }\n      return c;\n    },\n    \n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf();\n    },\n\n    'any, any': addScalar,\n\n    'any, any, ...any': function (x, y, rest) {\n      var result = add(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = add(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, addScalar.signatures));\n\n  add.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['add'] + '${args[1]}\\\\right)'\n  };\n  \n  return add;\n}\n\nexports.name = 'add';\nexports.factory = factory;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory(type, config, load, typed) {\n\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix), and does\n   * not validate the number of of inputs.\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}                      Sum of `x` and `y`\n   * @private\n   */\n  var add = typed('add', {\n\n    'number, number': function (x, y) {\n      return x + y;\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.add(y);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.plus(y);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.add(y);\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (x.value == null) throw new Error('Parameter x contains a unit with undefined value');\n      if (y.value == null) throw new Error('Parameter y contains a unit with undefined value');\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n\n      var res = x.clone();\n      res.value = add(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    }\n  });\n\n  return add;\n}\n\nexports.factory = factory;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar DimensionError = __webpack_require__(2);\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij). \n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  var algorithm01 = function (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype;\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues)\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // process data types\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined;\n    // callback function\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback;\n\n    // vars\n    var i, j;\n    \n    // result (DenseMatrix)\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++)\n      cdata[i] = [];      \n    \n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        // mark i as updated\n        w[i] = mark;\n      }\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        }\n        else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n  \n  return algorithm01;\n}\n\nexports.name = 'algorithm01';\nexports.factory = factory;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar DimensionError = __webpack_require__(2);\n\nfunction factory (type, config, load, typed) {\n\n  var equalScalar = load(__webpack_require__(11));\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij). \n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  var algorithm04 = function (a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype;\n    // sparse matrix arrays\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = [];\n    // matrix\n    var c = new SparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspace\n    var xa = avalues && bvalues ? [] : undefined;\n    var xb = avalues && bvalues ? [] : undefined;\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // vars \n    var i, j, k, k0, k1;\n    \n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length;\n      // columns mark\n      var mark = j + 1;\n      // loop A(:,j)\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k];\n        // update c\n        cindex.push(i);\n        // update workspace\n        wa[i] = mark;\n        // check we need to process values\n        if (xa)\n          xa[i] = avalues[k];\n      }\n      // loop B(:,j)\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // check row exists in A\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            var v = cf(xa[i], bvalues[k]);\n            // check for zero\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v;              \n            }\n            else {\n              // remove mark (index will be removed later)\n              wa[i] = null;\n            }\n          }\n        }\n        else {\n          // update c\n          cindex.push(i);\n          // update workspace\n          wb[i] = mark;\n          // check we need to process values\n          if (xb)\n            xb[i] = bvalues[k];\n        }\n      }\n      // check we need to process values (non pattern matrix)\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j];\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k];\n          // check workspace has value @ i\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i];\n            // increment pointer\n            k++;\n          }\n          else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i];\n            // increment pointer\n            k++;\n          }\n          else {\n            // remove index @ k\n            cindex.splice(k, 1);\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n  \n  return algorithm04;\n}\n\nexports.name = 'algorithm04';\nexports.factory = factory;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm10 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cdata = [];\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        }\n        else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c;\n  };\n\n  return algorithm10;\n}\n\nexports.name = 'algorithm10';\nexports.factory = factory;\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load, typed) {\n  \n  var smaller = load(__webpack_require__(27));\n  var larger = load(__webpack_require__(94));\n  \n  var oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);\n  \n  /**\n   * Fibonacci Heap implementation, used interally for Matrix math.\n   * @class FibonacciHeap\n   * @constructor FibonacciHeap\n   */\n  function FibonacciHeap() {\n    if (!(this instanceof FibonacciHeap))\n      throw new SyntaxError('Constructor must be called with the new operator');\n\n    // initialize fields\n    this._minimum = null;\n    this._size = 0;\n  }\n\n  /**\n   * Attach type information\n   */\n  FibonacciHeap.prototype.type = 'FibonacciHeap';\n  FibonacciHeap.prototype.isFibonacciHeap = true;\n\n  /**\n   * Inserts a new data element into the heap. No heap consolidation is\n   * performed at this time, the new node is simply inserted into the root\n   * list of this heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.insert = function (key, value) {\n    // create node\n    var node = {\n      key: key,\n      value: value,\n      degree: 0\n    };\n    // check we have a node in the minimum\n    if (this._minimum) {\n      // minimum node\n      var minimum = this._minimum;\n      // update left & right of node\n      node.left = minimum;\n      node.right = minimum.right;\n      minimum.right = node;\n      node.right.left = node;\n      // update minimum node in heap if needed\n      if (smaller(key, minimum.key)) {\n        // node has a smaller key, use it as minimum\n        this._minimum = node;\n      }\n    }\n    else {\n      // set left & right\n      node.left = node;\n      node.right = node;\n      // this is the first node\n      this._minimum = node;\n    }\n    // increment number of nodes in heap\n    this._size++;\n    // return node\n    return node;\n  };\n\n  /**\n   * Returns the number of nodes in heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.size = function () {\n    return this._size;\n  };\n\n  /**\n   * Removes all elements from this heap.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.clear = function () {\n    this._minimum = null;\n    this._size = 0;\n  };\n\n  /**\n   * Returns true if the heap is empty, otherwise false.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.isEmpty = function () {\n    return this._size === 0;\n  };\n  \n  /**\n   * Extracts the node with minimum key from heap. Amortized running \n   * time: O(log n).\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.extractMinimum = function () {\n    // node to remove\n    var node = this._minimum;\n    // check we have a minimum\n    if (node === null)\n      return node;\n    // current minimum\n    var minimum = this._minimum;\n    // get number of children\n    var numberOfChildren = node.degree;\n    // pointer to the first child\n    var x = node.child;\n    // for each child of node do...\n    while (numberOfChildren > 0) {\n      // store node in right side\n      var tempRight = x.right;\n      // remove x from child list\n      x.left.right = x.right;\n      x.right.left = x.left;\n      // add x to root list of heap\n      x.left = minimum;\n      x.right = minimum.right;\n      minimum.right = x;\n      x.right.left = x;\n      // set Parent[x] to null\n      x.parent = null;\n      x = tempRight;\n      numberOfChildren--;\n    }\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left;\n    // update minimum\n    if (node == node.right) {\n      // empty\n      minimum = null;\n    }\n    else {\n      // update minimum\n      minimum = node.right;\n      // we need to update the pointer to the root with minimum key\n      minimum = _findMinimumNode(minimum, this._size);\n    }\n    // decrement size of heap\n    this._size--;\n    // update minimum\n    this._minimum = minimum;\n    // return node\n    return node;\n  };\n  \n  /**\n   * Removes a node from the heap given the reference to the node. The trees\n   * in the heap will be consolidated, if necessary. This operation may fail\n   * to remove the correct element if there are nodes with key value -Infinity.\n   * Running time: O(log n) amortized.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.remove = function (node) {\n    // decrease key value\n    this._minimum = _decreaseKey(this._minimum, node, -1);\n    // remove the smallest\n    this.extractMinimum();\n  };\n  \n  /**\n   * Decreases the key value for a heap node, given the new value to take on.\n   * The structure of the heap may be changed and will not be consolidated. \n   * Running time: O(1) amortized.\n   * @memberof FibonacciHeap\n   */\n  var _decreaseKey = function (minimum, node, key) {\n    // set node key\n    node.key = key;\n    // get parent node\n    var parent = node.parent;\n    if (parent && smaller(node.key, parent.key)) {\n      // remove node from parent\n      _cut(minimum, node, parent);\n      // remove all nodes from parent to the root parent\n      _cascadingCut(minimum, parent);\n    }\n    // update minimum node if needed\n    if (smaller(node.key, minimum.key))\n      minimum = node;\n    // return minimum\n    return minimum;\n  };\n  \n  /**\n   * The reverse of the link operation: removes node from the child list of parent.\n   * This method assumes that min is non-null. Running time: O(1).\n   * @memberof FibonacciHeap\n   */\n  var _cut = function (minimum, node, parent) {\n    // remove node from parent children and decrement Degree[parent]\n    node.left.right = node.right;\n    node.right.left = node.left;\n    parent.degree--;\n    // reset y.child if necessary\n    if (parent.child == node)\n      parent.child = node.right;\n    // remove child if degree is 0\n    if (parent.degree === 0)\n      parent.child = null;\n    // add node to root list of heap\n    node.left = minimum;\n    node.right = minimum.right;\n    minimum.right = node;\n    node.right.left = node;\n    // set parent[node] to null\n    node.parent = null;\n    // set mark[node] to false\n    node.mark = false;\n  };\n  \n  /**\n   * Performs a cascading cut operation. This cuts node from its parent and then\n   * does the same for its parent, and so on up the tree.\n   * Running time: O(log n); O(1) excluding the recursion.\n   * @memberof FibonacciHeap\n   */\n  var _cascadingCut= function (minimum, node) {\n    // store parent node\n    var parent = node.parent;\n    // if there's a parent...\n    if (!parent)\n      return;\n    // if node is unmarked, set it marked\n    if (!node.mark) {\n      node.mark = true;\n    }\n    else {\n      // it's marked, cut it from parent\n      _cut(minimum, node, parent);\n      // cut its parent as well\n      _cascadingCut(parent);\n    }\n  };\n  \n  /**\n   * Make the first node a child of the second one. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  var _linkNodes = function (node, parent) {\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left;\n    // make node a Child of parent\n    node.parent = parent;\n    if (!parent.child) {\n      parent.child = node;\n      node.right = node;\n      node.left = node;\n    }\n    else {\n      node.left = parent.child;\n      node.right = parent.child.right;\n      parent.child.right = node;\n      node.right.left = node;\n    }\n    // increase degree[parent]\n    parent.degree++;\n    // set mark[node] false\n    node.mark = false;\n  };\n  \n  var _findMinimumNode = function (minimum, size) {\n    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree\n    var arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1;\n    // create list with initial capacity\n    var array = new Array(arraySize);\n    // find the number of root nodes.\n    var numRoots = 0;\n    var x = minimum;\n    if (x) {\n      numRoots++;\n      x = x.right;\n      while (x !== minimum) {\n        numRoots++;\n        x = x.right;\n      }\n    }\n    // vars\n    var y;\n    // For each node in root list do...\n    while (numRoots > 0) {\n      // access this node's degree..\n      var d = x.degree;\n      // get next node\n      var next = x.right;\n      // check if there is a node already in array with the same degree\n      while (true) {\n        // get node with the same degree is any\n        y = array[d];\n        if (!y)\n          break;\n        // make one node with the same degree a child of the other, do this based on the key value.\n        if (larger(x.key, y.key)) {\n          var temp = y;\n          y = x;\n          x = temp;\n        }\n        // make y a child of x\n        _linkNodes(y, x);\n        // we have handled this degree, go to next one.\n        array[d] = null;\n        d++;\n      }\n      // save this node for later when we might encounter another of the same degree.\n      array[d] = x;\n      // move forward through list.\n      x = next;\n      numRoots--;\n    }\n    // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].\n    minimum = null;\n    // loop nodes in array\n    for (var i = 0; i < arraySize; i++) {\n      // get current node\n      y = array[i];\n      if (!y)\n        continue;\n      // check if we have a linked list\n      if (minimum) {\n        // First remove node from root list.\n        y.left.right = y.right;\n        y.right.left = y.left;\n        // now add to root list, again.\n        y.left = minimum;\n        y.right = minimum.right;\n        minimum.right = y;\n        y.right.left = y;\n        // check if this is a new min.\n        if (smaller(y.key, minimum.key))\n          minimum = y;\n      }\n      else\n        minimum = y;\n    }\n    return minimum;\n  };\n  \n  return FibonacciHeap;\n}\n\nexports.name = 'FibonacciHeap';\nexports.path = 'type';\nexports.factory = factory;\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar nearlyEqual = __webpack_require__(1).nearlyEqual;\nvar bigNearlyEqual = __webpack_require__(12);\n\nfunction factory (type, config, load, typed) {\n  \n  var matrix = load(__webpack_require__(4));\n\n  var algorithm03 = load(__webpack_require__(28));\n  var algorithm07 = load(__webpack_require__(29));\n  var algorithm12 = load(__webpack_require__(30));\n  var algorithm13 = load(__webpack_require__(14));\n  var algorithm14 = load(__webpack_require__(15));\n\n  var latex = __webpack_require__(13);\n\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3);             // returns false\n   *    math.larger(5, 2 + 2);         // returns true\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.larger(a, b);             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n  var larger = typed('larger', {\n\n    'boolean, boolean': function (x, y) {\n      return x > y;\n    },\n\n    'number, number': function (x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.gt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === 1;\n    },\n\n    'Complex, Complex': function () {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return larger(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x > y;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n\n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm07(x, y, larger);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm03(y, x, larger, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm03(x, y, larger, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, larger);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), matrix(y)).valueOf();\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return larger(x, matrix(y));\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm12(x, y, larger, false);\n          break;\n        default:\n          c = algorithm14(x, y, larger, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm12(y, x, larger, true);\n          break;\n        default:\n          c = algorithm14(y, x, larger, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, larger, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, larger, true).valueOf();\n    }\n  });\n\n  larger.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['larger'] + '${args[1]}\\\\right)'\n  };\n\n  return larger;\n}\n\nexports.name = 'larger';\nexports.factory = factory;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(3);\n\nvar string = util.string;\nvar object = util.object;\n\nvar isArray = Array.isArray;\nvar isString = string.isString;\n\nfunction factory (type, config, load) {\n\n  var DenseMatrix = load(__webpack_require__(26));\n\n  var smaller = load(__webpack_require__(27));\n\n  function ImmutableDenseMatrix(data, datatype) {\n    if (!(this instanceof ImmutableDenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n\n    if (type.isMatrix(data) || isArray(data)) {\n      // use DenseMatrix implementation\n      var matrix = new DenseMatrix(data, datatype);\n      // internal structures\n      this._data = matrix._data;\n      this._size = matrix._size;\n      this._datatype = matrix._datatype;\n      this._min = null;\n      this._max = null;\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = data.datatype;\n      this._min = typeof data.min !== 'undefined' ? data.min : null;\n      this._max = typeof data.max !== 'undefined' ? data.max : null;\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n      this._min = null;\n      this._max = null;\n    }\n  }\n\n  ImmutableDenseMatrix.prototype = new DenseMatrix();\n\n  /**\n   * Attach type information\n   */\n  ImmutableDenseMatrix.prototype.type = 'ImmutableDenseMatrix';\n  ImmutableDenseMatrix.prototype.isImmutableDenseMatrix = true;\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | ImmutableDenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  ImmutableDenseMatrix.prototype.subset = function (index) {\n    switch (arguments.length) {\n      case 1:\n        // use base implementation\n        var m = DenseMatrix.prototype.subset.call(this, index);\n        // check result is a matrix\n        if (type.isMatrix(m)) {\n          // return immutable matrix\n          return new ImmutableDenseMatrix({\n            data: m._data,\n            size: m._size,\n            datatype: m._datatype\n          });\n        }\n        return m;\n        \n        // intentional fall through\n      case 2:\n      case 3:\n        throw new Error('Cannot invoke set subset on an Immutable Matrix instance');\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {ImmutableDenseMatrix} self\n   */\n  ImmutableDenseMatrix.prototype.set = function () {\n    throw new Error('Cannot invoke set on an Immutable Matrix instance');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  ImmutableDenseMatrix.prototype.resize = function () {\n    throw new Error('Cannot invoke resize on an Immutable Matrix instance');\n  };\n\n  /**\n   * Disallows reshaping in favor of immutability.\n   *\n   * @throws {Error} Operation not allowed\n   */\n  ImmutableDenseMatrix.prototype.reshape = function () {\n    throw new Error('Cannot invoke reshape on an Immutable Matrix instance');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {ImmutableDenseMatrix} clone\n   */\n  ImmutableDenseMatrix.prototype.clone = function () {\n    var m = new ImmutableDenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n\n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n  ImmutableDenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'ImmutableDenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ImmutableDenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {ImmutableDenseMatrix}\n   */\n  ImmutableDenseMatrix.fromJSON = function (json) {\n    return new ImmutableDenseMatrix(json);\n  };\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @param {Number} i       Matrix row index 1\n   * @param {Number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  ImmutableDenseMatrix.prototype.swapRows = function () {\n    throw new Error('Cannot invoke swapRows on an Immutable Matrix instance');\n  };\n\n  /**\n   * Calculate the minimum value in the set\n   * @return {Number | undefined} min\n   */\n  ImmutableDenseMatrix.prototype.min = function () {\n    // check min has been calculated before\n    if (this._min === null) {\n      // minimum\n      var m = null;\n      // compute min\n      this.forEach(function (v) {\n        if (m === null || smaller(v, m))\n          m = v;\n      });\n      this._min = m !== null ? m : undefined;\n    }\n    return this._min;\n  };\n\n  /**\n   * Calculate the maximum value in the set\n   * @return {Number | undefined} max\n   */\n  ImmutableDenseMatrix.prototype.max = function () {\n    // check max has been calculated before\n    if (this._max === null) {\n      // maximum\n      var m = null;\n      // compute max\n      this.forEach(function (v) {\n        if (m === null || smaller(m, v))\n          m = v;\n      });\n      this._max = m !== null ? m : undefined;\n    }\n    return this._max;\n  };\n\n  // exports\n  return ImmutableDenseMatrix;\n}\n\nexports.name = 'ImmutableDenseMatrix';\nexports.path = 'type';\nexports.factory = factory;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar clone = __webpack_require__(0).clone;\nvar isInteger = __webpack_require__(1).isInteger;\n\nfunction factory (type) {\n  \n  /**\n   * Create an index. An Index can store ranges and sets for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Usage:\n   *     var index = new Index(range1, range2, matrix1, array1, ...);\n   *\n   * Where each parameter can be any of:\n   *     A number\n   *     A string (containing a name of an object property)\n   *     An instance of Range\n   *     An Array with the Set values\n   *     A Matrix with the Set values\n   *\n   * The parameters start, end, and step must be integer numbers.\n   *\n   * @class Index\n   * @Constructor Index\n   * @param {...*} ranges\n   */\n  function Index(ranges) {\n    if (!(this instanceof Index)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this._dimensions = [];\n    this._isScalar = true;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i];\n\n      if (type.isRange(arg)) {\n        this._dimensions.push(arg);\n        this._isScalar = false;\n      }\n      else if (Array.isArray(arg) || type.isMatrix(arg)) {\n        // create matrix\n        var m = _createImmutableMatrix(arg.valueOf());\n        this._dimensions.push(m);\n        // size\n        var size = m.size();\n        // scalar\n        if (size.length !== 1 || size[0] !== 1) {\n          this._isScalar = false;\n        }\n      }\n      else if (typeof arg === 'number') {\n        this._dimensions.push(_createImmutableMatrix([arg]));\n      }\n      else if (typeof arg === 'string') {\n        // object property (arguments.count should be 1)\n        this._dimensions.push(arg);\n      }\n      // TODO: implement support for wildcard '*'\n      else {\n        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');\n      }\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Index.prototype.type = 'Index';\n  Index.prototype.isIndex = true;\n\n  function _createImmutableMatrix(arg) {\n    // loop array elements\n    for (var i = 0, l = arg.length; i < l; i++) {\n      if (typeof arg[i] !== 'number' || !isInteger(arg[i])) {\n        throw new TypeError('Index parameters must be positive integer numbers');\n      }\n    }\n    // create matrix\n    return new type.ImmutableDenseMatrix(arg);\n  }\n\n  /**\n   * Create a clone of the index\n   * @memberof Index\n   * @return {Index} clone\n   */\n  Index.prototype.clone = function () {\n    var index = new Index();\n    index._dimensions = clone(this._dimensions);\n    index._isScalar = this._isScalar;\n    return index;\n  };\n\n  /**\n   * Create an index from an array with ranges/numbers\n   * @memberof Index\n   * @param {Array.<Array | number>} ranges\n   * @return {Index} index\n   * @private\n   */\n  Index.create = function (ranges) {\n    var index = new Index();\n    Index.apply(index, ranges);\n    return index;\n  };\n\n  /**\n   * Retrieve the size of the index, the number of elements for each dimension.\n   * @memberof Index\n   * @returns {number[]} size\n   */\n  Index.prototype.size = function () {\n    var size = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var d = this._dimensions[i];\n      size[i] = (typeof d === 'string') ? 1 : d.size()[0];\n    }\n\n    return size;\n  };\n\n  /**\n   * Get the maximum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} max\n   */\n  Index.prototype.max = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = (typeof range === 'string') ? range : range.max();\n    }\n\n    return values;\n  };\n\n  /**\n   * Get the minimum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} min\n   */\n  Index.prototype.min = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = (typeof range === 'string') ? range : range.min();\n    }\n\n    return values;\n  };\n\n  /**\n   * Loop over each of the ranges of the index\n   * @memberof Index\n   * @param {Function} callback   Called for each range with a Range as first\n   *                              argument, the dimension as second, and the\n   *                              index object as third.\n   */\n  Index.prototype.forEach = function (callback) {\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      callback(this._dimensions[i], i, this);\n    }\n  };\n\n  /**\n   * Retrieve the dimension for the given index\n   * @memberof Index\n   * @param {Number} dim                  Number of the dimension\n   * @returns {Range | null} range\n   */\n  Index.prototype.dimension = function (dim) {\n    return this._dimensions[dim] || null;\n  };\n\n  /**\n   * Test whether this index contains an object property\n   * @returns {boolean} Returns true if the index is an object property\n   */\n  Index.prototype.isObjectProperty = function () {\n    return this._dimensions.length === 1 && typeof this._dimensions[0] === 'string';\n  };\n\n  /**\n   * Returns the object property name when the Index holds a single object property,\n   * else returns null\n   * @returns {string | null}\n   */\n  Index.prototype.getObjectProperty = function () {\n    return this.isObjectProperty() ? this._dimensions[0] : null;\n  };\n\n  /**\n   * Test whether this index contains only a single value.\n   *\n   * This is the case when the index is created with only scalar values as ranges,\n   * not for ranges resolving into a single value.\n   * @memberof Index\n   * @return {boolean} isScalar\n   */\n  Index.prototype.isScalar = function () {\n    return this._isScalar;\n  };\n\n  /**\n   * Expand the Index into an array.\n   * For example new Index([0,3], [2,7]) returns [[0,1,2], [2,3,4,5,6]]\n   * @memberof Index\n   * @returns {Array} array\n   */\n  Index.prototype.toArray = function () {\n    var array = [];\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      array.push((typeof dimension === 'string') ? dimension : dimension.toArray());\n    }\n    return array;\n  };\n\n  /**\n   * Get the primitive value of the Index, a two dimensional array.\n   * Equivalent to Index.toArray().\n   * @memberof Index\n   * @returns {Array} array\n   */\n  Index.prototype.valueOf = Index.prototype.toArray;\n\n  /**\n   * Get the string representation of the index, for example '[2:6]' or '[0:2:10, 4:7, [1,2,3]]'\n   * @memberof Index\n   * @returns {String} str\n   */\n  Index.prototype.toString = function () {\n    var strings = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      if (typeof dimension === 'string') {\n        strings.push(JSON.stringify(dimension));\n      }\n      else {\n        strings.push(dimension.toString());\n      }\n    }\n\n    return '[' + strings.join(', ') + ']';\n  };\n\n  /**\n   * Get a JSON representation of the Index\n   * @memberof Index\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Index\", \"ranges\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   */\n  Index.prototype.toJSON = function () {\n    return {\n      mathjs: 'Index',\n      dimensions: this._dimensions\n    };\n  };\n\n  /**\n   * Instantiate an Index from a JSON object\n   * @memberof Index\n   * @param {Object} json A JSON object structured as:\n   *                     `{\"mathjs\": \"Index\", \"dimensions\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   * @return {Index}\n   */\n  Index.fromJSON = function (json) {\n    return Index.create(json.dimensions);\n  };\n\n  return Index;\n}\n\nexports.name = 'Index';\nexports.path = 'type';\nexports.factory = factory;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar number = __webpack_require__(1);\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a range. A range has a start, step, and end, and contains functions\n   * to iterate over the range.\n   *\n   * A range can be constructed as:\n   *     var range = new Range(start, end);\n   *     var range = new Range(start, end, step);\n   *\n   * To get the result of the range:\n   *     range.forEach(function (x) {\n   *         console.log(x);\n   *     });\n   *     range.map(function (x) {\n   *         return math.sin(x);\n   *     });\n   *     range.toArray();\n   *\n   * Example usage:\n   *     var c = new Range(2, 6);         // 2:1:5\n   *     c.toArray();                     // [2, 3, 4, 5]\n   *     var d = new Range(2, -3, -1);    // 2:-1:-2\n   *     d.toArray();                     // [2, 1, 0, -1, -2]\n   *\n   * @class Range\n   * @constructor Range\n   * @param {number} start  included lower bound\n   * @param {number} end    excluded upper bound\n   * @param {number} [step] step size, default value is 1\n   */\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (start != null) {\n      if (type.isBigNumber(start))\n        start = start.toNumber();\n      else if (typeof start !== 'number')\n        throw new TypeError('Parameter start must be a number');\n    }\n    if (end != null) {\n      if (type.isBigNumber(end))\n        end = end.toNumber();\n      else if (typeof end !== 'number')\n        throw new TypeError('Parameter end must be a number');\n    }\n    if (step != null) {\n      if (type.isBigNumber(step))\n        step = step.toNumber();\n      else if (typeof step !== 'number')\n        throw new TypeError('Parameter step must be a number');\n    }\n\n    this.start = (start != null) ? parseFloat(start) : 0;\n    this.end   = (end != null)   ? parseFloat(end)   : 0;\n    this.step  = (step != null)  ? parseFloat(step)  : 1;\n  }\n\n  /**\n   * Attach type information\n   */\n  Range.prototype.type = 'Range';\n  Range.prototype.isRange = true;\n\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @memberof Range\n   * @param {string} str\n   * @return {Range | null} range\n   */\n  Range.parse = function (str) {\n    if (typeof str !== 'string') {\n      return null;\n    }\n\n    var args = str.split(':');\n    var nums = args.map(function (arg) {\n      return parseFloat(arg);\n    });\n\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return new Range(nums[0], nums[1]);\n      case 3:\n        return new Range(nums[0], nums[2], nums[1]);\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Create a clone of the range\n   * @return {Range} clone\n   */\n  Range.prototype.clone = function () {\n    return new Range(this.start, this.end, this.step);\n  };\n\n  /**\n   * Retrieve the size of the range.\n   * Returns an array containing one number, the number of elements in the range.\n   * @memberof Range\n   * @returns {number[]} size\n   */\n  Range.prototype.size = function () {\n    var len = 0,\n        start = this.start,\n        step = this.step,\n        end = this.end,\n        diff = end - start;\n\n    if (number.sign(step) == number.sign(diff)) {\n      len = Math.ceil((diff) / step);\n    }\n    else if (diff == 0) {\n      len = 0;\n    }\n\n    if (isNaN(len)) {\n      len = 0;\n    }\n    return [len];\n  };\n\n  /**\n   * Calculate the minimum value in the range\n   * @memberof Range\n   * @return {number | undefined} min\n   */\n  Range.prototype.min = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start;\n      }\n      else {\n        // negative step\n        return this.start + (size - 1) * this.step;\n      }\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Calculate the maximum value in the range\n   * @memberof Range\n   * @return {number | undefined} max\n   */\n  Range.prototype.max = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start + (size - 1) * this.step;\n      }\n      else {\n        // negative step\n        return this.start;\n      }\n    }\n    else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Execute a callback function for each value in the range.\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Range being traversed.\n   */\n  Range.prototype.forEach = function (callback) {\n    var x = this.start;\n    var step = this.step;\n    var end = this.end;\n    var i = 0;\n\n    if (step > 0) {\n      while (x < end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n    else if (step < 0) {\n      while (x > end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n  };\n\n  /**\n   * Execute a callback function for each value in the Range, and return the\n   * results as an array\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @returns {Array} array\n   */\n  Range.prototype.map = function (callback) {\n    var array = [];\n    this.forEach(function (value, index, obj) {\n      array[index[0]] = callback(value, index, obj);\n    });\n    return array;\n  };\n\n  /**\n   * Create an Array with a copy of the Ranges data\n   * @memberof Range\n   * @returns {Array} array\n   */\n  Range.prototype.toArray = function () {\n    var array = [];\n    this.forEach(function (value, index) {\n      array[index[0]] = value;\n    });\n    return array;\n  };\n\n  /**\n   * Get the primitive value of the Range, a one dimensional array\n   * @memberof Range\n   * @returns {Array} array\n   */\n  Range.prototype.valueOf = function () {\n    // TODO: implement a caching mechanism for range.valueOf()\n    return this.toArray();\n  };\n\n  /**\n   * Get a string representation of the range, with optional formatting options.\n   * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n   * @memberof Range\n   * @param {Object | number | function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Range.prototype.format = function (options) {\n    var str = number.format(this.start, options);\n\n    if (this.step != 1) {\n      str += ':' + number.format(this.step, options);\n    }\n    str += ':' + number.format(this.end, options);\n    return str;\n  };\n\n  /**\n   * Get a string representation of the range.\n   * @memberof Range\n   * @returns {string}\n   */\n  Range.prototype.toString = function () {\n    return this.format();\n  };\n\n  /**\n   * Get a JSON representation of the range\n   * @memberof Range\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   */\n  Range.prototype.toJSON = function () {\n    return {\n      mathjs: 'Range',\n      start: this.start,\n      end: this.end,\n      step: this.step\n    };\n  };\n\n  /**\n   * Instantiate a Range from a JSON object\n   * @memberof Range\n   * @param {Object} json A JSON object structured as:\n   *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   * @return {Range}\n   */\n  Range.fromJSON = function (json) {\n    return new Range(json.start, json.end, json.step);\n  };\n\n  return Range;\n}\n\nexports.name = 'Range';\nexports.path = 'type';\nexports.factory = factory;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create an index. An Index can store ranges having start, step, and end\n   * for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Syntax:\n   *\n   *     math.index(range1, range2, ...)\n   *\n   * Where each range can be any of:\n   *\n   * - A number\n   * - A string for getting/setting an object property\n   * - An instance of `Range`\n   * - A one-dimensional Array or a Matrix with numbers\n   *\n   * Indexes must be zero-based, integer numbers.\n   *\n   * Examples:\n   *\n   *    var math = math.js\n   *\n   *    var b = [1, 2, 3, 4, 5];\n   *    math.subset(b, math.index([1, 2, 3]));     // returns [2, 3, 4]\n   *\n   *    var a = math.matrix([[1, 2], [3, 4]]);\n   *    a.subset(math.index(0, 1));             // returns 2\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, matrix, number, string, unit\n   *\n   * @param {...*} ranges   Zero or more ranges or numbers.\n   * @return {Index}        Returns the created index\n   */\n  return typed('index', {\n    '...number | string | BigNumber | Range | Array | Matrix': function (args) {\n      var ranges = args.map(function (arg) {\n        if (type.isBigNumber(arg)) {\n          return arg.toNumber(); // convert BigNumber to Number\n        }\n        else if (Array.isArray(arg) || type.isMatrix(arg)) {\n          return arg.map(function (elem) {\n            // convert BigNumber to Number\n            return type.isBigNumber(elem) ? elem.toNumber() : elem;\n          });\n        }\n        else {\n          return arg;\n        }\n      });\n\n      var res = new type.Index();\n      type.Index.apply(res, ranges);\n      return res;\n    }\n  });\n}\n\nexports.name = 'index';\nexports.factory = factory;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction factory (type, config, load, typed) {\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Create a Sparse Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   *\n   * Syntax:\n   *\n   *    math.sparse()               // creates an empty sparse matrix.\n   *    math.sparse(data)           // creates a sparse matrix with initial data.\n   *    math.sparse(data, 'number') // creates a sparse matrix with initial data, number datatype.\n   *\n   * Examples:\n   *\n   *    var m = math.sparse([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, matrix\n   *\n   * @param {Array | Matrix} [data]    A two dimensional array\n   *\n   * @return {Matrix} The created matrix\n   */\n  var sparse = typed('sparse', {\n    '': function () {\n      return new SparseMatrix([]);\n    },\n    \n    'string': function (datatype) {\n      return new SparseMatrix([], datatype);\n    },\n\n    'Array | Matrix': function (data) {\n      return new SparseMatrix(data);\n    },\n    \n    'Array | Matrix, string': function (data, datatype) {\n      return new SparseMatrix(data, datatype);\n    }\n  });\n\n  sparse.toTex = {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  };\n\n  return sparse;\n}\n\nexports.name = 'sparse';\nexports.factory = factory;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar clone = __webpack_require__(0).clone;\nvar validateIndex = __webpack_require__(23).validateIndex;\nvar getSafeProperty = __webpack_require__(5).getSafeProperty;\nvar setSafeProperty = __webpack_require__(5).setSafeProperty;\nvar DimensionError = __webpack_require__(2);\n\nfunction factory (type, config, load, typed) {\n  var matrix = load(__webpack_require__(4));\n\n  /**\n   * Get or set a subset of a matrix or string.\n   *\n   * Syntax:\n   *     math.subset(value, index)                                // retrieve a subset\n   *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n   *\n   * Examples:\n   *\n   *     // get a subset\n   *     var d = [[1, 2], [3, 4]];\n   *     math.subset(d, math.index(1, 0));        // returns 3\n   *     math.subset(d, math.index([0, 2], 1));   // returns [[2], [4]]\n   *\n   *     // replace a subset\n   *     var e = [];\n   *     var f = math.subset(e, math.index(0, [0, 2]), [5, 6]);  // f = [[5, 6]]\n   *     var g = math.subset(f, math.index(1, 1), 7, 0);         // g = [[5, 6], [0, 7]]\n   *\n   * See also:\n   *\n   *     size, resize, squeeze, index\n   *\n   * @param {Array | Matrix | string} matrix  An array, matrix, or string\n   * @param {Index} index                     An index containing ranges for each\n   *                                          dimension\n   * @param {*} [replacement]                 An array, matrix, or scalar.\n   *                                          If provided, the subset is replaced with replacement.\n   *                                          If not provided, the subset is returned\n   * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n   *                                          the matrix is resized. If not provided,\n   *                                          math.matrix elements will be left undefined.\n   * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.\n   */\n  var subset = typed('subset', {\n    // get subset\n    'Array, Index': function (value, index) {\n      var m = matrix(value);\n      var subset = m.subset(index);       // returns a Matrix\n      return index.isScalar()\n          ? subset\n          : subset.valueOf();  // return an Array (like the input)\n    },\n\n    'Matrix, Index': function (value, index) {\n      return value.subset(index);\n    },\n\n    'Object, Index': _getObjectProperty,\n\n    'string, Index': _getSubstring,\n\n    // set subset\n    'Array, Index, any': function (value, index, replacement) {\n      return matrix(clone(value))\n          .subset(index, replacement, undefined)\n          .valueOf();\n    },\n\n    'Array, Index, any, any': function (value, index, replacement, defaultValue) {\n      return matrix(clone(value))\n          .subset(index, replacement, defaultValue)\n          .valueOf();\n    },\n\n    'Matrix, Index, any': function (value, index, replacement) {\n      return value.clone().subset(index, replacement);\n    },\n\n    'Matrix, Index, any, any': function (value, index, replacement, defaultValue) {\n      return value.clone().subset(index, replacement, defaultValue);\n    },\n\n    'string, Index, string': _setSubstring,\n    'string, Index, string, string': _setSubstring,\n    'Object, Index, any': _setObjectProperty\n  });\n\n  subset.toTex = undefined; // use default template\n\n  return subset;\n\n  /**\n   * Retrieve a subset of a string\n   * @param {string} str            string from which to get a substring\n   * @param {Index} index           An index containing ranges for each dimension\n   * @returns {string} substring\n   * @private\n   */\n  function _getSubstring(str, index) {\n    if (!type.isIndex(index)) {\n      // TODO: better error message\n      throw new TypeError('Index expected');\n    }\n    if (index.size().length != 1) {\n      throw new DimensionError(index.size().length, 1);\n    }\n\n    // validate whether the range is out of range\n    var strLen = str.length;\n    validateIndex(index.min()[0], strLen);\n    validateIndex(index.max()[0], strLen);\n\n    var range = index.dimension(0);\n\n    var substr = '';\n    range.forEach(function (v) {\n      substr += str.charAt(v);\n    });\n\n    return substr;\n  }\n\n  /**\n   * Replace a substring in a string\n   * @param {string} str            string to be replaced\n   * @param {Index} index           An index containing ranges for each dimension\n   * @param {string} replacement    Replacement string\n   * @param {string} [defaultValue] Default value to be uses when resizing\n   *                                the string. is ' ' by default\n   * @returns {string} result\n   * @private\n   */\n  function _setSubstring(str, index, replacement, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      // TODO: better error message\n      throw new TypeError('Index expected');\n    }\n    if (index.size().length != 1) {\n      throw new DimensionError(index.size().length, 1);\n    }\n    if (defaultValue !== undefined) {\n      if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    }\n    else {\n      defaultValue = ' ';\n    }\n\n    var range = index.dimension(0);\n    var len = range.size()[0];\n\n    if (len != replacement.length) {\n      throw new DimensionError(range.size()[0], replacement.length);\n    }\n\n    // validate whether the range is out of range\n    var strLen = str.length;\n    validateIndex(index.min()[0]);\n    validateIndex(index.max()[0]);\n\n    // copy the string into an array with characters\n    var chars = [];\n    for (var i = 0; i < strLen; i++) {\n      chars[i] = str.charAt(i);\n    }\n\n    range.forEach(function (v, i) {\n      chars[v] = replacement.charAt(i[0]);\n    });\n\n    // initialize undefined characters with a space\n    if (chars.length > strLen) {\n      for (i = strLen - 1, len = chars.length; i < len; i++) {\n        if (!chars[i]) {\n          chars[i] = defaultValue;\n        }\n      }\n    }\n\n    return chars.join('');\n  }\n}\n\n/**\n * Retrieve a property from an object\n * @param {Object} object\n * @param {Index} index\n * @return {*} Returns the value of the property\n * @private\n */\nfunction _getObjectProperty (object, index) {\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  }\n\n  return getSafeProperty(object, key);\n}\n\n/**\n * Set a property on an object\n * @param {Object} object\n * @param {Index} index\n * @param {*} replacement\n * @return {*} Returns the updated object\n * @private\n */\nfunction _setObjectProperty (object, index, replacement) {\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  }\n\n  // clone the object, and apply the property to the clone\n  var updated = clone(object);\n  setSafeProperty(updated, key, replacement);\n\n  return updated;\n}\n\nexports.name = 'subset';\nexports.factory = factory;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Datacube = __webpack_require__(20)\nvar isNil = __webpack_require__(102)\n\n/**\n * @typedef View\n * @property {HTMLCanvasElement} node\n * @property {Number[][][]} data\n * @property {string} axis\n * @property {Function} [onMouseMove]\n * @property {boolean} [matchCanvasToData=true] sets height and width to the same dims as the data from the axis perspective\n */\n/**\n * @memberOf DatacubeView\n * @property {HTMLCanvasElement} node\n * @property {ClientRect} nodeRect\n * @property {Datacube} datacube\n */\n\n/**\n * @class DatacubeView\n * @param {View} view\n */\nfunction DatacubeView (view) {\n  this.datacube = new Datacube({ data: view.data })\n  this.node = view.node\n  this.axis = view.axis\n  if (view.onMouseMove) this.onMouseMove = view.onMouseMove\n  this.ctx = this.node.getContext('2d')\n  this.node.addEventListener('mousemove', this.mousemove.bind(this))\n  this.position = Object.assign({}, this.datacube.midpoints)\n  if (view.matchCanvasToData || isNil(view.matchCanvasToData)) this.matchCanvasToData()\n  this.render()\n}\n\n/**\n * @private\n */\nDatacubeView.prototype.constrainAxisPosition = function (opts) {\n  var axis = opts.axis\n  var requested = opts.requested\n  if (requested <= 0) return 0\n  else if (requested >= this.datacube.dims[axis]) return this.datacube.dims[axis] - 1\n  return requested\n}\n\n/**\n * Resize datacube canvas node height & width to match data slice dimensions.\n * @returns {undefined}\n */\nDatacubeView.prototype.matchCanvasToData = function () {\n  if (this.axis === 'x') {\n    this.node.height = this.datacube.dims.z\n    this.node.width = this.datacube.dims.y\n  } else if (this.axis === 'y') {\n    this.node.height = this.datacube.dims.z\n    this.node.width = this.datacube.dims.x\n  } else { // z\n    this.node.height = this.datacube.dims.y\n    this.node.width = this.datacube.dims.x\n  }\n}\n\n/**\n * Handles a mousemove event on the canvas node & updates the view's `position`\n * value.\n * @param {Event} evt\n * @returns {undefined}\n */\nDatacubeView.prototype.mousemove = function (evt) {\n  if (this.axis === 'x') {\n    this.position.y = this.constrainAxisPosition({ axis: 'y', requested: evt.offsetX })\n    this.position.z = this.constrainAxisPosition({ axis: 'z', requested: evt.offsetY })\n  } else if (this.axis === 'y') {\n    this.position.x = this.constrainAxisPosition({ axis: 'x', requested: evt.offsetX })\n    this.position.z = this.constrainAxisPosition({ axis: 'z', requested: evt.offsetY })\n  } else { // z\n    this.position.x = this.constrainAxisPosition({ axis: 'x', requested: evt.offsetX })\n    this.position.y = this.constrainAxisPosition({ axis: 'y', requested: evt.offsetY })\n  }\n  console.log(this.position)\n  if (this.onMouseMove) this.onMouseMove(this)\n}\n\n/**\n * Renders the 2D slice of the data onto the canvas based on\n * the view's current `position`.\n * @returns {undefined}\n */\nDatacubeView.prototype.render = function () {\n  var slice = this.datacube.querySlice({\n    axis: this.axis,\n    value: Math.floor(this.position[this.axis])\n  })\n  var width = slice.length\n  var height = slice[0].length\n  var image = this.ctx.createImageData(width, height)\n  var pixelRgbaIndex = -1\n  for (var x = 0; x < slice.length; ++x) {\n    for (var y = 0; y < slice[0].length; ++y) {\n      var pixelValue = slice[x][y]\n      image.data[++pixelRgbaIndex] = 0\n      image.data[++pixelRgbaIndex] = 0\n      image.data[++pixelRgbaIndex] = 0\n      image.data[++pixelRgbaIndex] = pixelValue\n    }\n  }\n  this.ctx.putImageData(image, 0, 0)\n}\n\nmodule.exports = DatacubeView\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.1ea6f065.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/datacube-image-slicer/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b8a3ec8fb69c71da33b","'use strict';\n\nvar isBigNumber = require('./bignumber/isBigNumber');\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexports.clone = function clone(x) {\n  var type = typeof x;\n\n  // immutable primitive types\n  if (type === 'number' || type === 'string' || type === 'boolean' ||\n      x === null || x === undefined) {\n    return x;\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Number)    return new Number(x.valueOf());\n  if (x instanceof String)    return new String(x.valueOf());\n  if (x instanceof Boolean)   return new Boolean(x.valueOf());\n  if (x instanceof Date)      return new Date(x.valueOf());\n  if (isBigNumber(x))         return x; // bignumbers are immutable\n  if (x instanceof RegExp)  throw new TypeError('Cannot clone ' + x);  // TODO: clone a RegExp\n\n  // object\n  return exports.map(x, clone);\n};\n\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\nexports.map = function(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (exports.hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexports.extend = function(a, b) {\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n  return a;\n};\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexports.deepExtend = function deepExtend (a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        }\n        else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n  return a;\n};\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexports.deepEqual = function deepEqual (a, b) {\n  var prop, i, len;\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length != b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!exports.deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    for (prop in b) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return (typeof a === typeof b) && (a == b);\n  }\n};\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexports.canDefineProperty = function () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', { get: function () {} });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n * On older browsers (<IE8), the function will fall back to direct evaluation\n * of the properties value.\n * @param {Object} object   Object where to add the property\n * @param {string} prop     Property name\n * @param {Function} fn     Function returning the property value. Called\n *                          without arguments.\n */\nexports.lazy = function (object, prop, fn) {\n  if (exports.canDefineProperty()) {\n    var _uninitialized = true;\n    var _value;\n    Object.defineProperty(object, prop, {\n      get: function () {\n        if (_uninitialized) {\n          _value = fn();\n          _uninitialized = false;\n        }\n        return _value;\n      },\n\n      set: function (value) {\n        _value = value;\n        _uninitialized = false;\n      },\n\n      configurable: true,\n      enumerable: true\n    });\n  }\n  else {\n    // fall back to immediate evaluation\n    object[prop] = fn();\n  }\n};\n\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\nexports.traverse = function(object, path) {\n  var obj = object;\n\n  if (path) {\n    var names = path.split('.');\n    for (var i = 0; i < names.length; i++) {\n      var name = names[i];\n      if (!(name in obj)) {\n        obj[name] = {};\n      }\n      obj = obj[name];\n    }\n  }\n\n  return obj;\n};\n\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\nexports.hasOwnProperty = function (object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\nexports.isFactory = function (object) {\n  return object && typeof object.factory === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/object.js\n// module id = 0\n// module chunks = 0","'use strict';\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Test whether value is a number\n * @param {*} value\n * @return {boolean} isNumber\n */\nexports.isNumber = function(value) {\n  return typeof value === 'number';\n};\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\nexports.isInteger = function(value) {\n  return isFinite(value)\n      ? (value == Math.round(value))\n      : false;\n  // Note: we use ==, not ===, as we can have Booleans as well\n};\n\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {*}\n */\nexports.sign = Math.sign || function(x) {\n  if (x > 0) {\n    return 1;\n  }\n  else if (x < 0) {\n    return -1;\n  }\n  else {\n    return 0;\n  }\n};\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {number} lower and {number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'});        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexports.format = function(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity';\n  }\n  else if (value === -Infinity) {\n    return '-Infinity';\n  }\n  else if (isNaN(value)) {\n    return 'NaN';\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (exports.isNumber(options)) {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'engineering':\n      return exports.toEngineering(value, precision);\n\n    case 'auto':\n      return exports\n          .toPrecision(value, precision, options && options.exponential)\n\n          // remove trailing zeros after the decimal point\n          .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n            var digits = arguments[2];\n            var e = arguments[4];\n            return (digits !== '.') ? digits + e : e;\n          });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\nexports.splitNumber = function (value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign         = match[1];\n  var digits       = match[2];\n  var exponent     = parseFloat(match[4] || '0');\n\n  var dot = digits.indexOf('.');\n  exponent += (dot !== -1) ? (dot - 1) : (digits.length - 1);\n\n  var coefficients = digits\n      .replace('.', '')  // remove the dot (must be removed before removing leading zeros)\n      .replace(/^0*/, function (zeros) {\n        // remove leading zeros, add their count to the exponent\n        exponent -= zeros.length;\n        return '';\n      })\n      .replace(/0*$/, '') // remove trailing zeros\n      .split('')\n      .map(function (d) {\n        return parseInt(d);\n      });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n};\n\n\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toEngineering = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n  \n  var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n\n  var e = rounded.exponent;\n  var c = rounded.coefficients;\n\n  // find nearest lower multiple of 3 for exponent\n  var newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3));\n\n  // concatenate coefficients with necessary zeros\n  var significandsDiff = e >= 0 ? e : Math.abs(newExp);\n\n  // add zeros if necessary (for ex: 1e+8)\n  if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n\n  // find difference in exponents\n  var expDiff = Math.abs(e - newExp);\n\n  var decimalIdx = 1;\n\n  // push decimal index over by expDiff times\n  while (--expDiff >= 0) decimalIdx++;\n\n  // if all coefficient values are zero after the decimal point, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = decimals.match(/[1-9]/) ? ('.' + decimals) : '';\n\n  var str = c.slice(0, decimalIdx).join('') +\n      decimalVal +\n      'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n};\n\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = exports.splitNumber(value)\n  var rounded = exports.roundDigits(splitValue, splitValue.exponent + 1 + (precision || 0));\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n\n  // append zeros if needed\n  var pp = p + (precision || 0);\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  }\n\n  // insert a dot if needed\n  if (precision) {\n    c.splice(p, 0, (p === 0) ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nexports.toExponential = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // round if needed, else create a clone\n  var split = exports.splitNumber(value)\n  var rounded = precision ? exports.roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent;\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? ('.' + c.join('')) : '') +\n      'e' + (e >= 0 ? '+' : '') + e;\n}\n\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lower: number | undefined, upper: number | undefined}} [options]\n *                                       By default:\n *                                         lower = 1e-3 (excl)\n *                                         upper = 1e+5 (incl)\n * @return {string}\n */\nexports.toPrecision = function (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // determine lower and upper bound for exponential notation.\n  var lower = (options && options.lower !== undefined) ? options.lower : 1e-3;\n  var upper = (options && options.upper !== undefined) ? options.upper : 1e+5;\n\n  var split = exports.splitNumber(value)\n  var abs = Math.abs(Math.pow(10, split.exponent));\n  if (abs < lower || abs >= upper) {\n    // exponential notation\n    return exports.toExponential(value, precision);\n  }\n  else {\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent;\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 +\n        (c.length < precision ? precision - c.length : 0)));\n\n    // prepend zeros\n    c = zeros(-e).concat(c);\n\n    var dot = e > 0 ? e : 0;\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n}\n\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\nexports.roundDigits = function (split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  }\n  var c = rounded.coefficients;\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n      while (c[i] === 10) {\n        c.pop();\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n};\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n  return arr;\n}\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\nexports.digits = function(value) {\n  return value\n      .toExponential()\n      .replace(/e.*$/, '')          // remove exponential notation\n      .replace( /^0\\.?0*|\\./, '')   // remove decimal point and leading zeros\n      .length\n};\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\nexports.nearlyEqual = function(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) {\n    return x == y;\n  }\n\n  // use \"==\" operator, handles infinities\n  if (x == y) {\n    return true;\n  }\n\n  // NaN\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  }\n\n  // at this point x and y should be finite\n  if(isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n    if (diff < exports.DBL_EPSILON) {\n      return true;\n    }\n    else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/number.js\n// module id = 1\n// module chunks = 0","'use strict';\n\n/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nfunction DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual   = actual;\n  this.expected = expected;\n  this.relation = relation;\n\n  this.message = 'Dimension mismatch (' +\n      (Array.isArray(actual) ? ('[' + actual.join(', ') + ']') : actual) +\n      ' ' + (this.relation || '!=') + ' ' +\n      (Array.isArray(expected) ? ('[' + expected.join(', ') + ']') : expected) +\n      ')';\n\n  this.stack = (new Error()).stack;\n}\n\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;\n\nmodule.exports = DimensionError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/error/DimensionError.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nexports.array = require('./array');\nexports['boolean'] = require('./boolean');\nexports['function'] = require('./function');\nexports.number = require('./number');\nexports.object = require('./object');\nexports.string = require('./string');\nexports.types = require('./types');\nexports.emitter = require('./emitter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/index.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    var m = math.matrix([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  var matrix = typed('matrix', {\n    '': function () {\n      return _create([]);\n    },\n\n    'string': function (format) {\n      return _create([], format);\n    },\n    \n    'string, string': function (format, datatype) {\n      return _create([], format, datatype);\n    },\n\n    'Array': function (data) {\n      return _create(data);\n    },\n      \n    'Matrix': function (data) {\n      return _create(data, data.storage());\n    },\n    \n    'Array | Matrix, string': _create,\n    \n    'Array | Matrix, string, string': _create\n  });\n\n  matrix.toTex = {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  };\n\n  return matrix;\n\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    var M = type.Matrix.storage(format || 'default');\n\n    // create instance\n    return new M(data, datatype);\n  }\n}\n\nexports.name = 'matrix';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/function/matrix.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar hasOwnProperty = require('./object').hasOwnProperty;\n\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\nfunction getSafeProperty (object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\nfunction setSafeProperty (object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop] = value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\nfunction isSafeProperty (object, prop) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g length\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\nfunction validateSafeMethod (object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\nfunction isSafeMethod (object, method) {\n  if (!object || typeof object[method] !== 'function') {\n    return false;\n  }\n  // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n  if (hasOwnProperty(object, method) &&\n      (object.__proto__ && (method in object.__proto__))) {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g toString\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\nfunction isPlainObject (object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\n\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\n\nexports.getSafeProperty = getSafeProperty;\nexports.setSafeProperty = setSafeProperty;\nexports.isSafeProperty = isSafeProperty;\nexports.validateSafeMethod = validateSafeMethod;\nexports.isSafeMethod = isSafeMethod;\nexports.isPlainObject = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/customs.js\n// module id = 5\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 7\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 8\n// module chunks = 0","/**\n * Test whether a value is a BigNumber\n * @param {*} x\n * @return {boolean}\n */\nmodule.exports = function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber || false\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/bignumber/isBigNumber.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar util = require('../../utils/index');\n\nvar string = util.string;\n\nvar isString = string.isString;\n\nfunction factory (type, config, load, typed) {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *     var matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *     var matrix = math.matrix([[1, 2], [3, 4]]);\n   *     matix.size();              // [2, 2]\n   *     matrix.resize([3, 2], 5);\n   *     matrix.valueOf();          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n  Matrix.storage = function (format) {\n    // check storage format is a string\n    if (!isString(format)) {\n      throw new TypeError('format must be a string value');\n    }\n\n    // get storage format constructor\n    var constructor = Matrix._storage[format];\n    if (!constructor) {\n      throw new SyntaxError('Unsupported matrix storage format: ' + format);\n    }\n\n    // return storage constructor\n    return constructor;\n  };\n\n  // a map with all constructors for all storage types\n  Matrix._storage = {};\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  \n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n  Matrix.prototype.size = function() {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n   \n  // exports\n  return Matrix;\n}\n\nexports.name = 'Matrix';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/Matrix.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar nearlyEqual = require('../../utils/number').nearlyEqual;\nvar bigNearlyEqual = require('../../utils/bignumber/nearlyEqual');\n\nfunction factory (type, config, load, typed) {\n  \n  /**\n   * Test whether two values are equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  var equalScalar = typed('equalScalar', {\n\n    'boolean, boolean': function (x, y) {\n      return x === y;\n    },\n\n    'number, number': function (x, y) {\n      return x === y || nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.equals(y);\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.equals(y);\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return equalScalar(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x === y;\n    }\n  });\n  \n  return equalScalar;\n}\n\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/function/relational/equalScalar.js\n// module id = 11\n// module chunks = 0","'use strict';\n\n/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nmodule.exports = function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) {\n    return x.eq(y);\n  }\n\n\n  // use \"==\" operator, handles infinities\n  if (x.eq(y)) {\n    return true;\n  }\n\n  // NaN\n  if (x.isNaN() || y.isNaN()) {\n    return false;\n  }\n\n  // at this point x and y should be finite\n  if(x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = x.minus(y).abs();\n    if (diff.isZero()) {\n      return true;\n    }\n    else {\n      // use relative error\n      var max = x.constructor.max(x.abs(), y.abs());\n      return diff.lte(max.times(epsilon));\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/bignumber/nearlyEqual.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nexports.symbols = {\n  // GREEK LETTERS\n  Alpha: 'A',     alpha: '\\\\alpha',\n  Beta: 'B',      beta: '\\\\beta',\n  Gamma: '\\\\Gamma',    gamma: '\\\\gamma',\n  Delta: '\\\\Delta',    delta: '\\\\delta',\n  Epsilon: 'E',   epsilon: '\\\\epsilon',  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',      zeta: '\\\\zeta',\n  Eta: 'H',       eta: '\\\\eta',\n  Theta: '\\\\Theta',    theta: '\\\\theta',    vartheta: '\\\\vartheta',\n  Iota: 'I',      iota: '\\\\iota',\n  Kappa: 'K',     kappa: '\\\\kappa',    varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',   lambda: '\\\\lambda',\n  Mu: 'M',        mu: '\\\\mu',\n  Nu: 'N',        nu: '\\\\nu',\n  Xi: '\\\\Xi',       xi: '\\\\xi',\n  Omicron: 'O',   omicron: 'o',\n  Pi: '\\\\Pi',       pi: '\\\\pi',       varpi: '\\\\varpi',\n  Rho: 'P',       rho: '\\\\rho',      varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',    sigma: '\\\\sigma',    varsigma: '\\\\varsigma',\n  Tau: 'T',       tau: '\\\\tau',\n  Upsilon: '\\\\Upsilon',  upsilon: '\\\\upsilon',\n  Phi: '\\\\Phi',      phi: '\\\\phi',      varphi: '\\\\varphi',\n  Chi: 'X',       chi: '\\\\chi',\n  Psi: '\\\\Psi',      psi: '\\\\psi',\n  Omega: '\\\\Omega',    omega: '\\\\omega',\n  //logic\n  'true': '\\\\mathrm{True}',\n  'false': '\\\\mathrm{False}',\n  //other\n  i: 'i', //TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  'undefined': '\\\\mathbf{?}'\n};\n\nexports.operators = {\n  'transpose': '^\\\\top',\n  'factorial': '!',\n  'pow': '^',\n  'dotPow': '.^\\\\wedge', //TODO find ideal solution\n  'unaryPlus': '+',\n  'unaryMinus': '-',\n  'bitNot': '~', //TODO find ideal solution\n  'not': '\\\\neg',\n  'multiply': '\\\\cdot',\n  'divide': '\\\\frac', //TODO how to handle that properly?\n  'dotMultiply': '.\\\\cdot', //TODO find ideal solution\n  'dotDivide': '.:', //TODO find ideal solution\n  'mod': '\\\\mod',\n  'add': '+',\n  'subtract': '-',\n  'to': '\\\\rightarrow',\n  'leftShift': '<<',\n  'rightArithShift': '>>',\n  'rightLogShift': '>>>',\n  'equal': '=',\n  'unequal': '\\\\neq',\n  'smaller': '<',\n  'larger': '>',\n  'smallerEq': '\\\\leq',\n  'largerEq': '\\\\geq',\n  'bitAnd': '\\\\&',\n  'bitXor': '\\\\underline{|}',\n  'bitOr': '|',\n  'and': '\\\\wedge',\n  'xor': '\\\\veebar',\n  'or': '\\\\vee'\n};\n\nexports.defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\n\nvar units = {\n  deg: '^\\\\circ'\n};\n\n//@param {string} name\n//@param {boolean} isUnit\nexports.toSymbol = function (name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n  if (isUnit) {\n    if (units.hasOwnProperty(name)) {\n      return units[name];\n    }\n    return '\\\\mathrm{' + name + '}';\n  }\n\n  if (exports.symbols.hasOwnProperty(name)) {\n    return exports.symbols[name];\n  }\n  else if (name.indexOf('_') !== -1) {\n    //symbol with index (eg. alpha_1)\n    var index = name.indexOf('_');\n    return exports.toSymbol(name.substring(0, index)) + '_{'\n      + exports.toSymbol(name.substring(index + 1)) + '}';\n  }\n  return name;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/latex.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar util = require('../../../utils/index');\nvar DimensionError = require('../../../error/DimensionError');\n\nvar string = util.string,\n    isString = string.isString;\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  var algorithm13 = function (a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b arrays\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // c arrays\n    var csize = [];\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // validate each one of the dimension sizes\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s])\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      // update dimension in c\n      csize[s] = asize[s];\n    }\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // populate cdata, iterate through dimensions\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : [];\n    \n    // c matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  };\n  \n  // recursive function\n  var _iterate = function (f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    }\n    else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n    return cv;\n  };\n  \n  return algorithm13;\n}\n\nexports.name = 'algorithm13';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm13.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nvar clone = require('../../../utils/object').clone;\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  var algorithm14 = function (a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    \n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n    \n    // populate cdata, iterate through dimensions\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : [];\n\n    // c matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    });\n  };\n  \n  // recursive function\n  var _iterate = function (f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    }\n    else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n    return cv;\n  };\n\n  return algorithm14;\n}\n\nexports.name = 'algorithm14';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm14.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 16\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 19\n// module chunks = 0","'use strict'\n\nvar times = require('lodash/times')\nvar core = require('mathjs/core')\nvar math = core.create()\nmath.import(require('mathjs/lib/type/matrix'))\nmath.import(require('mathjs/lib/function/matrix/subset'))\n\n/**\n * @typedef DatacubeOptions\n * @property {Number[][][]} data\n */\n\n /**\n * @memberOf Datacube\n * @property {mathjs.Matrix} data\n * @property {Object<string, Number>} midpoints\n * @property {Object<string, Number>} dims lengths of each dimension\n * @property {Number[]} xRange\n * @property {Number[]} yRange\n * @property {Number[]} zRange\n */\n\n /**\n * @class Datacube\n * @param {DatacubeOptions} opts\n */\nfunction Datacube (opts) {\n  this.data = math.matrix(opts.data)\n  var size = this.data.size()\n  this.dims = {\n    x: size[0],\n    y: size[1],\n    z: size[2]\n  }\n  this.midpoints = {\n    x: Math.floor(this.dims.x / 2),\n    y: Math.floor(this.dims.y / 2),\n    z: Math.floor(this.dims.z / 2)\n  }\n  this.xRange = times(this.dims.x)\n  this.yRange = times(this.dims.y)\n  this.zRange = times(this.dims.z)\n}\n\n/**\n * Query a planar slice at the provided point in the remaining axies\n * @param {Object} opts\n * @param {string} opts.axis axis, x, y, or z\n * @param {Number} opts.value\n */\nDatacube.prototype.querySlice = function (opts) {\n  var index\n  if (opts.axis === 'x') {\n    index = math.index(opts.value, this.yRange, this.zRange)\n    return math.subset(this.data, index).toArray()[0]\n  } else if (opts.axis === 'y') {\n    index = math.index(this.xRange, opts.value, this.zRange)\n    return math.subset(this.data, index).toArray()\n    .map(function (y, xi) { return y[0] })\n  } else if (opts.axis === 'z') {\n    index = math.index(this.xRange, this.yRange, opts.value)\n    return math.subset(this.data, index).toArray()\n    .map(function (yi, xi) { return yi.map(function (z) { return z[0] }) })\n  }\n  throw new Error('invalid axis')\n}\n\nmodule.exports = Datacube\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/Datacube.js\n// module id = 20\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_Symbol.js\n// module id = 21\n// module chunks = 0","var Emitter = require('tiny-emitter');\n\n/**\n * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n * @param {Object} obj\n * @return {Object} obj\n */\nexports.mixin = function (obj) {\n  // create event emitter\n  var emitter = new Emitter();\n\n  // bind methods to obj (we don't want to expose the emitter.e Array...)\n  obj.on   = emitter.on.bind(emitter);\n  obj.off  = emitter.off.bind(emitter);\n  obj.once = emitter.once.bind(emitter);\n  obj.emit = emitter.emit.bind(emitter);\n\n  return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/emitter.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nvar number = require('./number');\nvar string = require('./string');\nvar object = require('./object');\nvar types = require('./types');\n\nvar DimensionError = require('../error/DimensionError');\nvar IndexError = require('../error/IndexError');\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\nexports.size = function (x) {\n  var s = [];\n\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n\n  return s;\n};\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len != size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n      _validate(array[i], size, dimNext);\n    }\n  }\n  else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexports.validate = function(array, size) {\n  var isScalar = (size.length == 0);\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  }\n  else {\n    // array\n    _validate(array, size, 0);\n  }\n};\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\nexports.validateIndex = function(index, length) {\n  if (!number.isNumber(index) || !number.isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n  if (index < 0 || (typeof length === 'number' && index >= length)) {\n    throw new IndexError(index, length);\n  }\n};\n\n// a constant used to specify an undefined defaultValue\nexports.UNINITIALIZED = {};\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. To leave new entries undefined,\n *                              specify array.UNINITIALIZED as defaultValue\n * @return {Array} array         The resized array\n */\nexports.resize = function(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + string.format(size) + ')');\n    }\n  });\n\n  // recursively resize the array\n  var _defaultValue = (defaultValue !== undefined) ? defaultValue : 0;\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n};\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize (array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen);\n\n  // apply new length\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1;\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n        array[i] = elem;\n      }\n      _resize(elem, size, dimNext, defaultValue);\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem;\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  }\n  else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    }\n\n    if(defaultValue !== exports.UNINITIALIZED) {\n      // fill new elements with the default value\n      for (i = minLen; i < newLen; i++) {\n        array[i] = defaultValue;\n      }\n    }\n  }\n}\n\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nexports.reshape = function(array, sizes) {\n  var flatArray = exports.flatten(array);\n  var newArray;\n\n  var product = function (arr) {\n    return arr.reduce(function (prev, curr) {\n      return prev * curr;\n    });\n  };\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(exports.size(array)), '!=');\n  }\n\n  try {\n    newArray  = _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(\n        product(sizes),\n        product(exports.size(array)),\n        '!='\n      );\n    }\n    throw e;\n  }\n\n  if (flatArray.length > 0) {\n    throw new DimensionError(\n      product(sizes),\n      product(exports.size(array)),\n      '!='\n    );\n  }\n\n  return newArray;\n};\n\n/**\n * Recursively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nfunction _reshape(array, sizes) {\n  var accumulator = [];\n  var i;\n\n  if (sizes.length === 0) {\n    if (array.length === 0) {\n      throw new DimensionError(null, null, '!=');\n    }\n    return array.shift();\n  }\n  for (i = 0; i < sizes[0]; i += 1) {\n    accumulator.push(_reshape(array, sizes.slice(1)));\n  }\n  return accumulator;\n}\n\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\nexports.squeeze = function(array, size) {\n  var s = size || exports.size(array);\n\n  // squeeze outer dimensions\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  }\n\n  // find the first dimension to be squeezed\n  var dims = s.length;\n  while (s[dims - 1] === 1) {\n    dims--;\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n};\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze (array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  }\n  else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n * \n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n * \n * @param {Array} array\n * @param {number} dims     Desired number of dimensions of the array\n * @param {number} [outer]  Number of outer dimensions to be added\n * @param {Array} [size]    Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\nexports.unsqueeze = function(array, dims, outer, size) {\n  var s = size || exports.size(array);\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0);\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n};\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze (array, dims, dim) {\n  var i, ii;\n\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  }\n  else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\nexports.flatten = function(array) {\n  if (!Array.isArray(array)) {\n    //if not an array, return as is\n    return array;\n  }\n  var flat = [];\n\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback);  //traverse through sub-arrays recursively\n    }\n    else {\n      flat.push(value);\n    }\n  });\n\n  return flat;\n};\n\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\nexports.map = function (array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\nexports.forEach = function (array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\nexports.filter = function (array, callback) {\n  if (exports.size(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, callback);\n}\n\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\nexports.filterRegExp = function (array, regexp) {\n  if (exports.size(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, function (entry) {\n    return regexp.test(entry);\n  });\n}\n\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\nexports.join = function (array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array}\ta  An array\n * @return {Array}\tAn array of objects containing the original value and its identifier\n */\nexports.identify = function(a) {\n  if (!Array.isArray(a)) {\n\tthrow new TypeError('Array input expected');\n  }\n\t\n  if (a.length === 0) {\n\treturn a;\n  }\n\t\n  var b = [];\n  var count = 0;\n  b[0] = {value: a[0], identifier: 0};\n  for (var i=1; i<a.length; i++) {\n    if (a[i] === a[i-1]) {\n  \tcount++;\n    }\n    else {\n      count = 0;\n    }\n    b.push({value: a[i], identifier: count});\n  }\n  return b;\n}\n\n/**\n * Remove the numeric identifier from the elements\n * @param\ta  An array\n * @return\tAn array of values without identifiers\n */\nexports.generalize = function(a) {\n  if (!Array.isArray(a)) {\n\tthrow new TypeError('Array input expected');\n  }\n\t\n  if (a.length === 0) {\n\treturn a;\n  }\n\t\n  var b = [];\n  for (var i=0; i<a.length; i++) {\n    b.push(a[i].value);\n  }\n  return b;\n}\n\n/**\n * Test whether an object is an array\n * @param {*} value\n * @return {boolean} isArray\n */\nexports.isArray = Array.isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/array.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nvar formatNumber = require('./number').format;\nvar formatBigNumber = require('./bignumber/formatter').format;\nvar isBigNumber = require('./bignumber/isBigNumber');\n\n/**\n * Test whether value is a string\n * @param {*} value\n * @return {boolean} isString\n */\nexports.isString = function(value) {\n  return typeof value === 'string';\n};\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\nexports.endsWith = function(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return (text.substring(start, end) === search);\n};\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7);                // '0.2857142857142857'\n *     math.format(math.pi, 3);         // '3.14'\n *     math.format(new Complex(2, 3));  // '2 + 3i'\n *     math.format('hello');            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\nexports.format = function(value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  }\n\n  // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return (value.s * value.n) + '/' + value.d;\n    }\n    else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (exports.isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    }\n    else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString();\n    }\n    else {\n      var entries = [];\n\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n};\n\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function (value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n\n      c = text.charAt(i);\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\';  // no valid escape character -> escape it\n      }\n      escaped += c;\n    }\n    else if (c === '\"') {\n      escaped += '\\\\\"';\n    }\n    else {\n      escaped += c;\n    }\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n}\n\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\nexports.escape = function (value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;')\n\t\t\t .replace(/\"/g, '&quot;')\n\t\t\t .replace(/'/g, '&#39;')\n\t\t\t .replace(/</g, '&lt;')\n\t\t\t .replace(/>/g, '&gt;');\n  \n  return text;\n}\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\nfunction formatArray (array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n    for (var i = 0; i < len; i++) {\n      if (i != 0) {\n        str += ', ';\n      }\n      str += formatArray(array[i], options);\n    }\n    str += ']';\n    return str;\n  }\n  else {\n    return exports.format(array, options);\n  }\n}\n\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\nfunction looksLikeFraction (value) {\n  return (value &&\n      typeof value === 'object' &&\n      typeof value.s === 'number' &&\n      typeof value.n === 'number' &&\n      typeof value.d === 'number') || false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/string.js\n// module id = 24\n// module chunks = 0","'use strict';\n\n/**\n * Determine the type of a variable\n *\n *     type(x)\n *\n * The following types are recognized:\n *\n *     'undefined'\n *     'null'\n *     'boolean'\n *     'number'\n *     'string'\n *     'Array'\n *     'Function'\n *     'Date'\n *     'RegExp'\n *     'Object'\n *\n * @param {*} x\n * @return {string} Returns the name of the type. Primitive types are lower case,\n *                  non-primitive types are upper-camel-case.\n *                  For example 'number', 'string', 'Array', 'Date'.\n */\nexports.type = function(x) {\n  var type = typeof x;\n\n  if (type === 'object') {\n    if (x === null)           return 'null';\n    if (Array.isArray(x))     return 'Array';\n    if (x instanceof Date)    return 'Date';\n    if (x instanceof RegExp)  return 'RegExp';\n    if (x instanceof Boolean) return 'boolean';\n    if (x instanceof Number)  return 'number';\n    if (x instanceof String)  return 'string';\n\n    return 'Object';\n  }\n\n  if (type === 'function')    return 'Function';\n\n  return type;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/types.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nvar util = require('../../utils/index');\nvar DimensionError = require('../../error/DimensionError');\nvar getSafeProperty = require('../../utils/customs').getSafeProperty;\nvar setSafeProperty = require('../../utils/customs').setSafeProperty;\n\nvar string = util.string;\nvar array = util.array;\nvar object = util.object;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = number.isNumber;\nvar isInteger = number.isInteger;\nvar isString = string.isString;\n\nvar validateIndex = array.validateIndex;\n\nfunction factory (type, config, load, typed) {\n  var Matrix = load(require('./Matrix')); // force loading Matrix (do not use via type.Matrix)\n\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n\n    if (type.isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = object.clone(data._data);\n        this._size = object.clone(data._size);\n        this._datatype = datatype || data._datatype;\n      }\n      else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    }\n    else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data);\n      // get the dimensions of the array\n      this._size = array.size(this._data);\n      // verify the dimensions of the array, TODO: compute size while processing array\n      array.validate(this._data, this._size);\n      // data type unknown\n      this._datatype = datatype;\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n  \n  DenseMatrix.prototype = new Matrix();\n\n  /**\n   * Attach type information\n   */\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | DenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check index\n    for (var x = 0; x < index.length; x++)\n      validateIndex(index[x], this._size[x]);\n\n    var data = this._data;\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    return data;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length < this._size.length)\n      throw new DimensionError(index.length, this._size.length, '<');\n\n    var i, ii, index_i;\n\n    // enlarge matrix when needed\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n    _fit(this, size, defaultValue);\n\n    // traverse over the dimensions\n    var data = this._data;\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    // set new value\n    index_i = index[index.length - 1];\n    validateIndex(index_i, data.length);\n    data[index_i] = value;\n\n    return this;\n  };\n  \n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get (matrix, index) {\n    if (!type.isIndex(index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    }\n    else {\n      // validate dimensions\n      var size = index.size();\n      if (size.length != matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      }\n\n      // validate if any of the ranges in the index is out of range\n      var min = index.min();\n      var max = index.max();\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n  \n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix (data, index, dims, dim) {\n    var last = (dim === dims - 1);\n    var range = index.dimension(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        return data[i];\n      }).valueOf();\n    }\n    else {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n  \n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set (matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (type.isMatrix(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    }\n    else {\n      sSize = array.size(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // set a submatrix\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // enlarge matrix when needed\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n      _fit(matrix, size, defaultValue);\n\n      // insert the sub matrix\n      var dims = iSize.length,\n          dim = 0;\n      _setSubmatrix (matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  \n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix (data, index, submatrix, dims, dim) {\n    var last = (dim === dims - 1),\n        range = index.dimension(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    }\n    else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size, defaultValue);\n  };\n  \n  var _resize = function (matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data;\n      // go deep\n      while (isArray(v)) {\n        v = v[0];\n      }\n      return v;\n    }\n    // resize matrix\n    matrix._size = size.slice(0); // copy the array\n    matrix._data = array.resize(matrix._data, matrix._size, defaultValue);\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n\n    m._data = array.reshape(m._data, size);\n    m._size = size.slice(0);\n    return m;\n  };\n  \n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit(matrix, size, defaultValue) {\n    var newSize = matrix._size.slice(0), // copy the array\n        changed = false;\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    }\n\n    // enlarge size when needed\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n  DenseMatrix.prototype.size = function() {\n    return this._size.slice(0); // return a clone of _size\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      }\n      else {\n        return callback(value, index, me);\n      }\n    };\n    // return dense format\n    return new DenseMatrix({\n      data: recurse(this._data, []),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      }\n      else {\n        callback(value, index, me);\n      }\n    };\n    recurse(this._data, []);\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return object.clone(this._data);\n  };\n  \n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return string.format(this._data, options);\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return string.format(this._data);\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  \n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Array}                      The array vector with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // x is a matrix get diagonal from matrix\n    var data = [];\n    \n    // loop rows\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n  \n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                   The matrix size.\n   * @param {number | Array} value          The values for the diagonal.\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]        The default value for non-diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (type.isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n    \n    if (defaultValue && isString(datatype)) {\n      // convert defaultValue to the same datatype\n      defaultValue = typed.convert(defaultValue, datatype);\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };      \n    }\n    else if (type.isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // discover default value if needed\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = type.isBigNumber(_value(0)) ? new type.BigNumber(0) : 0;\n    }\n\n    // empty array\n    var data = [];\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = array.resize(data, size, defaultValue);\n      // fill diagonal\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    }\n    \n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n  \n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n\n    // swap rows\n    DenseMatrix._swapRows(i, j, this._data);\n    // return current instance\n    return this;\n  };\n\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   */\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n      if (isArray(elem)) {\n        data[i] = preprocess(elem);\n      }\n      else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  // register this type in the base class Matrix\n  type.Matrix._storage.dense = DenseMatrix;\n  type.Matrix._storage['default'] = DenseMatrix;\n\n  // exports\n  return DenseMatrix;\n}\n\nexports.name = 'DenseMatrix';\nexports.path = 'type';\nexports.factory = factory;\nexports.lazy = false;  // no lazy loading, as we alter type.Matrix._storage\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/DenseMatrix.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nvar nearlyEqual = require('../../utils/number').nearlyEqual;\nvar bigNearlyEqual = require('../../utils/bignumber/nearlyEqual');\n\nfunction factory (type, config, load, typed) {\n\n  var matrix = load(require('../../type/matrix/function/matrix'));\n\n  var algorithm03 = load(require('../../type/matrix/utils/algorithm03'));\n  var algorithm07 = load(require('../../type/matrix/utils/algorithm07'));\n  var algorithm12 = load(require('../../type/matrix/utils/algorithm12'));\n  var algorithm13 = load(require('../../type/matrix/utils/algorithm13'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n\n  var latex = require('../../utils/latex');\n\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3);            // returns true\n   *    math.smaller(5, 2 * 2);        // returns false\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.smaller(a, b);            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, smaller, smallerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  var smaller = typed('smaller', {\n\n    'boolean, boolean': function (x, y) {\n      return x < y;\n    },\n\n    'number, number': function (x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.lt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === -1;\n    },\n\n    'Complex, Complex': function (x, y) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return smaller(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x < y;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n\n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm07(x, y, smaller);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm03(y, x, smaller, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm03(x, y, smaller, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, smaller);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), matrix(y)).valueOf();\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(x, matrix(y));\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm12(x, y, smaller, false);\n          break;\n        default:\n          c = algorithm14(x, y, smaller, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm12(y, x, smaller, true);\n          break;\n        default:\n          c = algorithm14(y, x, smaller, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, smaller, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, smaller, true).valueOf();\n    }\n  });\n\n  smaller.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['smaller'] + '${args[1]}\\\\right)'\n  };\n\n  return smaller;\n}\n\nexports.name = 'smaller';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/function/relational/smaller.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  var algorithm03 = function (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype;\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues)\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result (DenseMatrix)\n    var cdata = [];\n\n    // initialize dense matrix\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    }\n\n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      }\n      // process workspace\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        }\n        else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n  \n  return algorithm03;\n}\n\nexports.name = 'algorithm03';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm03.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  var algorithm07 = function (a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype;\n    // sparse matrix arrays\n    var bsize = b._size;\n    var bdt = b._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // vars\n    var i, j;\n    \n    // result arrays\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++)\n      cdata[i] = [];\n\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var xa = [];\n    var xb = [];\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // scatter the values of A(:,j) into workspace\n      _scatter(a, j, wa, xa, mark);\n      // scatter the values of B(:,j) into workspace\n      _scatter(b, j, wb, xb, mark);\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero;\n        // invoke callback\n        cdata[i][j] = cf(va, vb);\n      }          \n    }\n\n    // return sparse matrix\n    return c;\n  };\n  \n  var _scatter = function (m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr;\n    // loop values in column j\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k];\n      // update workspace\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  };\n  \n  return algorithm07;\n}\n\nexports.name = 'algorithm07';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm07.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm12 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n    \n    // result arrays\n    var cdata = [];\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        }\n        else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c;\n  };\n  \n  return algorithm12;\n}\n\nexports.name = 'algorithm12';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm12.js\n// module id = 30\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 32\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 33\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 34\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 35\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 36\n// module chunks = 0","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n React v16.0.0\n react.production.min.js\n\n Copyright (c) 2013-present, Facebook, Inc.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n*/\n'use strict';var f=require(\"object-assign\"),p=require(\"fbjs/lib/emptyObject\");require(\"fbjs/lib/invariant\");var r=require(\"fbjs/lib/emptyFunction\");\nfunction t(a){for(var b=arguments.length-1,d=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,e=0;e<b;e++)d+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[e+1]);b=Error(d+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar u={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function v(a,b,d){this.props=a;this.context=b;this.refs=p;this.updater=d||u}v.prototype.isReactComponent={};v.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?t(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};v.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction w(a,b,d){this.props=a;this.context=b;this.refs=p;this.updater=d||u}function x(){}x.prototype=v.prototype;var y=w.prototype=new x;y.constructor=w;f(y,v.prototype);y.isPureReactComponent=!0;function z(a,b,d){this.props=a;this.context=b;this.refs=p;this.updater=d||u}var A=z.prototype=new x;A.constructor=z;f(A,v.prototype);A.unstable_isAsyncReactComponent=!0;A.render=function(){return this.props.children};\nvar B={Component:v,PureComponent:w,AsyncComponent:z},C={current:null},D=Object.prototype.hasOwnProperty,E=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103,F={key:!0,ref:!0,__self:!0,__source:!0};function G(a,b,d,e,c,g,k){return{$$typeof:E,type:a,key:b,ref:d,props:k,_owner:g}}\nG.createElement=function(a,b,d){var e,c={},g=null,k=null,m=null,q=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),m=void 0===b.__self?null:b.__self,q=void 0===b.__source?null:b.__source,b)D.call(b,e)&&!F.hasOwnProperty(e)&&(c[e]=b[e]);var l=arguments.length-2;if(1===l)c.children=d;else if(1<l){for(var h=Array(l),n=0;n<l;n++)h[n]=arguments[n+2];c.children=h}if(a&&a.defaultProps)for(e in l=a.defaultProps,l)void 0===c[e]&&(c[e]=l[e]);return G(a,g,k,m,q,C.current,c)};\nG.createFactory=function(a){var b=G.createElement.bind(null,a);b.type=a;return b};G.cloneAndReplaceKey=function(a,b){return G(a.type,b,a.ref,a._self,a._source,a._owner,a.props)};\nG.cloneElement=function(a,b,d){var e=f({},a.props),c=a.key,g=a.ref,k=a._self,m=a._source,q=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,q=C.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var l=a.type.defaultProps;for(h in b)D.call(b,h)&&!F.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==l?l[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=d;else if(1<h){l=Array(h);for(var n=0;n<h;n++)l[n]=arguments[n+2];e.children=l}return G(a.type,c,g,k,m,q,e)};\nG.isValidElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===E};var H=\"function\"===typeof Symbol&&Symbol.iterator,I=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103;function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var J=/\\/+/g,K=[];\nfunction L(a,b,d,e){if(K.length){var c=K.pop();c.result=a;c.keyPrefix=b;c.func=d;c.context=e;c.count=0;return c}return{result:a,keyPrefix:b,func:d,context:e,count:0}}function M(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>K.length&&K.push(a)}\nfunction N(a,b,d,e){var c=typeof a;if(\"undefined\"===c||\"boolean\"===c)a=null;if(null===a||\"string\"===c||\"number\"===c||\"object\"===c&&a.$$typeof===I)return d(e,a,\"\"===b?\".\"+O(a,0):b),1;var g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var m=b+O(c,k);g+=N(c,m,d,e)}else if(m=H&&a[H]||a[\"@@iterator\"],\"function\"===typeof m)for(a=m.call(a),k=0;!(c=a.next()).done;)c=c.value,m=b+O(c,k++),g+=N(c,m,d,e);else\"object\"===c&&(d=\"\"+a,t(\"31\",\"[object Object]\"===d?\"object with keys {\"+\nObject.keys(a).join(\", \")+\"}\":d,\"\"));return g}function O(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function P(a,b){a.func.call(a.context,b,a.count++)}function Q(a,b,d){var e=a.result,c=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?R(a,e,d,r.thatReturnsArgument):null!=a&&(G.isValidElement(a)&&(a=G.cloneAndReplaceKey(a,c+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(J,\"$\\x26/\")+\"/\")+d)),e.push(a))}\nfunction R(a,b,d,e,c){var g=\"\";null!=d&&(g=(\"\"+d).replace(J,\"$\\x26/\")+\"/\");b=L(b,g,e,c);null==a||N(a,\"\",Q,b);M(b)}var S={forEach:function(a,b,d){if(null==a)return a;b=L(null,null,b,d);null==a||N(a,\"\",P,b);M(b)},map:function(a,b,d){if(null==a)return a;var e=[];R(a,e,null,b,d);return e},count:function(a){return null==a?0:N(a,\"\",r.thatReturnsNull,null)},toArray:function(a){var b=[];R(a,b,null,r.thatReturnsArgument);return b}};\nmodule.exports={Children:{map:S.map,forEach:S.forEach,count:S.count,toArray:S.toArray,only:function(a){G.isValidElement(a)?void 0:t(\"143\");return a}},Component:B.Component,PureComponent:B.PureComponent,unstable_AsyncComponent:B.AsyncComponent,createElement:G.createElement,cloneElement:G.cloneElement,isValidElement:G.isValidElement,createFactory:G.createFactory,version:\"16.0.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:f}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 38\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 39\n// module chunks = 0","/*\n React v16.0.0\n react-dom.production.min.js\n\n Copyright (c) 2013-present, Facebook, Inc.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\");require(\"fbjs/lib/invariant\");var l=require(\"fbjs/lib/ExecutionEnvironment\"),n=require(\"object-assign\"),ba=require(\"fbjs/lib/EventListener\"),ca=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/emptyObject\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/focusNode\"),ia=require(\"fbjs/lib/getActiveElement\");\nfunction w(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:w(\"227\");\nfunction ja(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nvar ka={Namespaces:{html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"},getIntrinsicNamespace:ja,getChildNamespace:function(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ja(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}},la=null,oa={};\nfunction pa(){if(la)for(var a in oa){var b=oa[a],c=la.indexOf(a);-1<c?void 0:w(\"96\",a);if(!qa.plugins[c]){b.extractEvents?void 0:w(\"97\",a);qa.plugins[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.eventNameDispatchConfigs.hasOwnProperty(h)?w(\"99\",h):void 0;qa.eventNameDispatchConfigs[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:w(\"98\",d,a)}}}}\nfunction ra(a,b,c){qa.registrationNameModules[a]?w(\"100\",a):void 0;qa.registrationNameModules[a]=b;qa.registrationNameDependencies[a]=b.eventTypes[c].dependencies}\nvar qa={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(a){la?w(\"101\"):void 0;la=Array.prototype.slice.call(a);pa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];oa.hasOwnProperty(c)&&oa[c]===d||(oa[c]?w(\"102\",c):void 0,oa[c]=d,b=!0)}b&&pa()}},sa=qa,ta={children:!0,dangerouslySetInnerHTML:!0,autoFocus:!0,defaultValue:!0,defaultChecked:!0,\ninnerHTML:!0,suppressContentEditableWarning:!0,style:!0};function ua(a,b){return(a&b)===b}\nvar wa={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=wa,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){xa.properties.hasOwnProperty(f)?w(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:ua(h,b.MUST_USE_PROPERTY),\nhasBooleanValue:ua(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:ua(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:ua(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:ua(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:ua(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:w(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);xa.properties[f]=\ng}}},xa={ID_ATTRIBUTE_NAME:\"data-reactid\",ROOT_ATTRIBUTE_NAME:\"data-reactroot\",ATTRIBUTE_NAME_START_CHAR:\":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\",ATTRIBUTE_NAME_CHAR:\":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\",\nproperties:{},shouldSetAttribute:function(a,b){if(xa.isReservedProp(a)||!(\"o\"!==a[0]&&\"O\"!==a[0]||\"n\"!==a[1]&&\"N\"!==a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return xa.shouldAttributeAcceptBooleanValue(a);case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}},getPropertyInfo:function(a){return xa.properties.hasOwnProperty(a)?xa.properties[a]:null},shouldAttributeAcceptBooleanValue:function(a){if(xa.isReservedProp(a))return!0;var b=xa.getPropertyInfo(a);\nif(b)return b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue;a=a.toLowerCase().slice(0,5);return\"data-\"===a||\"aria-\"===a},isReservedProp:function(a){return ta.hasOwnProperty(a)},injection:wa},A=xa,E={IndeterminateComponent:0,FunctionalComponent:1,ClassComponent:2,HostRoot:3,HostPortal:4,HostComponent:5,HostText:6,CoroutineComponent:7,CoroutineHandlerPhase:8,YieldComponent:9,Fragment:10},F={ELEMENT_NODE:1,TEXT_NODE:3,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_FRAGMENT_NODE:11},\nya=E.HostComponent,za=E.HostText,Aa=F.ELEMENT_NODE,Ba=F.COMMENT_NODE,Ea=A.ID_ATTRIBUTE_NAME,Fa={hasCachedChildNodes:1},Ga=Math.random().toString(36).slice(2),Ha=\"__reactInternalInstance$\"+Ga,Ia=\"__reactEventHandlers$\"+Ga;function La(a){for(var b;b=a._renderedComponent;)a=b;return a}function Ma(a,b){a=La(a);a._hostNode=b;b[Ha]=a}\nfunction Na(a,b){if(!(a._flags&Fa.hasCachedChildNodes)){var c=a._renderedChildren;b=b.firstChild;var d;a:for(d in c)if(c.hasOwnProperty(d)){var e=c[d],f=La(e)._domID;if(0!==f){for(;null!==b;b=b.nextSibling){var g=b,h=f;if(g.nodeType===Aa&&g.getAttribute(Ea)===\"\"+h||g.nodeType===Ba&&g.nodeValue===\" react-text: \"+h+\" \"||g.nodeType===Ba&&g.nodeValue===\" react-empty: \"+h+\" \"){Ma(e,b);continue a}}w(\"32\",f)}}a._flags|=Fa.hasCachedChildNodes}}\nfunction Oa(a){if(a[Ha])return a[Ha];for(var b=[];!a[Ha];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=a[Ha];if(c.tag===ya||c.tag===za)return c;for(;a&&(c=a[Ha]);a=b.pop()){var d=c;b.length&&Na(c,a)}return d}\nvar G={getClosestInstanceFromNode:Oa,getInstanceFromNode:function(a){var b=a[Ha];if(b)return b.tag===ya||b.tag===za?b:b._hostNode===a?b:null;b=Oa(a);return null!=b&&b._hostNode===a?b:null},getNodeFromInstance:function(a){if(a.tag===ya||a.tag===za)return a.stateNode;void 0===a._hostNode?w(\"33\"):void 0;if(a._hostNode)return a._hostNode;for(var b=[];!a._hostNode;)b.push(a),a._hostParent?void 0:w(\"34\"),a=a._hostParent;for(;b.length;a=b.pop())Na(a,a._hostNode);return a._hostNode},precacheChildNodes:Na,\nprecacheNode:Ma,uncacheNode:function(a){var b=a._hostNode;b&&(delete b[Ha],a._hostNode=null)},precacheFiberNode:function(a,b){b[Ha]=a},getFiberCurrentPropsFromNode:function(a){return a[Ia]||null},updateFiberProps:function(a,b){a[Ia]=b}},Pa={remove:function(a){a._reactInternalFiber=void 0},get:function(a){return a._reactInternalFiber},has:function(a){return void 0!==a._reactInternalFiber},set:function(a,b){a._reactInternalFiber=b}},Qa={ReactCurrentOwner:aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner};\nfunction Ra(a){if(\"function\"===typeof a.getName)return a.getName();if(\"number\"===typeof a.tag){a=a.type;if(\"string\"===typeof a)return a;if(\"function\"===typeof a)return a.displayName||a.name}return null}var J={NoEffect:0,PerformedWork:1,Placement:2,Update:4,PlacementAndUpdate:6,Deletion:8,ContentReset:16,Callback:32,Err:64,Ref:128},Sa=E.HostComponent,Ta=E.HostRoot,Ua=E.HostPortal,Va=E.HostText,Wa=J.NoEffect,Xa=J.Placement;\nfunction Za(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if((b.effectTag&Xa)!==Wa)return 1;for(;b[\"return\"];)if(b=b[\"return\"],(b.effectTag&Xa)!==Wa)return 1}return b.tag===Ta?2:3}function $a(a){2!==Za(a)?w(\"188\"):void 0}\nfunction ab(a){var b=a.alternate;if(!b)return b=Za(a),3===b?w(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return $a(e),a;if(g===d)return $a(e),b;g=g.sibling}w(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:w(\"189\")}}c.alternate!==d?w(\"190\"):void 0}c.tag!==Ta?w(\"188\"):void 0;return c.stateNode.current===c?a:b}\nvar bb={isFiberMounted:function(a){return 2===Za(a)},isMounted:function(a){return(a=Pa.get(a))?2===Za(a):!1},findCurrentFiberUsingSlowPath:ab,findCurrentHostFiber:function(a){a=ab(a);if(!a)return null;for(var b=a;;){if(b.tag===Sa||b.tag===Va)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null},findCurrentHostFiberWithNoPortals:function(a){a=ab(a);\nif(!a)return null;for(var b=a;;){if(b.tag===Sa||b.tag===Va)return b;if(b.child&&b.tag!==Ua)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}},K={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?w(\"197\"):void 0;cb=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,\nb,c,d,e,f,g,h,k){cb.apply(K,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){K.invokeGuardedCallback.apply(this,arguments);if(K.hasCaughtError()){var p=K.clearCaughtError();K._hasRethrowError||(K._hasRethrowError=!0,K._rethrowError=p)}},rethrowCaughtError:function(){return db.apply(K,arguments)},hasCaughtError:function(){return K._hasCaughtError},clearCaughtError:function(){if(K._hasCaughtError){var a=K._caughtError;K._caughtError=null;K._hasCaughtError=!1;return a}w(\"198\")}};\nfunction cb(a,b,c,d,e,f,g,h,k){K._hasCaughtError=!1;K._caughtError=null;var p=Array.prototype.slice.call(arguments,3);try{b.apply(c,p)}catch(x){K._caughtError=x,K._hasCaughtError=!0}}function db(){if(K._hasRethrowError){var a=K._rethrowError;K._rethrowError=null;K._hasRethrowError=!1;throw a;}}var eb=K,fb;function gb(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=hb.getNodeFromInstance(d);eb.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nvar hb={isEndish:function(a){return\"topMouseUp\"===a||\"topTouchEnd\"===a||\"topTouchCancel\"===a},isMoveish:function(a){return\"topMouseMove\"===a||\"topTouchMove\"===a},isStartish:function(a){return\"topMouseDown\"===a||\"topTouchStart\"===a},executeDirectDispatch:function(a){var b=a._dispatchListeners,c=a._dispatchInstances;Array.isArray(b)?w(\"103\"):void 0;a.currentTarget=b?hb.getNodeFromInstance(c):null;b=b?b(a):null;a.currentTarget=null;a._dispatchListeners=null;a._dispatchInstances=null;return b},executeDispatchesInOrder:function(a,\nb){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)gb(a,b,c[e],d[e]);else c&&gb(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null},executeDispatchesInOrderStopAtTrue:function(a){a:{var b=a._dispatchListeners;var c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++){if(b[d](a,c[d])){b=c[d];break a}}else if(b&&b(a,c)){b=c;break a}b=null}a._dispatchInstances=null;a._dispatchListeners=\nnull;return b},hasDispatches:function(a){return!!a._dispatchListeners},getFiberCurrentPropsFromNode:function(a){return fb.getFiberCurrentPropsFromNode(a)},getInstanceFromNode:function(a){return fb.getInstanceFromNode(a)},getNodeFromInstance:function(a){return fb.getNodeFromInstance(a)},injection:{injectComponentTree:function(a){fb=a}}},ib=hb,jb=null,kb=null,lb=null;\nfunction mb(a){if(a=ib.getInstanceFromNode(a))if(\"number\"===typeof a.tag){jb&&\"function\"===typeof jb.restoreControlledState?void 0:w(\"194\");var b=ib.getFiberCurrentPropsFromNode(a.stateNode);jb.restoreControlledState(a.stateNode,a.type,b)}else\"function\"!==typeof a.restoreControlledState?w(\"195\"):void 0,a.restoreControlledState()}\nvar nb={injection:{injectFiberControlledHostComponent:function(a){jb=a}},enqueueStateRestore:function(a){kb?lb?lb.push(a):lb=[a]:kb=a},restoreStateIfNeeded:function(){if(kb){var a=kb,b=lb;lb=kb=null;mb(a);if(b)for(a=0;a<b.length;a++)mb(b[a])}}};function ob(a,b,c,d,e,f){return a(b,c,d,e,f)}function pb(a,b){return a(b)}function qb(a,b){return pb(a,b)}\nvar rb=!1,sb={batchedUpdates:function(a,b){if(rb)return ob(qb,a,b);rb=!0;try{return ob(qb,a,b)}finally{rb=!1,nb.restoreStateIfNeeded()}},injection:{injectStackBatchedUpdates:function(a){ob=a},injectFiberBatchedUpdates:function(a){pb=a}}},tb=F.TEXT_NODE;function ub(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return a.nodeType===tb?a.parentNode:a}var vb=E.HostRoot,wb=[];\nfunction xb(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c=b;if(\"number\"===typeof c.tag){for(;c[\"return\"];)c=c[\"return\"];c=c.tag!==vb?null:c.stateNode.containerInfo}else{for(;c._hostParent;)c=c._hostParent;c=G.getNodeFromInstance(c).parentNode}if(!c)break;a.ancestors.push(b);b=G.getClosestInstanceFromNode(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],yb._handleTopLevel(a.topLevelType,b,a.nativeEvent,ub(a.nativeEvent))}\nvar yb={_enabled:!0,_handleTopLevel:null,setHandleTopLevel:function(a){yb._handleTopLevel=a},setEnabled:function(a){yb._enabled=!!a},isEnabled:function(){return yb._enabled},trapBubbledEvent:function(a,b,c){return c?ba.listen(c,b,yb.dispatchEvent.bind(null,a)):null},trapCapturedEvent:function(a,b,c){return c?ba.capture(c,b,yb.dispatchEvent.bind(null,a)):null},dispatchEvent:function(a,b){if(yb._enabled){var c=ub(b);c=G.getClosestInstanceFromNode(c);null===c||\"number\"!==typeof c.tag||bb.isFiberMounted(c)||\n(c=null);if(wb.length){var d=wb.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{sb.batchedUpdates(xb,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>wb.length&&wb.push(a)}}}},L=yb;function Cb(a,b){null==b?w(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction Db(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Eb=null;function Fb(a,b){a&&(ib.executeDispatchesInOrder(a,b),a.isPersistent()||a.constructor.release(a))}function Gb(a){return Fb(a,!0)}function Hb(a){return Fb(a,!1)}\nfunction Ib(a,b,c){switch(a){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":return!(!c.disabled||\"button\"!==b&&\"input\"!==b&&\"select\"!==b&&\"textarea\"!==b);default:return!1}}\nvar Jb={injection:{injectEventPluginOrder:sa.injectEventPluginOrder,injectEventPluginsByName:sa.injectEventPluginsByName},getListener:function(a,b){if(\"number\"===typeof a.tag){var c=a.stateNode;if(!c)return null;var d=ib.getFiberCurrentPropsFromNode(c);if(!d)return null;c=d[b];if(Ib(b,a.type,d))return null}else{d=a._currentElement;if(\"string\"===typeof d||\"number\"===typeof d||!a._rootNodeID)return null;a=d.props;c=a[b];if(Ib(b,d.type,a))return null}c&&\"function\"!==typeof c?w(\"231\",b,typeof c):void 0;\nreturn c},extractEvents:function(a,b,c,d){for(var e,f=sa.plugins,g=0;g<f.length;g++){var h=f[g];h&&(h=h.extractEvents(a,b,c,d))&&(e=Cb(e,h))}return e},enqueueEvents:function(a){a&&(Eb=Cb(Eb,a))},processEventQueue:function(a){var b=Eb;Eb=null;a?Db(b,Gb):Db(b,Hb);Eb?w(\"95\"):void 0;eb.rethrowCaughtError()}},Kb;l.canUseDOM&&(Kb=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction Lb(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&Kb&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function Mb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar Nb={animationend:Mb(\"Animation\",\"AnimationEnd\"),animationiteration:Mb(\"Animation\",\"AnimationIteration\"),animationstart:Mb(\"Animation\",\"AnimationStart\"),transitionend:Mb(\"Transition\",\"TransitionEnd\")},Ob={},Pb={};l.canUseDOM&&(Pb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Nb.animationend.animation,delete Nb.animationiteration.animation,delete Nb.animationstart.animation),\"TransitionEvent\"in window||delete Nb.transitionend.transition);\nfunction Qb(a){if(Ob[a])return Ob[a];if(!Nb[a])return a;var b=Nb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Pb)return Ob[a]=b[c];return\"\"}\nvar Rb={topAbort:\"abort\",topAnimationEnd:Qb(\"animationend\")||\"animationend\",topAnimationIteration:Qb(\"animationiteration\")||\"animationiteration\",topAnimationStart:Qb(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:Qb(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Sb={},Tb=0,Ub=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Vb(a){Object.prototype.hasOwnProperty.call(a,Ub)||(a[Ub]=Tb++,Sb[a[Ub]]={});return Sb[a[Ub]]}\nvar M=n({},{handleTopLevel:function(a,b,c,d){a=Jb.extractEvents(a,b,c,d);Jb.enqueueEvents(a);Jb.processEventQueue(!1)}},{setEnabled:function(a){L&&L.setEnabled(a)},isEnabled:function(){return!(!L||!L.isEnabled())},listenTo:function(a,b){var c=Vb(b);a=sa.registrationNameDependencies[a];for(var d=0;d<a.length;d++){var e=a[d];c.hasOwnProperty(e)&&c[e]||(\"topWheel\"===e?Lb(\"wheel\")?L.trapBubbledEvent(\"topWheel\",\"wheel\",b):Lb(\"mousewheel\")?L.trapBubbledEvent(\"topWheel\",\"mousewheel\",b):L.trapBubbledEvent(\"topWheel\",\n\"DOMMouseScroll\",b):\"topScroll\"===e?L.trapCapturedEvent(\"topScroll\",\"scroll\",b):\"topFocus\"===e||\"topBlur\"===e?(L.trapCapturedEvent(\"topFocus\",\"focus\",b),L.trapCapturedEvent(\"topBlur\",\"blur\",b),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(Lb(\"cancel\",!0)&&L.trapCapturedEvent(\"topCancel\",\"cancel\",b),c.topCancel=!0):\"topClose\"===e?(Lb(\"close\",!0)&&L.trapCapturedEvent(\"topClose\",\"close\",b),c.topClose=!0):Rb.hasOwnProperty(e)&&L.trapBubbledEvent(e,Rb[e],b),c[e]=!0)}},isListeningToAllDependencies:function(a,\nb){b=Vb(b);a=sa.registrationNameDependencies[a];for(var c=0;c<a.length;c++){var d=a[c];if(!b.hasOwnProperty(d)||!b[d])return!1}return!0},trapBubbledEvent:function(a,b,c){return L.trapBubbledEvent(a,b,c)},trapCapturedEvent:function(a,b,c){return L.trapCapturedEvent(a,b,c)}}),Wb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,\nflexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Xb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];\nObject.keys(Wb).forEach(function(a){Xb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Wb[b]=Wb[a]})});\nvar Yb={isUnitlessNumber:Wb,shorthandPropertyExpansions:{background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,\nborderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}}},Zb=Yb.isUnitlessNumber,$b=!1;if(l.canUseDOM){var ac=document.createElement(\"div\").style;try{ac.font=\"\"}catch(a){$b=!0}}\nvar bc={createDangerousStringForStyles:function(){},setValueForStyles:function(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Zb.hasOwnProperty(e)&&Zb[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");if(d)a.setProperty(c,e);else if(e)a[c]=e;else if(d=$b&&Yb.shorthandPropertyExpansions[c])for(var g in d)a[g]=\"\";else a[c]=\"\"}}},cc=new RegExp(\"^[\"+A.ATTRIBUTE_NAME_START_CHAR+\n\"][\"+A.ATTRIBUTE_NAME_CHAR+\"]*$\"),dc={},ec={};function fc(a){if(ec.hasOwnProperty(a))return!0;if(dc.hasOwnProperty(a))return!1;if(cc.test(a))return ec[a]=!0;dc[a]=!0;return!1}\nvar gc={setAttributeForID:function(a,b){a.setAttribute(A.ID_ATTRIBUTE_NAME,b)},setAttributeForRoot:function(a){a.setAttribute(A.ROOT_ATTRIBUTE_NAME,\"\")},getValueForProperty:function(){},getValueForAttribute:function(){},setValueForProperty:function(a,b,c){var d=A.getPropertyInfo(b);if(d&&A.shouldSetAttribute(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?gc.deleteValueForProperty(a,\nb):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else gc.setValueForAttribute(a,b,A.shouldSetAttribute(b,c)?c:null)},setValueForAttribute:function(a,b,c){fc(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))},deleteValueForAttribute:function(a,b){a.removeAttribute(b)},deleteValueForProperty:function(a,b){var c=A.getPropertyInfo(b);\nc?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}},hc=gc,ic=Qa.ReactDebugCurrentFrame;function jc(){return null}\nvar kc={current:null,phase:null,resetCurrentFiber:function(){ic.getCurrentStack=null;kc.current=null;kc.phase=null},setCurrentFiber:function(a,b){ic.getCurrentStack=jc;kc.current=a;kc.phase=b},getCurrentFiberOwnerName:function(){return null},getCurrentFiberStackAddendum:jc},lc=kc,mc={getHostProps:function(a,b){var c=b.value,d=b.checked;return n({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?\nd:a._wrapperState.initialChecked})},initWrapperState:function(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}},updateWrapper:function(a,b){var c=b.checked;null!=c&&hc.setValueForProperty(a,\"checked\",c||!1);c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=\nc)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)},postMountWrapper:function(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==\nb&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)},restoreControlledState:function(a,b){mc.updateWrapper(a,b);var c=b.name;if(\"radio\"===b.type&&null!=c){for(b=a;b.parentNode;)b=b.parentNode;c=b.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+c)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=G.getFiberCurrentPropsFromNode(d);e?void 0:w(\"90\");mc.updateWrapper(d,e)}}}}},qc=mc;\nfunction rc(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}var sc={validateProps:function(){},postMountWrapper:function(a,b){null!=b.value&&a.setAttribute(\"value\",b.value)},getHostProps:function(a,b){a=n({children:void 0},b);if(b=rc(b.children))a.children=b;return a}};\nfunction tc(a,b,c){a=a.options;if(b){b={};for(var d=0;d<c.length;d++)b[\"$\"+c[d]]=!0;for(c=0;c<a.length;c++)d=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==d&&(a[c].selected=d)}else{c=\"\"+c;b=null;for(d=0;d<a.length;d++){if(a[d].value===c){a[d].selected=!0;return}null!==b||a[d].disabled||(b=a[d])}null!==b&&(b.selected=!0)}}\nvar uc={getHostProps:function(a,b){return n({},b,{value:void 0})},initWrapperState:function(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}},postMountWrapper:function(a,b){a.multiple=!!b.multiple;var c=b.value;null!=c?tc(a,!!b.multiple,c):null!=b.defaultValue&&tc(a,!!b.multiple,b.defaultValue)},postUpdateWrapper:function(a,b){a._wrapperState.initialValue=void 0;var c=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!b.multiple;var d=b.value;\nnull!=d?tc(a,!!b.multiple,d):c!==!!b.multiple&&(null!=b.defaultValue?tc(a,!!b.multiple,b.defaultValue):tc(a,!!b.multiple,b.multiple?[]:\"\"))},restoreControlledState:function(a,b){var c=b.value;null!=c&&tc(a,!!b.multiple,c)}},vc={getHostProps:function(a,b){null!=b.dangerouslySetInnerHTML?w(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})},initWrapperState:function(a,b){var c=b.value,d=c;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?\nw(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:w(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"),d=c);a._wrapperState={initialValue:\"\"+d}},updateWrapper:function(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)},postMountWrapper:function(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)},restoreControlledState:function(a,b){vc.updateWrapper(a,b)}},wc=vc,xc=n({menuitem:!0},{area:!0,\nbase:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function yc(a,b){b&&(xc[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?w(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?w(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:w(\"61\")),null!=b.style&&\"object\"!==typeof b.style?w(\"62\",\"\"):void 0)}\nfunction zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nvar Bc={_getTrackerFromNode:function(a){return a._valueTracker},track:function(a){a._valueTracker||(a._valueTracker=Ac(a))},updateValueIfChanged:function(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1},stopTracking:function(a){(a=a._valueTracker)&&a.stopTracking()}};\nfunction Cc(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nvar Dc=ka.Namespaces,Ec,Fc=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Dc.svg||\"innerHTML\"in a)a.innerHTML=b;else for(Ec=Ec||document.createElement(\"div\"),Ec.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\",b=Ec.firstChild;b.firstChild;)a.appendChild(b.firstChild)}),Gc=/[\"'&<>]/,Hc=F.TEXT_NODE;\nfunction Ic(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&c.nodeType===Hc){c.nodeValue=b;return}}a.textContent=b}\nl.canUseDOM&&(\"textContent\"in document.documentElement||(Ic=function(a,b){if(a.nodeType===Hc)a.nodeValue=b;else{if(\"boolean\"===typeof b||\"number\"===typeof b)b=\"\"+b;else{b=\"\"+b;var c=Gc.exec(b);if(c){var d=\"\",e,f=0;for(e=c.index;e<b.length;e++){switch(b.charCodeAt(e)){case 34:c=\"\\x26quot;\";break;case 38:c=\"\\x26amp;\";break;case 39:c=\"\\x26#x27;\";break;case 60:c=\"\\x26lt;\";break;case 62:c=\"\\x26gt;\";break;default:continue}f!==e&&(d+=b.substring(f,e));f=e+1;d+=c}b=f!==e?d+b.substring(f,e):d}}Fc(a,b)}}));\nvar Jc=Ic,Kc=lc.getCurrentFiberOwnerName,Lc=F.DOCUMENT_NODE,Mc=F.DOCUMENT_FRAGMENT_NODE,Nc=M.listenTo,Oc=sa.registrationNameModules,Pc=ka.Namespaces.html,Qc=ka.getIntrinsicNamespace;function Rc(a,b){Nc(b,a.nodeType===Lc||a.nodeType===Mc?a:a.ownerDocument)}\nvar Sc={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"},N={createElement:function(a,b,c,d){c=c.nodeType===Lc?c:c.ownerDocument;d===Pc&&(d=Qc(a));d===Pc?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a},createTextNode:function(a,b){return(b.nodeType===Lc?b:b.ownerDocument).createTextNode(a)},setInitialProperties:function(a,b,c,d){var e=Cc(b,c);switch(b){case \"iframe\":case \"object\":M.trapBubbledEvent(\"topLoad\",\n\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in Sc)Sc.hasOwnProperty(f)&&M.trapBubbledEvent(f,Sc[f],a);f=c;break;case \"source\":M.trapBubbledEvent(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":M.trapBubbledEvent(\"topError\",\"error\",a);M.trapBubbledEvent(\"topLoad\",\"load\",a);f=c;break;case \"form\":M.trapBubbledEvent(\"topReset\",\"reset\",a);M.trapBubbledEvent(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":M.trapBubbledEvent(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":qc.initWrapperState(a,\nc);f=qc.getHostProps(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(d,\"onChange\");break;case \"option\":sc.validateProps(a,c);f=sc.getHostProps(a,c);break;case \"select\":uc.initWrapperState(a,c);f=uc.getHostProps(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(d,\"onChange\");break;case \"textarea\":wc.initWrapperState(a,c);f=wc.getHostProps(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(d,\"onChange\");break;default:f=c}yc(b,f,Kc);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===\nh?bc.setValueForStyles(a,k):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Fc(a,k)):\"children\"===h?\"string\"===typeof k?Jc(a,k):\"number\"===typeof k&&Jc(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&(Oc.hasOwnProperty(h)?null!=k&&Rc(d,h):e?hc.setValueForAttribute(a,h,k):null!=k&&hc.setValueForProperty(a,h,k))}switch(b){case \"input\":Bc.track(a);qc.postMountWrapper(a,c);break;case \"textarea\":Bc.track(a);wc.postMountWrapper(a,c);break;case \"option\":sc.postMountWrapper(a,c);break;case \"select\":uc.postMountWrapper(a,\nc);break;default:\"function\"===typeof f.onClick&&(a.onclick=ca)}},diffProperties:function(a,b,c,d,e){var f=null;switch(b){case \"input\":c=qc.getHostProps(a,c);d=qc.getHostProps(a,d);f=[];break;case \"option\":c=sc.getHostProps(a,c);d=sc.getHostProps(a,d);f=[];break;case \"select\":c=uc.getHostProps(a,c);d=uc.getHostProps(a,d);f=[];break;case \"textarea\":c=wc.getHostProps(a,c);d=wc.getHostProps(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=ca)}yc(b,d,Kc);\nvar g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&(Oc.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&\nb[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&(Oc.hasOwnProperty(g)?(null!=k&&Rc(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f},updateProperties:function(a,b,c,d,e){Cc(c,d);d=Cc(c,e);for(var f=0;f<b.length;f+=\n2){var g=b[f],h=b[f+1];\"style\"===g?bc.setValueForStyles(a,h):\"dangerouslySetInnerHTML\"===g?Fc(a,h):\"children\"===g?Jc(a,h):d?null!=h?hc.setValueForAttribute(a,g,h):hc.deleteValueForAttribute(a,g):null!=h?hc.setValueForProperty(a,g,h):hc.deleteValueForProperty(a,g)}switch(c){case \"input\":qc.updateWrapper(a,e);Bc.updateValueIfChanged(a);break;case \"textarea\":wc.updateWrapper(a,e);break;case \"select\":uc.postUpdateWrapper(a,e)}},diffHydratedProperties:function(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":M.trapBubbledEvent(\"topLoad\",\n\"load\",a);break;case \"video\":case \"audio\":for(var f in Sc)Sc.hasOwnProperty(f)&&M.trapBubbledEvent(f,Sc[f],a);break;case \"source\":M.trapBubbledEvent(\"topError\",\"error\",a);break;case \"img\":case \"image\":M.trapBubbledEvent(\"topError\",\"error\",a);M.trapBubbledEvent(\"topLoad\",\"load\",a);break;case \"form\":M.trapBubbledEvent(\"topReset\",\"reset\",a);M.trapBubbledEvent(\"topSubmit\",\"submit\",a);break;case \"details\":M.trapBubbledEvent(\"topToggle\",\"toggle\",a);break;case \"input\":qc.initWrapperState(a,c);M.trapBubbledEvent(\"topInvalid\",\n\"invalid\",a);Rc(e,\"onChange\");break;case \"option\":sc.validateProps(a,c);break;case \"select\":uc.initWrapperState(a,c);M.trapBubbledEvent(\"topInvalid\",\"invalid\",a);Rc(e,\"onChange\");break;case \"textarea\":wc.initWrapperState(a,c),M.trapBubbledEvent(\"topInvalid\",\"invalid\",a),Rc(e,\"onChange\")}yc(b,c,Kc);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Oc.hasOwnProperty(g)&&\nnull!=f&&Rc(e,g));switch(b){case \"input\":Bc.track(a);qc.postMountWrapper(a,c);break;case \"textarea\":Bc.track(a);wc.postMountWrapper(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=ca)}return d},diffHydratedText:function(a,b){return a.nodeValue!==b},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,\nb,c){switch(b){case \"input\":qc.restoreControlledState(a,c);break;case \"textarea\":wc.restoreControlledState(a,c);break;case \"select\":uc.restoreControlledState(a,c)}}},Tc=void 0;\nif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback){var Uc=null,Vc=null,Wc=!1,Xc=!1,Yc=0,Zc=33,$c=33,ad={timeRemaining:\"object\"===typeof performance&&\"function\"===typeof performance.now?function(){return Yc-performance.now()}:function(){return Yc-Date.now()}},bd=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){a.source===window&&a.data===bd&&(Wc=!1,a=Vc,Vc=null,null!==a&&a(ad))},!1);var cd=function(a){Xc=!1;var b=a-Yc+$c;b<$c&&Zc<$c?(8>\nb&&(b=8),$c=b<Zc?Zc:b):Zc=b;Yc=a+$c;Wc||(Wc=!0,window.postMessage(bd,\"*\"));b=Uc;Uc=null;null!==b&&b(a)};Tc=function(a){Vc=a;Xc||(Xc=!0,requestAnimationFrame(cd));return 0}}else Tc=requestIdleCallback;else Tc=function(a){setTimeout(function(){a({timeRemaining:function(){return Infinity}})});return 0};\nvar dd={rIC:Tc},ed={enableAsyncSubtreeAPI:!0},Q={NoWork:0,SynchronousPriority:1,TaskPriority:2,HighPriority:3,LowPriority:4,OffscreenPriority:5},fd=J.Callback,gd=Q.NoWork,hd=Q.SynchronousPriority,id=Q.TaskPriority,jd=E.ClassComponent,kd=E.HostRoot,md=void 0,nd=void 0;function od(a,b){return a!==id&&a!==hd||b!==id&&b!==hd?a===gd&&b!==gd?-255:a!==gd&&b===gd?255:a-b:0}function pd(){return{first:null,last:null,hasForceUpdate:!1,callbackList:null}}\nfunction qd(a,b,c,d){null!==c?c.next=b:(b.next=a.first,a.first=b);null!==d?b.next=d:a.last=b}function rd(a,b){b=b.priorityLevel;var c=null;if(null!==a.last&&0>=od(a.last.priorityLevel,b))c=a.last;else for(a=a.first;null!==a&&0>=od(a.priorityLevel,b);)c=a,a=a.next;return c}\nfunction sd(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=pd());null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=pd())):a=null;md=d;nd=a!==d?a:null;var e=md;c=nd;var f=rd(e,b),g=null!==f?f.next:e.first;if(null===c)return qd(e,b,f,g),null;d=rd(c,b);a=null!==d?d.next:c.first;qd(e,b,f,g);if(g===a&&null!==g||f===d&&null!==f)return null===d&&(c.first=b),null===a&&(c.last=null),null;b={priorityLevel:b.priorityLevel,partialState:b.partialState,callback:b.callback,isReplace:b.isReplace,\nisForced:b.isForced,isTopLevelUnmount:b.isTopLevelUnmount,next:null};qd(c,b,d,a);return b}function td(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nvar ud={addUpdate:function(a,b,c,d){sd(a,{priorityLevel:d,partialState:b,callback:c,isReplace:!1,isForced:!1,isTopLevelUnmount:!1,next:null})},addReplaceUpdate:function(a,b,c,d){sd(a,{priorityLevel:d,partialState:b,callback:c,isReplace:!0,isForced:!1,isTopLevelUnmount:!1,next:null})},addForceUpdate:function(a,b,c){sd(a,{priorityLevel:c,partialState:null,callback:b,isReplace:!1,isForced:!0,isTopLevelUnmount:!1,next:null})},getUpdatePriority:function(a){var b=a.updateQueue;return null===b||a.tag!==\njd&&a.tag!==kd?gd:null!==b.first?b.first.priorityLevel:gd},addTopLevelUpdate:function(a,b,c,d){var e=null===b.element;b={priorityLevel:d,partialState:b,callback:c,isReplace:!1,isForced:!1,isTopLevelUnmount:e,next:null};a=sd(a,b);e&&(e=md,c=nd,null!==e&&null!==b.next&&(b.next=null,e.last=b),null!==c&&null!==a&&null!==a.next&&(a.next=null,c.last=b))},beginUpdateQueue:function(a,b,c,d,e,f,g){null!==a&&a.updateQueue===c&&(c=b.updateQueue={first:c.first,last:c.last,callbackList:null,hasForceUpdate:!1});\na=c.callbackList;for(var h=c.hasForceUpdate,k=!0,p=c.first;null!==p&&0>=od(p.priorityLevel,g);){c.first=p.next;null===c.first&&(c.last=null);var x;if(p.isReplace)e=td(p,d,e,f),k=!0;else if(x=td(p,d,e,f))e=k?n({},e,x):n(e,x),k=!1;p.isForced&&(h=!0);null===p.callback||p.isTopLevelUnmount&&null!==p.next||(a=null!==a?a:[],a.push(p.callback),b.effectTag|=fd);p=p.next}c.callbackList=a;c.hasForceUpdate=h;null!==c.first||null!==a||h||(b.updateQueue=null);return e},commitCallbacks:function(a,b,c){a=b.callbackList;\nif(null!==a)for(b.callbackList=null,b=0;b<a.length;b++){var d=a[b];\"function\"!==typeof d?w(\"191\",d):void 0;d.call(c)}}},vd=[],wd=-1,xd={createCursor:function(a){return{current:a}},isEmpty:function(){return-1===wd},pop:function(a){0>wd||(a.current=vd[wd],vd[wd]=null,wd--)},push:function(a,b){wd++;vd[wd]=a.current;a.current=b},reset:function(){for(;-1<wd;)vd[wd]=null,wd--}},yd=bb.isFiberMounted,zd=E.ClassComponent,Ad=E.HostRoot,Bd=xd.createCursor,Cd=xd.pop,Dd=xd.push,Ed=Bd(da),Fd=Bd(!1),Ld=da;\nfunction Md(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function Nd(a){return a.tag===zd&&null!=a.type.childContextTypes}function Od(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:w(\"108\",Ra(a)||\"Unknown\",e);return n({},b,c)}\nvar R={getUnmaskedContext:function(a){return Nd(a)?Ld:Ed.current},cacheContext:Md,getMaskedContext:function(a,b){var c=a.type.contextTypes;if(!c)return da;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&Md(a,b,e);return e},hasContextChanged:function(){return Fd.current},isContextConsumer:function(a){return a.tag===zd&&null!=a.type.contextTypes},isContextProvider:Nd,popContextProvider:function(a){Nd(a)&&\n(Cd(Fd,a),Cd(Ed,a))},popTopLevelContextObject:function(a){Cd(Fd,a);Cd(Ed,a)},pushTopLevelContextObject:function(a,b,c){null!=Ed.cursor?w(\"168\"):void 0;Dd(Ed,b,a);Dd(Fd,c,a)},processChildContext:Od,pushContextProvider:function(a){if(!Nd(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||da;Ld=Ed.current;Dd(Ed,b,a);Dd(Fd,Fd.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:w(\"169\");if(b){var d=Od(a,Ld,!0);c.__reactInternalMemoizedMergedChildContext=\nd;Cd(Fd,a);Cd(Ed,a);Dd(Ed,d,a)}else Cd(Fd,a);Dd(Fd,b,a)},resetContext:function(){Ld=da;Ed.current=da;Fd.current=!1},findCurrentUnmaskedContext:function(a){for(yd(a)&&a.tag===zd?void 0:w(\"170\");a.tag!==Ad;){if(Nd(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:w(\"171\")}return a.stateNode.context}},Pd={NoContext:0,AsyncUpdates:1},Qd=E.IndeterminateComponent,Rd=E.ClassComponent,Sd=E.HostRoot,Td=E.HostComponent,Ud=E.HostText,Vd=E.HostPortal,Wd=E.CoroutineComponent,\nXd=E.YieldComponent,Yd=E.Fragment,Zd=Q.NoWork,$d=Pd.NoContext,ae=J.NoEffect;function be(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=ae;this.lastEffect=this.firstEffect=this.nextEffect=null;this.pendingWorkPriority=Zd;this.alternate=null}\nfunction ce(a,b,c){var d=void 0;\"function\"===typeof a?(d=a.prototype&&a.prototype.isReactComponent?new be(Rd,b,c):new be(Qd,b,c),d.type=a):\"string\"===typeof a?(d=new be(Td,b,c),d.type=a):\"object\"===typeof a&&null!==a&&\"number\"===typeof a.tag?d=a:w(\"130\",null==a?a:typeof a,\"\");return d}\nvar de={createWorkInProgress:function(a,b){var c=a.alternate;null===c?(c=new be(a.tag,a.key,a.internalContextTag),c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.effectTag=ae,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.pendingWorkPriority=b;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c},createHostRootFiber:function(){return new be(Sd,null,$d)},\ncreateFiberFromElement:function(a,b,c){b=ce(a.type,a.key,b,null);b.pendingProps=a.props;b.pendingWorkPriority=c;return b},createFiberFromFragment:function(a,b,c){b=new be(Yd,null,b);b.pendingProps=a;b.pendingWorkPriority=c;return b},createFiberFromText:function(a,b,c){b=new be(Ud,null,b);b.pendingProps=a;b.pendingWorkPriority=c;return b},createFiberFromElementType:ce,createFiberFromHostInstanceForDeletion:function(){var a=new be(Td,null,$d);a.type=\"DELETED\";return a},createFiberFromCoroutine:function(a,\nb,c){b=new be(Wd,a.key,b);b.type=a.handler;b.pendingProps=a;b.pendingWorkPriority=c;return b},createFiberFromYield:function(a,b){return new be(Xd,null,b)},createFiberFromPortal:function(a,b,c){b=new be(Vd,a.key,b);b.pendingProps=a.children||[];b.pendingWorkPriority=c;b.stateNode={containerInfo:a.containerInfo,implementation:a.implementation};return b},largerPriority:function(a,b){return a!==Zd&&(b===Zd||b>a)?a:b}},ee=de.createHostRootFiber,fe=E.IndeterminateComponent,ge=E.FunctionalComponent,he=E.ClassComponent,\nie=E.HostComponent,je,ke;\"function\"===typeof Symbol&&Symbol[\"for\"]?(je=Symbol[\"for\"](\"react.coroutine\"),ke=Symbol[\"for\"](\"react.yield\")):(je=60104,ke=60105);\nvar le={createCoroutine:function(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:je,key:null==d?null:\"\"+d,children:a,handler:b,props:c}},createYield:function(a){return{$$typeof:ke,value:a}},isCoroutine:function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===je},isYield:function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===ke},REACT_YIELD_TYPE:ke,REACT_COROUTINE_TYPE:je},me=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||\n60106,ne={createPortal:function(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:me,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}},isPortal:function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===me},REACT_PORTAL_TYPE:me},oe=le.REACT_COROUTINE_TYPE,pe=le.REACT_YIELD_TYPE,qe=ne.REACT_PORTAL_TYPE,re=de.createWorkInProgress,se=de.createFiberFromElement,te=de.createFiberFromFragment,ue=de.createFiberFromText,ve=de.createFiberFromCoroutine,\nwe=de.createFiberFromYield,xe=de.createFiberFromPortal,ye=Array.isArray,ze=E.FunctionalComponent,Ae=E.ClassComponent,Be=E.HostText,Ce=E.HostPortal,De=E.CoroutineComponent,Ee=E.YieldComponent,Fe=E.Fragment,Ge=J.NoEffect,He=J.Placement,Ie=J.Deletion,Je=\"function\"===typeof Symbol&&Symbol.iterator,Ke=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103;\nfunction Le(a){if(null===a||\"undefined\"===typeof a)return null;a=Je&&a[Je]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Me(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(\"number\"===typeof b.tag?(b.tag!==Ae?w(\"110\"):void 0,d=b.stateNode):d=b.getPublicInstance());d?void 0:w(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===da?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?w(\"148\"):void 0;b._owner?void 0:w(\"149\",c)}return c}\nfunction Ne(a,b){\"textarea\"!==a.type&&w(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Oe(a,b){function c(c,d){if(b){if(!a){if(null===d.alternate)return;d=d.alternate}var m=c.lastEffect;null!==m?(m.nextEffect=d,c.lastEffect=d):c.firstEffect=c.lastEffect=d;d.nextEffect=null;d.effectTag=Ie}}function d(a,d){if(!b)return null;for(;null!==d;)c(a,d),d=d.sibling;return null}function e(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function f(b,c){if(a)return b=re(b,c),b.index=0,b.sibling=null,b;b.pendingWorkPriority=c;b.effectTag=Ge;\nb.index=0;b.sibling=null;return b}function g(a,c,d){a.index=d;if(!b)return c;d=a.alternate;if(null!==d)return d=d.index,d<c?(a.effectTag=He,c):d;a.effectTag=He;return c}function h(a){b&&null===a.alternate&&(a.effectTag=He);return a}function k(a,b,c,d){if(null===b||b.tag!==Be)return c=ue(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c;b[\"return\"]=a;return b}function p(a,b,c,d){if(null===b||b.type!==c.type)return d=se(c,a.internalContextTag,d),d.ref=Me(b,c),d[\"return\"]=a,d;d=f(b,\nd);d.ref=Me(b,c);d.pendingProps=c.props;d[\"return\"]=a;return d}function x(a,b,c,d){if(null===b||b.tag!==De)return c=ve(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c;b[\"return\"]=a;return b}function S(a,b,c,d){if(null===b||b.tag!==Ee)return b=we(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=f(b,d);b.type=c.value;b[\"return\"]=a;return b}function D(a,b,c,d){if(null===b||b.tag!==Ce||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return c=\nxe(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c.children||[];b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||b.tag!==Fe)return c=te(c,a.internalContextTag,d),c[\"return\"]=a,c;b=f(b,d);b.pendingProps=c;b[\"return\"]=a;return b}function B(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ue(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Ke:return c=se(b,a.internalContextTag,c),c.ref=Me(null,b),c[\"return\"]=\na,c;case oe:return b=ve(b,a.internalContextTag,c),b[\"return\"]=a,b;case pe:return c=we(b,a.internalContextTag,c),c.type=b.value,c[\"return\"]=a,c;case qe:return b=xe(b,a.internalContextTag,c),b[\"return\"]=a,b}if(ye(b)||Le(b))return b=te(b,a.internalContextTag,c),b[\"return\"]=a,b;Ne(a,b)}return null}function H(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:k(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Ke:return c.key===e?p(a,\nb,c,d):null;case oe:return c.key===e?x(a,b,c,d):null;case pe:return null===e?S(a,b,c,d):null;case qe:return c.key===e?D(a,b,c,d):null}if(ye(c)||Le(c))return null!==e?null:y(a,b,c,d);Ne(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,k(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Ke:return a=a.get(null===d.key?c:d.key)||null,p(b,a,d,e);case oe:return a=a.get(null===d.key?c:d.key)||null,x(b,a,d,e);case pe:return a=a.get(c)||\nnull,S(b,a,d,e);case qe:return a=a.get(null===d.key?c:d.key)||null,D(b,a,d,e)}if(ye(d)||Le(d))return a=a.get(c)||null,y(b,a,d,e);Ne(b,d)}return null}function Ca(a,f,h,k){for(var m=null,t=null,q=f,r=f=0,p=null;null!==q&&r<h.length;r++){q.index>r?(p=q,q=null):p=q.sibling;var v=H(a,q,h[r],k);if(null===v){null===q&&(q=p);break}b&&q&&null===v.alternate&&c(a,q);f=g(v,f,r);null===t?m=v:t.sibling=v;t=v;q=p}if(r===h.length)return d(a,q),m;if(null===q){for(;r<h.length;r++)if(q=B(a,h[r],k))f=g(q,f,r),null===\nt?m=q:t.sibling=q,t=q;return m}for(q=e(a,q);r<h.length;r++)if(p=C(q,a,r,h[r],k)){if(b&&null!==p.alternate)q[\"delete\"](null===p.key?r:p.key);f=g(p,f,r);null===t?m=p:t.sibling=p;t=p}b&&q.forEach(function(b){return c(a,b)});return m}function r(a,f,h,r){var m=Le(h);\"function\"!==typeof m?w(\"150\"):void 0;h=m.call(h);null==h?w(\"151\"):void 0;for(var t=m=null,q=f,k=f=0,p=null,v=h.next();null!==q&&!v.done;k++,v=h.next()){q.index>k?(p=q,q=null):p=q.sibling;var V=H(a,q,v.value,r);if(null===V){q||(q=p);break}b&&\nq&&null===V.alternate&&c(a,q);f=g(V,f,k);null===t?m=V:t.sibling=V;t=V;q=p}if(v.done)return d(a,q),m;if(null===q){for(;!v.done;k++,v=h.next())v=B(a,v.value,r),null!==v&&(f=g(v,f,k),null===t?m=v:t.sibling=v,t=v);return m}for(q=e(a,q);!v.done;k++,v=h.next())if(v=C(q,a,k,v.value,r),null!==v){if(b&&null!==v.alternate)q[\"delete\"](null===v.key?k:v.key);f=g(v,f,k);null===t?m=v:t.sibling=v;t=v}b&&q.forEach(function(b){return c(a,b)});return m}return function(a,b,e,g){var m=\"object\"===typeof e&&null!==e;if(m)switch(e.$$typeof){case Ke:a:{var C=\ne.key;for(m=b;null!==m;){if(m.key===C)if(m.type===e.type){d(a,m.sibling);b=f(m,g);b.ref=Me(m,e);b.pendingProps=e.props;b[\"return\"]=a;a=b;break a}else{d(a,m);break}else c(a,m);m=m.sibling}g=se(e,a.internalContextTag,g);g.ref=Me(b,e);g[\"return\"]=a;a=g}return h(a);case oe:a:{for(m=e.key;null!==b;){if(b.key===m)if(b.tag===De){d(a,b.sibling);b=f(b,g);b.pendingProps=e;b[\"return\"]=a;a=b;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=ve(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return h(a);case pe:a:{if(null!==\nb)if(b.tag===Ee){d(a,b.sibling);b=f(b,g);b.type=e.value;b[\"return\"]=a;a=b;break a}else d(a,b);b=we(e,a.internalContextTag,g);b.type=e.value;b[\"return\"]=a;a=b}return h(a);case qe:a:{for(m=e.key;null!==b;){if(b.key===m)if(b.tag===Ce&&b.stateNode.containerInfo===e.containerInfo&&b.stateNode.implementation===e.implementation){d(a,b.sibling);b=f(b,g);b.pendingProps=e.children||[];b[\"return\"]=a;a=b;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=xe(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return h(a)}if(\"string\"===\ntypeof e||\"number\"===typeof e)return e=\"\"+e,null!==b&&b.tag===Be?(d(a,b.sibling),b=f(b,g),b.pendingProps=e,b[\"return\"]=a,a=b):(d(a,b),e=ue(e,a.internalContextTag,g),e[\"return\"]=a,a=e),h(a);if(ye(e))return Ca(a,b,e,g);if(Le(e))return r(a,b,e,g);m&&Ne(a,e);if(\"undefined\"===typeof e)switch(a.tag){case Ae:case ze:e=a.type,w(\"152\",e.displayName||e.name||\"Component\")}return d(a,b)}}\nvar Pe=Oe(!0,!0),Qe=Oe(!1,!0),Re=Oe(!1,!1),Se={reconcileChildFibers:Pe,reconcileChildFibersInPlace:Qe,mountChildFibersInPlace:Re,cloneChildFibers:function(a,b){null!==a&&b.child!==a.child?w(\"153\"):void 0;if(null!==b.child){a=b.child;var c=re(a,a.pendingWorkPriority);c.pendingProps=a.pendingProps;b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=re(a,a.pendingWorkPriority),c.pendingProps=a.pendingProps,c[\"return\"]=b;c.sibling=null}}},Te=J.Update,Ue=Pd.AsyncUpdates,Ve=R.cacheContext,\nWe=R.getMaskedContext,Xe=R.getUnmaskedContext,Ye=R.isContextConsumer,Ze=ud.addUpdate,$e=ud.addReplaceUpdate,af=ud.addForceUpdate,bf=ud.beginUpdateQueue,cf=R.hasContextChanged,df=bb.isMounted;\nfunction ef(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;Pa.set(b,a)}var f={isMounted:df,enqueueSetState:function(c,d,e){c=Pa.get(c);var f=b(c,!1);Ze(c,d,void 0===e?null:e,f);a(c,f)},enqueueReplaceState:function(c,d,e){c=Pa.get(c);var f=b(c,!1);$e(c,d,void 0===e?null:e,f);a(c,f)},enqueueForceUpdate:function(c,d){c=Pa.get(c);var e=b(c,!1);af(c,void 0===d?null:d,e);a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=Xe(a),f=Ye(a),g=f?We(a,d):da;b=new c(b,g);\ne(a,b);f&&Ve(a,d,g);return b},mountClassInstance:function(a,b){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:w(\"158\");var h=Xe(a);d.props=g;d.state=e;d.refs=da;d.context=We(a,h);ed.enableAsyncSubtreeAPI&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=Ue);\"function\"===typeof d.componentWillMount&&(h=d.state,d.componentWillMount(),h!==d.state&&f.enqueueReplaceState(d,d.state,null),h=a.updateQueue,null!==\nh&&(d.state=bf(c,a,h,d,e,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=Te)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?w(\"159\"):void 0);var D=g.context,y=Xe(b);y=We(b,y);\"function\"!==typeof g.componentWillReceiveProps||h===k&&D===y||(D=g.state,g.componentWillReceiveProps(k,y),g.state!==D&&f.enqueueReplaceState(g,g.state,null));D=b.memoizedState;e=null!==b.updateQueue?bf(a,\nb,b.updateQueue,g,D,k,e):D;if(!(h!==k||D!==e||cf()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&D===a.memoizedState||(b.effectTag|=Te),!1;var B=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)B=!0;else{var H=b.stateNode,C=b.type;B=\"function\"===typeof H.shouldComponentUpdate?H.shouldComponentUpdate(B,e,y):C.prototype&&C.prototype.isPureReactComponent?!ea(h,B)||!ea(D,e):!0}B?(\"function\"===typeof g.componentWillUpdate&&\ng.componentWillUpdate(k,e,y),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=Te)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&D===a.memoizedState||(b.effectTag|=Te),c(b,k),d(b,e));g.props=k;g.state=e;g.context=y;return B}}}\nvar ff=Se.mountChildFibersInPlace,gf=Se.reconcileChildFibers,hf=Se.reconcileChildFibersInPlace,jf=Se.cloneChildFibers,kf=ud.beginUpdateQueue,lf=R.getMaskedContext,mf=R.getUnmaskedContext,nf=R.hasContextChanged,of=R.pushContextProvider,pf=R.pushTopLevelContextObject,qf=R.invalidateContextProvider,rf=E.IndeterminateComponent,sf=E.FunctionalComponent,tf=E.ClassComponent,uf=E.HostRoot,wf=E.HostComponent,xf=E.HostText,yf=E.HostPortal,zf=E.CoroutineComponent,Af=E.CoroutineHandlerPhase,Bf=E.YieldComponent,\nCf=E.Fragment,Df=Q.NoWork,Ef=Q.OffscreenPriority,Ff=J.PerformedWork,Gf=J.Placement,Hf=J.ContentReset,If=J.Err,Jf=J.Ref,Kf=Qa.ReactCurrentOwner;\nfunction Lf(a,b,c,d,e){function f(a,b,c){g(a,b,c,b.pendingWorkPriority)}function g(a,b,c,d){b.child=null===a?ff(b,b.child,c,d):a.child===b.child?gf(b,b.child,c,d):hf(b,b.child,c,d)}function h(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=Jf)}function k(a,b,c,d){h(a,b);if(!c)return d&&qf(b,!1),x(a,b);c=b.stateNode;Kf.current=b;var e=c.render();b.effectTag|=Ff;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&qf(b,!0);return b.child}function p(a){var b=a.stateNode;b.pendingContext?\npf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&pf(a,b.context,!1);C(a,b.containerInfo)}function x(a,b){jf(a,b);return b.child}function S(a,b){switch(b.tag){case uf:p(b);break;case tf:of(b);break;case yf:C(b,b.stateNode.containerInfo)}return null}var D=a.shouldSetTextContent,y=a.useSyncScheduling,B=a.shouldDeprioritizeSubtree,H=b.pushHostContext,C=b.pushHostContainer,Ca=c.enterHydrationState,r=c.resetHydrationState,m=c.tryToClaimNextHydratableInstance;a=ef(d,e,function(a,b){a.memoizedProps=\nb},function(a,b){a.memoizedState=b});var t=a.adoptClassInstance,v=a.constructClassInstance,V=a.mountClassInstance,ld=a.updateClassInstance;return{beginWork:function(a,b,c){if(b.pendingWorkPriority===Df||b.pendingWorkPriority>c)return S(a,b);switch(b.tag){case rf:null!==a?w(\"155\"):void 0;var d=b.type,e=b.pendingProps,g=mf(b);g=lf(b,g);d=d(e,g);b.effectTag|=Ff;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=tf,e=of(b),t(b,d),V(b,c),b=k(a,b,!0,e)):(b.tag=sf,f(a,b,d),b.memoizedProps=\ne,b=b.child);return b;case sf:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(nf())null===c&&(c=d);else if(null===c||d===c){b=x(a,b);break a}d=mf(b);d=lf(b,d);e=e(c,d);b.effectTag|=Ff;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case tf:return e=of(b),d=void 0,null===a?b.stateNode?w(\"153\"):(v(b,b.pendingProps),V(b,c),d=!0):d=ld(a,b,c),k(a,b,d,e);case uf:return p(b),d=b.updateQueue,null!==d?(e=b.memoizedState,d=kf(a,b,d,null,e,null,c),e===d?(r(),b=x(a,b)):(e=d.element,null!==a&&null!==a.child||\n!Ca(b)?(r(),f(a,b,e)):(b.effectTag|=Gf,b.child=ff(b,b.child,e,c)),b.memoizedState=d,b=b.child)):(r(),b=x(a,b)),b;case wf:H(b);null===a&&m(b);e=b.type;var q=b.memoizedProps;d=b.pendingProps;null===d&&(d=q,null===d?w(\"154\"):void 0);g=null!==a?a.memoizedProps:null;nf()||null!==d&&q!==d?(q=d.children,D(e,d)?q=null:g&&D(e,g)&&(b.effectTag|=Hf),h(a,b),c!==Ef&&!y&&B(e,d)?(b.pendingWorkPriority=Ef,b=null):(f(a,b,q),b.memoizedProps=d,b=b.child)):b=x(a,b);return b;case xf:return null===a&&m(b),a=b.pendingProps,\nnull===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case Af:b.tag=zf;case zf:c=b.pendingProps;if(nf())null===c&&(c=a&&a.memoizedProps,null===c?w(\"154\"):void 0);else if(null===c||b.memoizedProps===c)c=b.memoizedProps;e=c.children;d=b.pendingWorkPriority;b.stateNode=null===a?ff(b,b.stateNode,e,d):a.child===b.child?gf(b,b.stateNode,e,d):hf(b,b.stateNode,e,d);b.memoizedProps=c;return b.stateNode;case Bf:return null;case yf:a:{C(b,b.stateNode.containerInfo);c=b.pendingWorkPriority;e=b.pendingProps;if(nf())null===\ne&&(e=a&&a.memoizedProps,null==e?w(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=x(a,b);break a}null===a?b.child=hf(b,b.child,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case Cf:a:{c=b.pendingProps;if(nf())null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=x(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:w(\"156\")}},beginFailedWork:function(a,b,c){switch(b.tag){case tf:of(b);break;case uf:p(b);break;default:w(\"157\")}b.effectTag|=If;null===a?\nb.child=null:b.child!==a.child&&(b.child=a.child);if(b.pendingWorkPriority===Df||b.pendingWorkPriority>c)return S(a,b);b.firstEffect=null;b.lastEffect=null;g(a,b,null,c);b.tag===tf&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nvar Mf=Se.reconcileChildFibers,Nf=R.popContextProvider,Of=R.popTopLevelContextObject,Pf=E.IndeterminateComponent,Qf=E.FunctionalComponent,Rf=E.ClassComponent,Sf=E.HostRoot,Tf=E.HostComponent,Uf=E.HostText,Vf=E.HostPortal,Wf=E.CoroutineComponent,Xf=E.CoroutineHandlerPhase,Yf=E.YieldComponent,Zf=E.Fragment,ag=J.Placement,bg=J.Ref,cg=J.Update,dg=Q.OffscreenPriority;\nfunction eg(a,b,c){var d=a.createInstance,e=a.createTextInstance,f=a.appendInitialChild,g=a.finalizeInitialChildren,h=a.prepareUpdate,k=b.getRootHostContainer,p=b.popHostContext,x=b.getHostContext,S=b.popHostContainer,D=c.prepareToHydrateHostInstance,y=c.prepareToHydrateHostTextInstance,B=c.popHydrationState;return{completeWork:function(a,b,c){var r=b.pendingProps;if(null===r)r=b.memoizedProps;else if(b.pendingWorkPriority!==dg||c===dg)b.pendingProps=null;switch(b.tag){case Qf:return null;case Rf:return Nf(b),\nnull;case Sf:S(b);Of(b);r=b.stateNode;r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null);if(null===a||null===a.child)B(b),b.effectTag&=~ag;return null;case Tf:p(b);c=k();var m=b.type;if(null!==a&&null!=b.stateNode){var t=a.memoizedProps,C=b.stateNode,V=x();r=h(C,m,t,r,c,V);if(b.updateQueue=r)b.effectTag|=cg;a.ref!==b.ref&&(b.effectTag|=bg)}else{if(!r)return null===b.stateNode?w(\"166\"):void 0,null;a=x();if(B(b))D(b,c,a)&&(b.effectTag|=cg);else{a=d(m,r,c,a,b);a:for(t=b.child;null!==\nt;){if(t.tag===Tf||t.tag===Uf)f(a,t.stateNode);else if(t.tag!==Vf&&null!==t.child){t=t.child;continue}if(t===b)break a;for(;null===t.sibling;){if(null===t[\"return\"]||t[\"return\"]===b)break a;t=t[\"return\"]}t=t.sibling}g(a,m,r,c)&&(b.effectTag|=cg);b.stateNode=a}null!==b.ref&&(b.effectTag|=bg)}return null;case Uf:if(a&&null!=b.stateNode)a.memoizedProps!==r&&(b.effectTag|=cg);else{if(\"string\"!==typeof r)return null===b.stateNode?w(\"166\"):void 0,null;a=k();c=x();B(b)?y(b)&&(b.effectTag|=cg):b.stateNode=\ne(r,a,c,b)}return null;case Wf:(r=b.memoizedProps)?void 0:w(\"165\");b.tag=Xf;c=[];a:for((m=b.stateNode)&&(m[\"return\"]=b);null!==m;){if(m.tag===Tf||m.tag===Uf||m.tag===Vf)w(\"164\");else if(m.tag===Yf)c.push(m.type);else if(null!==m.child){m.child[\"return\"]=m;m=m.child;continue}for(;null===m.sibling;){if(null===m[\"return\"]||m[\"return\"]===b)break a;m=m[\"return\"]}m.sibling[\"return\"]=m[\"return\"];m=m.sibling}m=r.handler;r=m(r.props,c);b.child=Mf(b,null!==a?a.child:null,r,b.pendingWorkPriority);return b.child;\ncase Xf:return b.tag=Wf,null;case Yf:return null;case Zf:return null;case Vf:return b.effectTag|=cg,S(b),null;case Pf:w(\"167\");default:w(\"156\")}}}}var fg=null,gg=null;function hg(a){return function(b){try{return a(b)}catch(c){}}}\nvar ig={injectInternals:function(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!b.supportsFiber)return!0;try{var c=b.inject(a);fg=hg(function(a){return b.onCommitFiberRoot(c,a)});gg=hg(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0},onCommitRoot:function(a){\"function\"===typeof fg&&fg(a)},onCommitUnmount:function(a){\"function\"===typeof gg&&gg(a)}},jg=E.ClassComponent,kg=E.HostRoot,lg=E.HostComponent,mg=E.HostText,ng=\nE.HostPortal,og=E.CoroutineComponent,pg=ud.commitCallbacks,qg=ig.onCommitUnmount,rg=J.Placement,sg=J.Update,tg=J.Callback,ug=J.ContentReset;\nfunction vg(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(t){b(a,t)}}function d(a){return a.tag===lg||a.tag===kg||a.tag===ng}function e(a){for(var b=a;;)if(g(b),null!==b.child&&b.tag!==ng)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}function f(a){for(var b=a,c=!1,d=void 0,f=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?w(\"160\"):void 0;switch(c.tag){case lg:d=\nc.stateNode;f=!1;break a;case kg:d=c.stateNode.containerInfo;f=!0;break a;case ng:d=c.stateNode.containerInfo;f=!0;break a}c=c[\"return\"]}c=!0}if(b.tag===lg||b.tag===mg)e(b),f?C(d,b.stateNode):H(d,b.stateNode);else if(b.tag===ng?d=b.stateNode.containerInfo:g(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];b.tag===ng&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}function g(a){\"function\"===\ntypeof qg&&qg(a);switch(a.tag){case jg:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(t){b(a,t)}break;case lg:c(a);break;case og:e(a.stateNode);break;case ng:f(a)}}var h=a.commitMount,k=a.commitUpdate,p=a.resetTextContent,x=a.commitTextUpdate,S=a.appendChild,D=a.appendChildToContainer,y=a.insertBefore,B=a.insertInContainerBefore,H=a.removeChild,C=a.removeChildFromContainer,Ca=a.getPublicInstance;\nreturn{commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(d(b)){var c=b;break a}b=b[\"return\"]}w(\"160\");c=void 0}var e=b=void 0;switch(c.tag){case lg:b=c.stateNode;e=!1;break;case kg:b=c.stateNode.containerInfo;e=!0;break;case ng:b=c.stateNode.containerInfo;e=!0;break;default:w(\"161\")}c.effectTag&ug&&(p(b),c.effectTag&=~ug);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||d(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;c.tag!==\nlg&&c.tag!==mg;){if(c.effectTag&rg)continue b;if(null===c.child||c.tag===ng)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&rg)){c=c.stateNode;break a}}for(var f=a;;){if(f.tag===lg||f.tag===mg)c?e?B(b,f.stateNode,c):y(b,f.stateNode,c):e?D(b,f.stateNode):S(b,f.stateNode);else if(f.tag!==ng&&null!==f.child){f.child[\"return\"]=f;f=f.child;continue}if(f===a)break;for(;null===f.sibling;){if(null===f[\"return\"]||f[\"return\"]===a)return;f=f[\"return\"]}f.sibling[\"return\"]=f[\"return\"];f=f.sibling}},\ncommitDeletion:function(a){f(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case jg:break;case lg:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&k(c,f,e,a,d,b)}break;case mg:null===b.stateNode?w(\"162\"):void 0;c=b.memoizedProps;x(b.stateNode,null!==a?a.memoizedProps:c,c);break;case kg:break;case ng:break;default:w(\"163\")}},\ncommitLifeCycles:function(a,b){switch(b.tag){case jg:var c=b.stateNode;if(b.effectTag&sg)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b.effectTag&tg&&null!==b.updateQueue&&pg(b,b.updateQueue,c);break;case kg:a=b.updateQueue;null!==a&&pg(b,a,b.child&&b.child.stateNode);break;case lg:c=b.stateNode;null===a&&b.effectTag&sg&&h(c,b.type,b.memoizedProps,\nb);break;case mg:break;case ng:break;default:w(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case lg:b(Ca(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var wg=xd.createCursor,xg=xd.pop,yg=xd.push,zg={};\nfunction Ag(a){function b(a){a===zg?w(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e=wg(zg),f=wg(zg),g=wg(zg);return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){xg(e,a);xg(f,a);xg(g,a)},popHostContext:function(a){f.current===a&&(xg(e,a),xg(f,a))},pushHostContainer:function(a,b){yg(g,b,a);b=d(b);yg(f,a,a);yg(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);d=c(h,a.type,\nd);h!==d&&(yg(f,a,a),yg(e,d,a))},resetHostContainer:function(){e.current=zg;g.current=zg}}}var Bg=E.HostComponent,Cg=E.HostText,Dg=E.HostRoot,Eg=J.Deletion,Fg=J.Placement,Gg=de.createFiberFromHostInstanceForDeletion;\nfunction Hg(a){function b(a,b){var c=Gg();c.stateNode=b;c[\"return\"]=a;c.effectTag=Eg;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case Bg:return f(b,a.type,a.pendingProps);case Cg:return g(b,a.pendingProps);default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&a.tag!==Bg&&a.tag!==Dg;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent,f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,\np=a.hydrateInstance,x=a.hydrateTextInstance,S=a.didNotHydrateInstance,D=a.didNotFindHydratableInstance;a=a.didNotFindHydratableTextInstance;if(!(f&&g&&h&&k&&p&&x&&S&&D&&a))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){w(\"175\")},prepareToHydrateHostTextInstance:function(){w(\"176\")},popHydrationState:function(){return!1}};var y=null,B=null,H=!1;return{enterHydrationState:function(a){B=\nk(a.stateNode.containerInfo);y=a;return H=!0},resetHydrationState:function(){B=y=null;H=!1},tryToClaimNextHydratableInstance:function(a){if(H){var d=B;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=Fg;H=!1;y=a;return}b(y,B)}a.stateNode=d;y=a;B=k(d)}else a.effectTag|=Fg,H=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=p(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return x(a.stateNode,a.memoizedProps,a)},\npopHydrationState:function(a){if(a!==y)return!1;if(!H)return d(a),H=!0,!1;var c=a.type;if(a.tag!==Bg||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=B;c;)b(a,c),c=h(c);d(a);B=y?h(a.stateNode):null;return!0}}}\nvar Ig=R.popContextProvider,Jg=xd.reset,Kg=Qa.ReactCurrentOwner,Lg=de.createWorkInProgress,Mg=de.largerPriority,Ng=ig.onCommitRoot,T=Q.NoWork,Og=Q.SynchronousPriority,U=Q.TaskPriority,Pg=Q.HighPriority,Qg=Q.LowPriority,Rg=Q.OffscreenPriority,Sg=Pd.AsyncUpdates,Tg=J.PerformedWork,Ug=J.Placement,Vg=J.Update,Wg=J.PlacementAndUpdate,Xg=J.Deletion,Yg=J.ContentReset,Zg=J.Callback,$g=J.Err,ah=J.Ref,bh=E.HostRoot,ch=E.HostComponent,dh=E.HostPortal,eh=E.ClassComponent,fh=ud.getUpdatePriority,gh=R.resetContext;\nfunction hh(a){function b(){for(;null!==ma&&ma.current.pendingWorkPriority===T;){ma.isScheduled=!1;var a=ma.nextScheduledRoot;ma.nextScheduledRoot=null;if(ma===zb)return zb=ma=null,z=T,null;ma=a}a=ma;for(var b=null,c=T;null!==a;)a.current.pendingWorkPriority!==T&&(c===T||c>a.current.pendingWorkPriority)&&(c=a.current.pendingWorkPriority,b=a),a=a.nextScheduledRoot;null!==b?(z=c,Jg(),gh(),t(),I=Lg(b.current,c),b!==nc&&(oc=0,nc=b)):(z=T,nc=I=null)}function c(c){Hd=!0;na=null;var d=c.stateNode;d.current===\nc?w(\"177\"):void 0;z!==Og&&z!==U||oc++;Kg.current=null;if(c.effectTag>Tg)if(null!==c.lastEffect){c.lastEffect.nextEffect=c;var e=c.firstEffect}else e=c;else e=c.firstEffect;Ui();for(u=e;null!==u;){var f=!1,g=void 0;try{for(;null!==u;){var h=u.effectTag;h&Yg&&a.resetTextContent(u.stateNode);if(h&ah){var k=u.alternate;null!==k&&Ph(k)}switch(h&~(Zg|$g|Yg|ah|Tg)){case Ug:q(u);u.effectTag&=~Ug;break;case Wg:q(u);u.effectTag&=~Ug;vf(u.alternate,u);break;case Vg:vf(u.alternate,u);break;case Xg:Id=!0,Mh(u),\nId=!1}u=u.nextEffect}}catch(Jd){f=!0,g=Jd}f&&(null===u?w(\"178\"):void 0,x(u,g),null!==u&&(u=u.nextEffect))}Vi();d.current=c;for(u=e;null!==u;){d=!1;e=void 0;try{for(;null!==u;){var Gd=u.effectTag;Gd&(Vg|Zg)&&Nh(u.alternate,u);Gd&ah&&Oh(u);if(Gd&$g)switch(f=u,g=void 0,null!==P&&(g=P.get(f),P[\"delete\"](f),null==g&&null!==f.alternate&&(f=f.alternate,g=P.get(f),P[\"delete\"](f))),null==g?w(\"184\"):void 0,f.tag){case eh:f.stateNode.componentDidCatch(g.error,{componentStack:g.componentStack});break;case bh:null===\nJa&&(Ja=g.error);break;default:w(\"157\")}var m=u.nextEffect;u.nextEffect=null;u=m}}catch(Jd){d=!0,e=Jd}d&&(null===u?w(\"178\"):void 0,x(u,e),null!==u&&(u=u.nextEffect))}Hd=!1;\"function\"===typeof Ng&&Ng(c.stateNode);va&&(va.forEach(H),va=null);b()}function d(a){for(;;){var b=Lh(a.alternate,a,z),c=a[\"return\"],d=a.sibling;var e=a;if(!(e.pendingWorkPriority!==T&&e.pendingWorkPriority>z)){for(var f=fh(e),g=e.child;null!==g;)f=Mg(f,g.pendingWorkPriority),g=g.sibling;e.pendingWorkPriority=f}if(null!==b)return b;\nnull!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),a.effectTag>Tg&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{na=a;break}}return null}function e(a){var b=V(a.alternate,a,z);null===b&&(b=d(a));Kg.current=null;return b}function f(a){var b=ld(a.alternate,a,z);null===b&&(b=d(a));Kg.current=null;return b}\nfunction g(a){p(Rg,a)}function h(){if(null!==P&&0<P.size&&z===U)for(;null!==I;){var a=I;I=null!==P&&(P.has(a)||null!==a.alternate&&P.has(a.alternate))?f(I):e(I);if(null===I&&(null===na?w(\"179\"):void 0,O=U,c(na),O=z,null===P||0===P.size||z!==U))break}}function k(a,d){null!==na?(O=U,c(na),h()):null===I&&b();if(!(z===T||z>a)){O=z;a:do{if(z<=U)for(;null!==I&&!(I=e(I),null===I&&(null===na?w(\"179\"):void 0,O=U,c(na),O=z,h(),z===T||z>a||z>U)););else if(null!==d)for(;null!==I&&!Ab;)if(1<d.timeRemaining()){if(I=\ne(I),null===I)if(null===na?w(\"179\"):void 0,1<d.timeRemaining()){if(O=U,c(na),O=z,h(),z===T||z>a||z<Pg)break}else Ab=!0}else Ab=!0;switch(z){case Og:case U:if(z<=a)continue a;break a;case Pg:case Qg:case Rg:if(null===d)break a;if(!Ab&&z<=a)continue a;break a;case T:break a;default:w(\"181\")}}while(1)}}function p(a,b){Da?w(\"182\"):void 0;Da=!0;var c=O,d=!1,e=null;try{k(a,b)}catch(Kd){d=!0,e=Kd}for(;d;){if(Ya){Ja=e;break}var h=I;if(null===h)Ya=!0;else{var p=x(h,e);null===p?w(\"183\"):void 0;if(!Ya){try{d=\np;e=a;p=b;for(var q=d;null!==h;){switch(h.tag){case eh:Ig(h);break;case ch:m(h);break;case bh:r(h);break;case dh:r(h)}if(h===q||h.alternate===q)break;h=h[\"return\"]}I=f(d);k(e,p)}catch(Kd){d=!0;e=Kd;continue}break}}}O=c;null!==b&&(Bb=!1);z>U&&!Bb&&($f(g),Bb=!0);a=Ja;Ya=Ab=Da=!1;nc=Ka=P=Ja=null;oc=0;if(null!==a)throw a;}function x(a,b){var c=Kg.current=null,d=!1,e=!1,f=null;if(a.tag===bh)c=a,S(a)&&(Ya=!0);else for(var g=a[\"return\"];null!==g&&null===c;){g.tag===eh?\"function\"===typeof g.stateNode.componentDidCatch&&\n(d=!0,f=Ra(g),c=g,e=!0):g.tag===bh&&(c=g);if(S(g)){if(Id||null!==va&&(va.has(g)||null!==g.alternate&&va.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===Ka&&(Ka=new Set);Ka.add(c);var h=\"\";g=a;do{a:switch(g.tag){case fe:case ge:case he:case ie:var k=g._debugOwner,m=g._debugSource;var p=Ra(g);var q=null;k&&(q=Ra(k));k=m;p=\"\\n    in \"+(p||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":q?\" (created by \"+q+\")\":\"\");break a;default:p=\"\"}h+=p;g=g[\"return\"]}while(g);\ng=h;a=Ra(a);null===P&&(P=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};P.set(c,b);try{console.error(b.error)}catch(Wi){console.error(Wi)}Hd?(null===va&&(va=new Set),va.add(c)):H(c);return c}null===Ja&&(Ja=b);return null}function S(a){return null!==Ka&&(Ka.has(a)||null!==a.alternate&&Ka.has(a.alternate))}function D(a,b){return y(a,b,!1)}function y(a,b){oc>Xi&&(Ya=!0,w(\"185\"));!Da&&b<=z&&(I=null);for(var c=\n!0;null!==a&&c;){c=!1;if(a.pendingWorkPriority===T||a.pendingWorkPriority>b)c=!0,a.pendingWorkPriority=b;null!==a.alternate&&(a.alternate.pendingWorkPriority===T||a.alternate.pendingWorkPriority>b)&&(c=!0,a.alternate.pendingWorkPriority=b);if(null===a[\"return\"])if(a.tag===bh){var d=a.stateNode;b===T||d.isScheduled||(d.isScheduled=!0,zb?zb.nextScheduledRoot=d:ma=d,zb=d);if(!Da)switch(b){case Og:pc?p(Og,null):p(U,null);break;case U:W?void 0:w(\"186\");break;default:Bb||($f(g),Bb=!0)}}else break;a=a[\"return\"]}}\nfunction B(a,b){var c=O;c===T&&(c=!Yi||a.internalContextTag&Sg||b?Qg:Og);return c===Og&&(Da||W)?U:c}function H(a){y(a,U,!0)}var C=Ag(a),Ca=Hg(a),r=C.popHostContainer,m=C.popHostContext,t=C.resetHostContainer,v=Lf(a,C,Ca,D,B),V=v.beginWork,ld=v.beginFailedWork,Lh=eg(a,C,Ca).completeWork;C=vg(a,x);var q=C.commitPlacement,Mh=C.commitDeletion,vf=C.commitWork,Nh=C.commitLifeCycles,Oh=C.commitAttachRef,Ph=C.commitDetachRef,$f=a.scheduleDeferredCallback,Yi=a.useSyncScheduling,Ui=a.prepareForCommit,Vi=a.resetAfterCommit,\nO=T,Da=!1,Ab=!1,W=!1,pc=!1,I=null,z=T,u=null,na=null,ma=null,zb=null,Bb=!1,P=null,Ka=null,va=null,Ja=null,Ya=!1,Hd=!1,Id=!1,Xi=1E3,oc=0,nc=null;return{scheduleUpdate:D,getPriorityContext:B,batchedUpdates:function(a,b){var c=W;W=!0;try{return a(b)}finally{W=c,Da||W||p(U,null)}},unbatchedUpdates:function(a){var b=pc,c=W;pc=W;W=!1;try{return a()}finally{W=c,pc=b}},flushSync:function(a){var b=W,c=O;W=!0;O=Og;try{return a()}finally{W=b,O=c,Da?w(\"187\"):void 0,p(U,null)}},deferredUpdates:function(a){var b=\nO;O=Qg;try{return a()}finally{O=b}}}}function ih(){w(\"196\")}function jh(a){if(!a)return da;a=Pa.get(a);return\"number\"===typeof a.tag?ih(a):a._processChildContext(a._context)}jh._injectFiber=function(a){ih=a};var kh=ud.addTopLevelUpdate,lh=R.findCurrentUnmaskedContext,mh=R.isContextProvider,nh=R.processChildContext,oh=E.HostComponent,ph=bb.findCurrentHostFiber,qh=bb.findCurrentHostFiberWithNoPortals;jh._injectFiber(function(a){var b=lh(a);return mh(a)?nh(a,b,!1):b});var rh=F.TEXT_NODE;\nfunction sh(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function th(a,b){var c=sh(a);a=0;for(var d;c;){if(c.nodeType===rh){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=sh(c)}}var uh=null;function vh(){!uh&&l.canUseDOM&&(uh=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return uh}\nvar wh={getOffsets:function(a){var b=window.getSelection&&window.getSelection();if(!b||0===b.rangeCount)return null;var c=b.anchorNode,d=b.anchorOffset,e=b.focusNode,f=b.focusOffset,g=b.getRangeAt(0);try{g.startContainer.nodeType,g.endContainer.nodeType}catch(k){return null}b=b.anchorNode===b.focusNode&&b.anchorOffset===b.focusOffset?0:g.toString().length;var h=g.cloneRange();h.selectNodeContents(a);h.setEnd(g.startContainer,g.startOffset);a=h.startContainer===h.endContainer&&h.startOffset===h.endOffset?\n0:h.toString().length;g=a+b;b=document.createRange();b.setStart(c,d);b.setEnd(e,f);c=b.collapsed;return{start:c?g:a,end:c?a:g}},setOffsets:function(a,b){if(window.getSelection){var c=window.getSelection(),d=a[vh()].length,e=Math.min(b.start,d);b=void 0===b.end?e:Math.min(b.end,d);!c.extend&&e>b&&(d=b,b=e,e=d);d=th(a,e);a=th(a,b);if(d&&a){var f=document.createRange();f.setStart(d.node,d.offset);c.removeAllRanges();e>b?(c.addRange(f),c.extend(a.node,a.offset)):(f.setEnd(a.node,a.offset),c.addRange(f))}}}},\nxh=F.ELEMENT_NODE,yh={hasSelectionCapabilities:function(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)},getSelectionInformation:function(){var a=ia();return{focusedElem:a,selectionRange:yh.hasSelectionCapabilities(a)?yh.getSelection(a):null}},restoreSelection:function(a){var b=ia(),c=a.focusedElem;a=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){yh.hasSelectionCapabilities(c)&&yh.setSelection(c,a);b=\n[];for(a=c;a=a.parentNode;)a.nodeType===xh&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ha(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}},getSelection:function(a){return(\"selectionStart\"in a?{start:a.selectionStart,end:a.selectionEnd}:wh.getOffsets(a))||{start:0,end:0}},setSelection:function(a,b){var c=b.start,d=b.end;void 0===d&&(d=c);\"selectionStart\"in a?(a.selectionStart=c,a.selectionEnd=Math.min(d,a.value.length)):wh.setOffsets(a,b)}},zh=yh,\nAh=F.ELEMENT_NODE;function Bh(){w(\"211\")}function Ch(){w(\"212\")}function Dh(a){if(null==a)return null;if(a.nodeType===Ah)return a;var b=Pa.get(a);if(b)return\"number\"===typeof b.tag?Bh(b):Ch(b);\"function\"===typeof a.render?w(\"188\"):w(\"213\",Object.keys(a))}Dh._injectFiber=function(a){Bh=a};Dh._injectStack=function(a){Ch=a};var Eh=E.HostComponent;function Fh(a){if(void 0!==a._hostParent)return a._hostParent;if(\"number\"===typeof a.tag){do a=a[\"return\"];while(a&&a.tag!==Eh);if(a)return a}return null}\nfunction Gh(a,b){for(var c=0,d=a;d;d=Fh(d))c++;d=0;for(var e=b;e;e=Fh(e))d++;for(;0<c-d;)a=Fh(a),c--;for(;0<d-c;)b=Fh(b),d--;for(;c--;){if(a===b||a===b.alternate)return a;a=Fh(a);b=Fh(b)}return null}\nvar Hh={isAncestor:function(a,b){for(;b;){if(a===b||a===b.alternate)return!0;b=Fh(b)}return!1},getLowestCommonAncestor:Gh,getParentInstance:function(a){return Fh(a)},traverseTwoPhase:function(a,b,c){for(var d=[];a;)d.push(a),a=Fh(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)},traverseEnterLeave:function(a,b,c,d,e){for(var f=a&&b?Gh(a,b):null,g=[];a&&a!==f;)g.push(a),a=Fh(a);for(a=[];b&&b!==f;)a.push(b),b=Fh(b);for(b=0;b<g.length;b++)c(g[b],\"bubbled\",d);for(b=\na.length;0<b--;)c(a[b],\"captured\",e)}},Ih=Jb.getListener;function Jh(a,b,c){if(b=Ih(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Cb(c._dispatchListeners,b),c._dispatchInstances=Cb(c._dispatchInstances,a)}function Kh(a){a&&a.dispatchConfig.phasedRegistrationNames&&Hh.traverseTwoPhase(a._targetInst,Jh,a)}function Qh(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?Hh.getParentInstance(b):null;Hh.traverseTwoPhase(b,Jh,a)}}\nfunction Rh(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ih(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Cb(c._dispatchListeners,b),c._dispatchInstances=Cb(c._dispatchInstances,a))}function Sh(a){a&&a.dispatchConfig.registrationName&&Rh(a._targetInst,null,a)}\nvar Th={accumulateTwoPhaseDispatches:function(a){Db(a,Kh)},accumulateTwoPhaseDispatchesSkipTarget:function(a){Db(a,Qh)},accumulateDirectDispatches:function(a){Db(a,Sh)},accumulateEnterLeaveDispatches:function(a,b,c,d){Hh.traverseEnterLeave(c,d,Rh,a,b)}},X={_root:null,_startText:null,_fallbackText:null},Uh={initialize:function(a){X._root=a;X._startText=Uh.getText();return!0},reset:function(){X._root=null;X._startText=null;X._fallbackText=null},getData:function(){if(X._fallbackText)return X._fallbackText;\nvar a,b=X._startText,c=b.length,d,e=Uh.getText(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);X._fallbackText=e.slice(a,1<d?1-d:void 0);return X._fallbackText},getText:function(){return\"value\"in X._root?X._root.value:X._root[vh()]}},Vh=Uh,Wh=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Xh={type:null,target:null,currentTarget:ca.thatReturnsNull,eventPhase:null,bubbles:null,\ncancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction Y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?ca.thatReturnsTrue:ca.thatReturnsFalse;this.isPropagationStopped=ca.thatReturnsFalse;return this}\nn(Y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=ca.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=ca.thatReturnsTrue)},persist:function(){this.isPersistent=ca.thatReturnsTrue},isPersistent:ca.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Wh.length;a++)this[Wh[a]]=null}});Y.Interface=Xh;Y.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;n(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=n({},this.Interface,b);a.augmentClass=this.augmentClass;Yh(a)};Yh(Y);function Zh(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction $h(a){a instanceof this?void 0:w(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Yh(a){a.eventPool=[];a.getPooled=Zh;a.release=$h}function ai(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(ai,{data:null});function bi(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(bi,{data:null});var ci=[9,13,27,32],di=l.canUseDOM&&\"CompositionEvent\"in window,ei=null;l.canUseDOM&&\"documentMode\"in document&&(ei=document.documentMode);var fi;\nif(fi=l.canUseDOM&&\"TextEvent\"in window&&!ei){var gi=window.opera;fi=!(\"object\"===typeof gi&&\"function\"===typeof gi.version&&12>=parseInt(gi.version(),10))}\nvar hi=fi,ii=l.canUseDOM&&(!di||ei&&8<ei&&11>=ei),ji=String.fromCharCode(32),ki={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},li=!1;\nfunction mi(a,b){switch(a){case \"topKeyUp\":return-1!==ci.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ni(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var oi=!1;function pi(a,b){switch(a){case \"topCompositionEnd\":return ni(b);case \"topKeyPress\":if(32!==b.which)return null;li=!0;return ji;case \"topTextInput\":return a=b.data,a===ji&&li?null:a;default:return null}}\nfunction qi(a,b){if(oi)return\"topCompositionEnd\"===a||!di&&mi(a,b)?(a=Vh.getData(),Vh.reset(),oi=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return ii?null:b.data;default:return null}}\nvar ri={eventTypes:ki,extractEvents:function(a,b,c,d){var e;if(di)b:{switch(a){case \"topCompositionStart\":var f=ki.compositionStart;break b;case \"topCompositionEnd\":f=ki.compositionEnd;break b;case \"topCompositionUpdate\":f=ki.compositionUpdate;break b}f=void 0}else oi?mi(a,c)&&(f=ki.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=ki.compositionStart);f?(ii&&(oi||f!==ki.compositionStart?f===ki.compositionEnd&&oi&&(e=Vh.getData()):oi=Vh.initialize(d)),f=ai.getPooled(f,b,c,d),e?f.data=e:(e=ni(c),\nnull!==e&&(f.data=e)),Th.accumulateTwoPhaseDispatches(f),e=f):e=null;(a=hi?pi(a,c):qi(a,c))?(b=bi.getPooled(ki.beforeInput,b,c,d),b.data=a,Th.accumulateTwoPhaseDispatches(b)):b=null;return[e,b]}},si={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ti(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!si[a.type]:\"textarea\"===b?!0:!1}\nvar ui={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function vi(a,b,c){a=Y.getPooled(ui.change,a,b,c);a.type=\"change\";nb.enqueueStateRestore(c);Th.accumulateTwoPhaseDispatches(a);return a}var wi=null,xi=null;function yi(a){Jb.enqueueEvents(a);Jb.processEventQueue(!1)}\nfunction zi(a){var b=G.getNodeFromInstance(a);if(Bc.updateValueIfChanged(b))return a}function Ai(a,b){if(\"topChange\"===a)return b}var Bi=!1;l.canUseDOM&&(Bi=Lb(\"input\")&&(!document.documentMode||9<document.documentMode));function Ci(){wi&&(wi.detachEvent(\"onpropertychange\",Di),xi=wi=null)}function Di(a){\"value\"===a.propertyName&&zi(xi)&&(a=vi(xi,a,ub(a)),sb.batchedUpdates(yi,a))}function Ei(a,b,c){\"topFocus\"===a?(Ci(),wi=b,xi=c,wi.attachEvent(\"onpropertychange\",Di)):\"topBlur\"===a&&Ci()}\nfunction Fi(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return zi(xi)}function Gi(a,b){if(\"topClick\"===a)return zi(b)}function Hi(a,b){if(\"topInput\"===a||\"topChange\"===a)return zi(b)}\nvar Ii={eventTypes:ui,_isInputEventSupported:Bi,extractEvents:function(a,b,c,d){var e=b?G.getNodeFromInstance(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Ai;else if(ti(e))if(Bi)g=Hi;else{g=Fi;var h=Ei}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Gi);if(g&&(g=g(a,b)))return vi(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,\ne.getAttribute(\"value\")!==a&&e.setAttribute(\"value\",a))}};function Ji(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(Ji,{view:function(a){if(a.view)return a.view;a=ub(a);return a.window===a?a:(a=a.ownerDocument)?a.defaultView||a.parentWindow:window},detail:function(a){return a.detail||0}});var Ki={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Li(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Ki[a])?!!b[a]:!1}function Mi(){return Li}\nfunction Ni(a,b,c,d){return Y.call(this,a,b,c,d)}Ji.augmentClass(Ni,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mi,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar Oi={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},Pi={eventTypes:Oi,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?G.getClosestInstanceFromNode(b):\nnull):a=null;if(a===b)return null;var f=null==a?e:G.getNodeFromInstance(a);e=null==b?e:G.getNodeFromInstance(b);var g=Ni.getPooled(Oi.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=Ni.getPooled(Oi.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Th.accumulateEnterLeaveDispatches(g,c,a,b);return[g,c]}},Qi=F.DOCUMENT_NODE,Ri=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Si={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},\ndependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Ti=null,Zi=null,$i=null,aj=!1,bj=M.isListeningToAllDependencies;\nfunction cj(a,b){if(aj||null==Ti||Ti!==ia())return null;var c=Ti;\"selectionStart\"in c&&zh.hasSelectionCapabilities(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return $i&&ea($i,c)?null:($i=c,a=Y.getPooled(Si.select,Zi,a,b),a.type=\"select\",a.target=Ti,Th.accumulateTwoPhaseDispatches(a),a)}\nvar dj={eventTypes:Si,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:d.nodeType===Qi?d:d.ownerDocument;if(!e||!bj(\"onSelect\",e))return null;e=b?G.getNodeFromInstance(b):window;switch(a){case \"topFocus\":if(ti(e)||\"true\"===e.contentEditable)Ti=e,Zi=b,$i=null;break;case \"topBlur\":$i=Zi=Ti=null;break;case \"topMouseDown\":aj=!0;break;case \"topContextMenu\":case \"topMouseUp\":return aj=!1,cj(c,d);case \"topSelectionChange\":if(Ri)break;case \"topKeyDown\":case \"topKeyUp\":return cj(c,d)}return null}};\nfunction ej(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(ej,{animationName:null,elapsedTime:null,pseudoElement:null});function fj(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(fj,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function gj(a,b,c,d){return Y.call(this,a,b,c,d)}Ji.augmentClass(gj,{relatedTarget:null});function hj(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar ij={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},jj={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function kj(a,b,c,d){return Y.call(this,a,b,c,d)}\nJi.augmentClass(kj,{key:function(a){if(a.key){var b=ij[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=hj(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?jj[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mi,charCode:function(a){return\"keypress\"===a.type?hj(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?hj(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function lj(a,b,c,d){return Y.call(this,a,b,c,d)}Ni.augmentClass(lj,{dataTransfer:null});function mj(a,b,c,d){return Y.call(this,a,b,c,d)}Ji.augmentClass(mj,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mi});function nj(a,b,c,d){return Y.call(this,a,b,c,d)}Y.augmentClass(nj,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction oj(a,b,c,d){return Y.call(this,a,b,c,d)}Ni.augmentClass(oj,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var pj={},qj={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};pj[a]=c;qj[b]=c});\nvar rj={eventTypes:pj,extractEvents:function(a,b,c,d){var e=qj[a];if(!e)return null;switch(a){case \"topAbort\":case \"topCancel\":case \"topCanPlay\":case \"topCanPlayThrough\":case \"topClose\":case \"topDurationChange\":case \"topEmptied\":case \"topEncrypted\":case \"topEnded\":case \"topError\":case \"topInput\":case \"topInvalid\":case \"topLoad\":case \"topLoadedData\":case \"topLoadedMetadata\":case \"topLoadStart\":case \"topPause\":case \"topPlay\":case \"topPlaying\":case \"topProgress\":case \"topRateChange\":case \"topReset\":case \"topSeeked\":case \"topSeeking\":case \"topStalled\":case \"topSubmit\":case \"topSuspend\":case \"topTimeUpdate\":case \"topToggle\":case \"topVolumeChange\":case \"topWaiting\":var f=Y;\nbreak;case \"topKeyPress\":if(0===hj(c))return null;case \"topKeyDown\":case \"topKeyUp\":f=kj;break;case \"topBlur\":case \"topFocus\":f=gj;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":f=Ni;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":f=lj;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":f=\nmj;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":f=ej;break;case \"topTransitionEnd\":f=nj;break;case \"topScroll\":f=Ji;break;case \"topWheel\":f=oj;break;case \"topCopy\":case \"topCut\":case \"topPaste\":f=fj}f?void 0:w(\"86\",a);a=f.getPooled(e,b,c,d);Th.accumulateTwoPhaseDispatches(a);return a}};L.setHandleTopLevel(M.handleTopLevel);Jb.injection.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nib.injection.injectComponentTree(G);Jb.injection.injectEventPluginsByName({SimpleEventPlugin:rj,EnterLeaveEventPlugin:Pi,ChangeEventPlugin:Ii,SelectEventPlugin:dj,BeforeInputEventPlugin:ri});\nvar sj=A.injection.MUST_USE_PROPERTY,Z=A.injection.HAS_BOOLEAN_VALUE,tj=A.injection.HAS_NUMERIC_VALUE,uj=A.injection.HAS_POSITIVE_NUMERIC_VALUE,vj=A.injection.HAS_STRING_BOOLEAN_VALUE,wj={Properties:{allowFullScreen:Z,allowTransparency:vj,async:Z,autoPlay:Z,capture:Z,checked:sj|Z,cols:uj,contentEditable:vj,controls:Z,\"default\":Z,defer:Z,disabled:Z,download:A.injection.HAS_OVERLOADED_BOOLEAN_VALUE,draggable:vj,formNoValidate:Z,hidden:Z,loop:Z,multiple:sj|Z,muted:sj|Z,noValidate:Z,open:Z,playsInline:Z,\nreadOnly:Z,required:Z,reversed:Z,rows:uj,rowSpan:tj,scoped:Z,seamless:Z,selected:sj|Z,size:uj,start:tj,span:uj,spellCheck:vj,style:0,itemScope:Z,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:vj},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&\na.ownerDocument.activeElement!==a&&a.setAttribute(\"value\",\"\"+b)}}},xj=A.injection.HAS_STRING_BOOLEAN_VALUE,yj={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},zj={Properties:{autoReverse:xj,externalResourcesRequired:xj,preserveAlpha:xj},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:yj.xlink,xlinkArcrole:yj.xlink,xlinkHref:yj.xlink,xlinkRole:yj.xlink,\nxlinkShow:yj.xlink,xlinkTitle:yj.xlink,xlinkType:yj.xlink,xmlBase:yj.xml,xmlLang:yj.xml,xmlSpace:yj.xml}},Aj=/[\\-\\:]([a-z])/g;function Bj(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Aj,\nBj);zj.Properties[b]=0;zj.DOMAttributeNames[b]=a});A.injection.injectDOMPropertyConfig(wj);A.injection.injectDOMPropertyConfig(zj);\nvar Cj=ig.injectInternals,Dj=F.ELEMENT_NODE,Ej=F.TEXT_NODE,Fj=F.COMMENT_NODE,Gj=F.DOCUMENT_NODE,Hj=F.DOCUMENT_FRAGMENT_NODE,Ij=A.ROOT_ATTRIBUTE_NAME,Jj=ka.getChildNamespace,Kj=N.createElement,Lj=N.createTextNode,Mj=N.setInitialProperties,Nj=N.diffProperties,Oj=N.updateProperties,Pj=N.diffHydratedProperties,Qj=N.diffHydratedText,Rj=N.warnForDeletedHydratableElement,Sj=N.warnForDeletedHydratableText,Tj=N.warnForInsertedHydratedElement,Uj=N.warnForInsertedHydratedText,Vj=G.precacheFiberNode,Wj=G.updateFiberProps;\nnb.injection.injectFiberControlledHostComponent(N);Dh._injectFiber(function(a){return Xj.findHostInstance(a)});var Yj=null,Zj=null;function ak(a){return!(!a||a.nodeType!==Dj&&a.nodeType!==Gj&&a.nodeType!==Hj&&(a.nodeType!==Fj||\" react-mount-point-unstable \"!==a.nodeValue))}function bk(a){a=a?a.nodeType===Gj?a.documentElement:a.firstChild:null;return!(!a||a.nodeType!==Dj||!a.hasAttribute(Ij))}\nvar Xj=function(a){var b=a.getPublicInstance;a=hh(a);var c=a.scheduleUpdate,d=a.getPriorityContext;return{createContainer:function(a){var b=ee();a={current:b,containerInfo:a,isScheduled:!1,nextScheduledRoot:null,context:null,pendingContext:null};return b.stateNode=a},updateContainer:function(a,b,g,h){var e=b.current;g=jh(g);null===b.context?b.context=g:b.pendingContext=g;b=h;h=d(e,ed.enableAsyncSubtreeAPI&&null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent);\na={element:a};kh(e,a,void 0===b?null:b,h);c(e,h)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case oh:return b(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:function(a){a=ph(a);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=qh(a);return null===a?null:a.stateNode}}}({getRootHostContext:function(a){if(a.nodeType===\nGj)a=(a=a.documentElement)?a.namespaceURI:Jj(null,\"\");else{var b=a.nodeType===Fj?a.parentNode:a;a=b.namespaceURI||null;b=b.tagName;a=Jj(a,b)}return a},getChildHostContext:function(a,b){return Jj(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){Yj=M.isEnabled();Zj=zh.getSelectionInformation();M.setEnabled(!1)},resetAfterCommit:function(){zh.restoreSelection(Zj);Zj=null;M.setEnabled(Yj);Yj=null},createInstance:function(a,b,c,d,e){a=Kj(a,b,c,d);Vj(e,a);Wj(a,b);return a},appendInitialChild:function(a,\nb){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){Mj(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return Nj(a,b,c,d,e)},commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){Wj(a,e);Oj(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\n\"string\"===typeof b.dangerouslySetInnerHTML.__html},resetTextContent:function(a){a.textContent=\"\"},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=Lj(a,b);Vj(d,a);return a},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){a.nodeType===Fj?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,\nb,c){a.nodeType===Fj?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){a.nodeType===Fj?a.parentNode.removeChild(b):a.removeChild(b)},canHydrateInstance:function(a,b){return a.nodeType===Dj&&b===a.nodeName.toLowerCase()},canHydrateTextInstance:function(a,b){return\"\"===b?!1:a.nodeType===Ej},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&a.nodeType!==Dj&&a.nodeType!==Ej;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=\na.firstChild;a&&a.nodeType!==Dj&&a.nodeType!==Ej;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){Vj(f,a);Wj(a,c);return Pj(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){Vj(c,a);return Qj(a,b)},didNotHydrateInstance:function(a,b){1===b.nodeType?Rj(a,b):Sj(a,b)},didNotFindHydratableInstance:function(a,b,c){Tj(a,b,c)},didNotFindHydratableTextInstance:function(a,b){Uj(a,b)},scheduleDeferredCallback:dd.rIC,useSyncScheduling:!0});sb.injection.injectFiberBatchedUpdates(Xj.batchedUpdates);\nfunction ck(a,b,c,d,e){ak(c)?void 0:w(\"200\");var f=c._reactRootContainer;if(f)Xj.updateContainer(b,f,a,e);else{if(!d&&!bk(c))for(d=void 0;d=c.lastChild;)c.removeChild(d);var g=Xj.createContainer(c);f=c._reactRootContainer=g;Xj.unbatchedUpdates(function(){Xj.updateContainer(b,g,a,e)})}return Xj.getPublicRootInstance(f)}function dk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ak(b)?void 0:w(\"200\");return ne.createPortal(a,b,null,c)}\nvar ek={createPortal:dk,hydrate:function(a,b,c){return ck(null,a,b,!0,c)},render:function(a,b,c){return ck(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null!=a&&Pa.has(a)?void 0:w(\"38\");return ck(a,b,c,!1,d)},unmountComponentAtNode:function(a){ak(a)?void 0:w(\"40\");return a._reactRootContainer?(Xj.unbatchedUpdates(function(){ck(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},findDOMNode:Dh,unstable_createPortal:dk,unstable_batchedUpdates:sb.batchedUpdates,\nunstable_deferredUpdates:Xj.deferredUpdates,flushSync:Xj.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Jb,EventPluginRegistry:sa,EventPropagators:Th,ReactControlledComponent:nb,ReactDOMComponentTree:G,ReactDOMEventListener:L}};Cj({findFiberByHostInstance:G.getClosestInstanceFromNode,findHostInstanceByFiber:Xj.findHostInstance,bundleType:0,version:\"16.0.0\",rendererPackageName:\"react-dom\"});module.exports=ek;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 40\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 41\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/EventListener.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 43\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 44\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 45\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 46\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/focusNode.js\n// module id = 47\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 48\n// module chunks = 0","import React, { Component } from 'react'\nimport logo from './logo.svg'\n\nvar dummyBrainJson = require('file-loader!./sample-data/brain.json') // eslint-disable-line\nvar { DatacubeView } = require('datacube-image-slicer')\n\nclass App extends Component {\n  async componentDidMount () {\n    const res = await window.fetch(dummyBrainJson)\n    const data = await res.json()\n    var views = [\n      { data, node: this.a, axis: 'x', matchCanvasToData: true },\n      { data, node: this.b, axis: 'y', matchCanvasToData: true },\n      { data, node: this.c, axis: 'z', matchCanvasToData: true }\n    ].map(view => new DatacubeView(view))\n    var animationQueue = -1\n    function renderAllViews (view) {\n      ++animationQueue\n      window.requestAnimationFrame(function () {\n        if (animationQueue) return --animationQueue\n        var toRender = views.filter(v => v !== view)\n        toRender.forEach(otherView => {\n          otherView.position = view.position\n          otherView.render()\n        })\n        --animationQueue\n      })\n    }\n    views.forEach(view => { view.onMouseMove = renderAllViews.bind(this) })\n  }\n  render () {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} width='100px' alt='logo' />\n          <h1 className='App-title'>datacube-image-slicer</h1>\n        </header>\n        <div className='brains'>\n          <div className='brain-col brains-left'>\n            <figure>\n              <div style={{float: 'right'}}>\n                <canvas id='a' className='brain-slice brain-slice-a' ref={a => { this.a = a }} />\n                <canvas id='b' className='brain-slice brain-slice-b' ref={b => { this.b = b }} />\n              </div>\n              <figcaption className='left-caption'>\n                <div>\n                  <p className='caption-xy'>x-y</p>\n                  <p className='caption-xz'>x-z</p>\n                </div>\n              </figcaption>\n            </figure>\n          </div>\n          <div className='brain-col brains-right'>\n            <figure>\n              <canvas id='c' className='brain-slice  brain-slice-c' ref={c => { this.c = c }} />\n              <figcaption>\n                <div>\n                  <p className='caption-yz'>y-z</p>\n                </div>\n              </figcaption>\n            </figure>\n          </div>\n        </div>\n        <p>\n          Hover your mouse over the above frames.\n        </p>\n        <hr />\n        <iframe style={{ border: 0, width: '100%', height: '100%' }} src='docs/'\n          title='api-docs' />\n      </div>\n    )\n  }\n}\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 51\n// module chunks = 0","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 52\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 53\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/media/logo.803bab53.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/logo.svg\n// module id = 54\n// module chunks = 0","module.exports = __webpack_public_path__ + \"6e91c334bbc4d659b19412aeef096b62.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-loader!./src/sample-data/brain.json\n// module id = 55\n// module chunks = 0","module.exports = {\n  Datacube: require('./Datacube'),\n  DatacubeView: require('./DatacubeView')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/index.js\n// module id = 56\n// module chunks = 0","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/times.js\n// module id = 57\n// module chunks = 0","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_baseTimes.js\n// module id = 58\n// module chunks = 0","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_castFunction.js\n// module id = 59\n// module chunks = 0","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/identity.js\n// module id = 60\n// module chunks = 0","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/toInteger.js\n// module id = 61\n// module chunks = 0","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/toFinite.js\n// module id = 62\n// module chunks = 0","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/toNumber.js\n// module id = 63\n// module chunks = 0","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isObject.js\n// module id = 64\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isSymbol.js\n// module id = 65\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_baseGetTag.js\n// module id = 66\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_root.js\n// module id = 67\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_freeGlobal.js\n// module id = 68\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_getRawTag.js\n// module id = 69\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_objectToString.js\n// module id = 70\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isObjectLike.js\n// module id = 71\n// module chunks = 0","module.exports = require('./lib/core/core');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/core.js\n// module id = 72\n// module chunks = 0","var isFactory = require('./../utils/object').isFactory;\nvar typedFactory = require('./typed');\nvar emitter = require('./../utils/emitter');\n\nvar importFactory = require('./function/import');\nvar configFactory = require('./function/config');\n\n/**\n * Math.js core. Creates a new, empty math.js instance\n * @param {Object} [options] Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\nexports.create = function create (options) {\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' +\n    'Please load the es5-shim and es5-sham library for compatibility.');\n  }\n\n  // cached factories and instances\n  var factories = [];\n  var instances = [];\n\n  // create a namespace for the mathjs instance, and attach emitter functions\n  var math = emitter.mixin({});\n  math.type = {};\n  math.expression = {\n    transform: {},\n    mathWithTransform: {}\n  };\n\n  // create a new typed instance\n  math.typed = typedFactory.create(math.type);\n\n  // create configuration options. These are private\n  var _config = {\n    // minimum relative difference between two compared values,\n    // used by all comparison functions\n    epsilon: 1e-12,\n\n    // type of default matrix output. Choose 'matrix' (default) or 'array'\n    matrix: 'Matrix',\n\n    // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n    number: 'number',\n\n    // number of significant digits in BigNumbers\n    precision: 64,\n\n    // predictable output type of functions. When true, output type depends only\n    // on the input types. When false (default), output type can vary depending\n    // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n    // predictable is false, and returns `NaN` when true.\n    predictable: false,\n\n    // random seed for seeded pseudo random number generation\n    // null = randomly seed\n    randomSeed: null\n  };\n\n  /**\n   * Load a function or data type from a factory.\n   * If the function or data type already exists, the existing instance is\n   * returned.\n   * @param {{type: string, name: string, factory: Function}} factory\n   * @returns {*}\n   */\n  function load (factory) {\n    if (!isFactory(factory)) {\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = factories.indexOf(factory);\n    var instance;\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, _config, load, math.typed, math);\n      }\n      else {\n        instance = factory.factory(math.type, _config, load, math.typed);\n      }\n\n      // append to the cache\n      factories.push(factory);\n      instances.push(instance);\n    }\n    else {\n      // already existing function, return the cached instance\n      instance = instances[index];\n    }\n\n    return instance;\n  }\n\n  // load the import and config functions\n  math['import'] = load(importFactory);\n  math['config'] = load(configFactory);\n  math.expression.mathWithTransform['config'] = math['config']\n\n  // apply options\n  if (options) {\n    math.config(options);\n  }\n\n  return math;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/core/core.js\n// module id = 73\n// module chunks = 0","var typedFunction = require('typed-function');\nvar digits = require('./../utils/number').digits;\nvar isBigNumber = require('./../utils/bignumber/isBigNumber');\nvar isMatrix = require('./../utils/collection/isMatrix');\n\n// returns a new instance of typed-function\nvar createTyped = function () {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  createTyped = typedFunction.create;\n  return typedFunction;\n};\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} type   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexports.create = function create(type) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // type checks for all known types\n  //\n  // note that:\n  //\n  // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n  //   instanceof cannot be used because that would not allow to pass data from\n  //   one instance of math.js to another since each has it's own instance of Unit.\n  // - check the `isUnit` property via the constructor, so there will be no\n  //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n  //   That is important for security reasons.\n  // - It must not be possible to override the type checks used internally,\n  //   for security reasons, so these functions are not exposed in the expression\n  //   parser.\n  type.isNumber = function (x) { return typeof x === 'number' };\n  type.isComplex = function (x) { return type.Complex && x instanceof type.Complex || false };\n  type.isBigNumber = isBigNumber;\n  type.isFraction = function (x) { return type.Fraction && x instanceof type.Fraction || false };\n  type.isUnit = function (x) { return x && x.constructor.prototype.isUnit || false };\n  type.isString = function (x) { return typeof x === 'string' };\n  type.isArray = Array.isArray;\n  type.isMatrix = isMatrix;\n  type.isDenseMatrix = function (x) { return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false };\n  type.isSparseMatrix = function (x) { return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false };\n  type.isRange = function (x) { return x && x.constructor.prototype.isRange || false };\n  type.isIndex = function (x) { return x && x.constructor.prototype.isIndex || false };\n  type.isBoolean = function (x) { return typeof x === 'boolean' };\n  type.isResultSet = function (x) { return x && x.constructor.prototype.isResultSet || false };\n  type.isHelp = function (x) { return x && x.constructor.prototype.isHelp || false };\n  type.isFunction = function (x) { return typeof x === 'function'};\n  type.isDate = function (x) { return x instanceof Date };\n  type.isRegExp = function (x) { return x instanceof RegExp };\n  type.isObject = function (x) { return typeof x === 'object' };\n  type.isNull = function (x) { return x === null };\n  type.isUndefined = function (x) { return x === undefined };\n\n  type.isAccessorNode = function (x) { return x && x.isAccessorNode && x.constructor.prototype.isNode || false };\n  type.isArrayNode = function (x) { return x && x.isArrayNode && x.constructor.prototype.isNode || false };\n  type.isAssignmentNode = function (x) { return x && x.isAssignmentNode && x.constructor.prototype.isNode || false };\n  type.isBlockNode = function (x) { return x && x.isBlockNode && x.constructor.prototype.isNode || false };\n  type.isConditionalNode = function (x) { return x && x.isConditionalNode && x.constructor.prototype.isNode || false };\n  type.isConstantNode = function (x) { return x && x.isConstantNode && x.constructor.prototype.isNode || false };\n  type.isFunctionAssignmentNode = function (x) { return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false };\n  type.isFunctionNode = function (x) { return x && x.isFunctionNode && x.constructor.prototype.isNode || false };\n  type.isIndexNode = function (x) { return x && x.isIndexNode && x.constructor.prototype.isNode || false };\n  type.isNode = function (x) { return x && x.isNode && x.constructor.prototype.isNode || false };\n  type.isObjectNode = function (x) { return x && x.isObjectNode && x.constructor.prototype.isNode || false };\n  type.isOperatorNode = function (x) { return x && x.isOperatorNode && x.constructor.prototype.isNode || false };\n  type.isParenthesisNode = function (x) { return x && x.isParenthesisNode && x.constructor.prototype.isNode || false };\n  type.isRangeNode = function (x) { return x && x.isRangeNode && x.constructor.prototype.isNode || false };\n  type.isSymbolNode = function (x) { return x && x.isSymbolNode && x.constructor.prototype.isNode || false };\n\n  type.isChain = function (x) { return x && x.constructor.prototype.isChain || false };\n\n  // get a new instance of typed-function\n  var typed = createTyped();\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.types = [\n    { name: 'number',          test: type.isNumber },\n    { name: 'Complex',         test: type.isComplex },\n    { name: 'BigNumber',       test: type.isBigNumber },\n    { name: 'Fraction',        test: type.isFraction },\n    { name: 'Unit',            test: type.isUnit },\n    { name: 'string',          test: type.isString },\n    { name: 'Array',           test: type.isArray },\n    { name: 'Matrix',          test: type.isMatrix },\n    { name: 'DenseMatrix',     test: type.isDenseMatrix },\n    { name: 'SparseMatrix',    test: type.isSparseMatrix },\n    { name: 'Range',           test: type.isRange },\n    { name: 'Index',           test: type.isIndex },\n    { name: 'boolean',         test: type.isBoolean },\n    { name: 'ResultSet',       test: type.isResultSet },\n    { name: 'Help',            test: type.isHelp },\n    { name: 'function',        test: type.isFunction },\n    { name: 'Date',            test: type.isDate },\n    { name: 'RegExp',          test: type.isRegExp },\n    { name: 'Object',          test: type.isObject },\n    { name: 'null',            test: type.isNull },\n    { name: 'undefined',       test: type.isUndefined },\n\n    { name: 'OperatorNode',    test: type.isOperatorNode },\n    { name: 'ConstantNode',    test: type.isConstantNode },\n    { name: 'SymbolNode',      test: type.isSymbolNode },\n    { name: 'ParenthesisNode', test: type.isParenthesisNode },\n    { name: 'FunctionNode',    test: type.isFunctionNode },\n    { name: 'FunctionAssignmentNode',    test: type.isFunctionAssignmentNode },\n    { name: 'ArrayNode',                 test: type.isArrayNode },\n    { name: 'AssignmentNode',            test: type.isAssignmentNode },\n    { name: 'BlockNode',                 test: type.isBlockNode },\n    { name: 'ConditionalNode',           test: type.isConditionalNode },\n    { name: 'IndexNode',                 test: type.isIndexNode },\n    { name: 'RangeNode',                 test: type.isRangeNode },\n    { name: 'Node',                      test: type.isNode }\n  ];\n\n  // TODO: add conversion from BigNumber to number?\n  typed.conversions = [\n    {\n      from: 'number',\n      to: 'BigNumber',\n      convert: function (x) {\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' +\n          '(value: ' + x + '). ' +\n          'Use function bignumber(x) to convert to BigNumber.');\n        }\n        return new type.BigNumber(x);\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x, 0);\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function (x) {\n        return x + '';\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x.toNumber(), 0);\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function (x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' +\n            'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x.valueOf(), 0);\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function (x) {\n        var f = new type.Fraction(x);\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' +\n              '(value: ' + x + '). ' +\n              'Use function fraction(x) to convert to Fraction.');\n        }\n        return new type.Fraction(x);\n      }\n    }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf();\n    //  }\n    //}, {\n      from: 'string',\n      to: 'number',\n      convert: function (x) {\n        var n = Number(x);\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number');\n        }\n        return n;\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function (x) {\n        try {\n          return new type.BigNumber(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function (x) {\n        try {\n          return new type.Fraction(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function (x) {\n        try {\n          return new type.Complex(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex');\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function (x) {\n        return +x;\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function (x) {\n        return new type.BigNumber(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function (x) {\n        return new type.Fraction(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function (x) {\n        return +x;\n      }\n    }, {\n      from: 'null',\n      to: 'number',\n      convert: function () {\n        return 0;\n      }\n    }, {\n      from: 'null',\n      to: 'string',\n      convert: function () {\n        return 'null';\n      }\n    }, {\n      from: 'null',\n      to: 'BigNumber',\n      convert: function () {\n        return new type.BigNumber(0);\n      }\n    }, {\n      from: 'null',\n      to: 'Fraction',\n      convert: function () {\n        return new type.Fraction(0);\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function (array) {\n        // TODO: how to decide on the right type of matrix to create?\n        return new type.DenseMatrix(array);\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function (matrix) {\n        return matrix.valueOf();\n      }\n    }\n  ];\n\n  return typed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/core/typed.js\n// module id = 74\n// module chunks = 0","/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n  // factory function to create a new instance of typed-function\n  // TODO: allow passing configuration, types, tests via the factory function\n  function create() {\n    /**\n     * Get a type test function for a specific data type\n     * @param {string} name                   Name of a data type like 'number' or 'string'\n     * @returns {Function(obj: *) : boolean}  Returns a type testing function.\n     *                                        Throws an error for an unknown type.\n     */\n    function getTypeTest(name) {\n      var test;\n      for (var i = 0; i < typed.types.length; i++) {\n        var entry = typed.types[i];\n        if (entry.name === name) {\n          test = entry.test;\n          break;\n        }\n      }\n\n      if (!test) {\n        var hint;\n        for (i = 0; i < typed.types.length; i++) {\n          entry = typed.types[i];\n          if (entry.name.toLowerCase() == name.toLowerCase()) {\n            hint = entry.name;\n            break;\n          }\n        }\n\n        throw new Error('Unknown type \"' + name + '\"' +\n            (hint ? ('. Did you mean \"' + hint + '\"?') : ''));\n      }\n      return test;\n    }\n\n    /**\n     * Retrieve the function name from a set of functions, and check\n     * whether the name of all functions match (if given)\n     * @param {Array.<function>} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // merge function name when this is a typed function\n        if (fn.signatures && fn.name != '') {\n          if (name == '') {\n            name = fn.name;\n          }\n          else if (name != fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    /**\n     * Create an ArgumentsError. Creates messages like:\n     *\n     *   Unexpected type of argument (expected: ..., actual: ..., index: ...)\n     *   Too few arguments (expected: ..., index: ...)\n     *   Too many arguments (expected: ..., actual: ...)\n     *\n     * @param {String} fn         Function name\n     * @param {number} argCount   Number of arguments\n     * @param {Number} index      Current argument index\n     * @param {*} actual          Current argument\n     * @param {string} [expected] An optional, comma separated string with\n     *                            expected types on given index\n     * @extends Error\n     */\n    function createError(fn, argCount, index, actual, expected) {\n      var actualType = getTypeOf(actual);\n      var _expected = expected ? expected.split(',') : null;\n      var _fn = (fn || 'unnamed');\n      var anyType = _expected && contains(_expected, 'any');\n      var message;\n      var data = {\n        fn: fn,\n        index: index,\n        actual: actual,\n        expected: _expected\n      };\n\n      if (_expected) {\n        if (argCount > index && !anyType) {\n          // unexpected type\n          message = 'Unexpected type of argument in function ' + _fn +\n              ' (expected: ' + _expected.join(' or ') + ', actual: ' + actualType + ', index: ' + index + ')';\n        }\n        else {\n          // too few arguments\n          message = 'Too few arguments in function ' + _fn +\n              ' (expected: ' + _expected.join(' or ') + ', index: ' + index + ')';\n        }\n      }\n      else {\n        // too many arguments\n        message = 'Too many arguments in function ' + _fn +\n            ' (expected: ' + index + ', actual: ' + argCount + ')'\n      }\n\n      var err = new TypeError(message);\n      err.data = data;\n      return err;\n    }\n\n    /**\n     * Collection with function references (local shortcuts to functions)\n     * @constructor\n     * @param {string} [name='refs']  Optional name for the refs, used to generate\n     *                                JavaScript code\n     */\n    function Refs(name) {\n      this.name = name || 'refs';\n      this.categories = {};\n    }\n\n    /**\n     * Add a function reference.\n     * @param {Function} fn\n     * @param {string} [category='fn']    A function category, like 'fn' or 'signature'\n     * @returns {string} Returns the function name, for example 'fn0' or 'signature2'\n     */\n    Refs.prototype.add = function (fn, category) {\n      var cat = category || 'fn';\n      if (!this.categories[cat]) this.categories[cat] = [];\n\n      var index = this.categories[cat].indexOf(fn);\n      if (index == -1) {\n        index = this.categories[cat].length;\n        this.categories[cat].push(fn);\n      }\n\n      return cat + index;\n    };\n\n    /**\n     * Create code lines for all function references\n     * @returns {string} Returns the code containing all function references\n     */\n    Refs.prototype.toCode = function () {\n      var code = [];\n      var path = this.name + '.categories';\n      var categories = this.categories;\n\n      for (var cat in categories) {\n        if (categories.hasOwnProperty(cat)) {\n          var category = categories[cat];\n\n          for (var i = 0; i < category.length; i++) {\n            code.push('var ' + cat + i + ' = ' + path + '[\\'' + cat + '\\'][' + i + '];');\n          }\n        }\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * A function parameter\n     * @param {string | string[] | Param} types    A parameter type like 'string',\n     *                                             'number | boolean'\n     * @param {boolean} [varArgs=false]            Variable arguments if true\n     * @constructor\n     */\n    function Param(types, varArgs) {\n      // parse the types, can be a string with types separated by pipe characters |\n      if (typeof types === 'string') {\n        // parse variable arguments operator (ellipses '...number')\n        var _types = types.trim();\n        var _varArgs = _types.substr(0, 3) === '...';\n        if (_varArgs) {\n          _types = _types.substr(3);\n        }\n        if (_types === '') {\n          this.types = ['any'];\n        }\n        else {\n          this.types = _types.split('|');\n          for (var i = 0; i < this.types.length; i++) {\n            this.types[i] = this.types[i].trim();\n          }\n        }\n      }\n      else if (Array.isArray(types)) {\n        this.types = types;\n      }\n      else if (types instanceof Param) {\n        return types.clone();\n      }\n      else {\n        throw new Error('String or Array expected');\n      }\n\n      // can hold a type to which to convert when handling this parameter\n      this.conversions = [];\n      // TODO: implement better API for conversions, be able to add conversions via constructor (support a new type Object?)\n\n      // variable arguments\n      this.varArgs = _varArgs || varArgs || false;\n\n      // check for any type arguments\n      this.anyType = this.types.indexOf('any') !== -1;\n    }\n\n    /**\n     * Order Params\n     * any type ('any') will be ordered last, and object as second last (as other\n     * types may be an object as well, like Array).\n     *\n     * @param {Param} a\n     * @param {Param} b\n     * @returns {number} Returns 1 if a > b, -1 if a < b, and else 0.\n     */\n    Param.compare = function (a, b) {\n      // TODO: simplify parameter comparison, it's a mess\n      if (a.anyType) return 1;\n      if (b.anyType) return -1;\n\n      if (contains(a.types, 'Object')) return 1;\n      if (contains(b.types, 'Object')) return -1;\n\n      if (a.hasConversions()) {\n        if (b.hasConversions()) {\n          var i, ac, bc;\n\n          for (i = 0; i < a.conversions.length; i++) {\n            if (a.conversions[i] !== undefined) {\n              ac = a.conversions[i];\n              break;\n            }\n          }\n\n          for (i = 0; i < b.conversions.length; i++) {\n            if (b.conversions[i] !== undefined) {\n              bc = b.conversions[i];\n              break;\n            }\n          }\n\n          return typed.conversions.indexOf(ac) - typed.conversions.indexOf(bc);\n        }\n        else {\n          return 1;\n        }\n      }\n      else {\n        if (b.hasConversions()) {\n          return -1;\n        }\n        else {\n          // both params have no conversions\n          var ai, bi;\n\n          for (i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === a.types[0]) {\n              ai = i;\n              break;\n            }\n          }\n\n          for (i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === b.types[0]) {\n              bi = i;\n              break;\n            }\n          }\n\n          return ai - bi;\n        }\n      }\n    };\n\n    /**\n     * Test whether this parameters types overlap an other parameters types.\n     * Will not match ['any'] with ['number']\n     * @param {Param} other\n     * @return {boolean} Returns true when there are overlapping types\n     */\n    Param.prototype.overlapping = function (other) {\n      for (var i = 0; i < this.types.length; i++) {\n        if (contains(other.types, this.types[i])) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Test whether this parameters types matches an other parameters types.\n     * When any of the two parameters contains `any`, true is returned\n     * @param {Param} other\n     * @return {boolean} Returns true when there are matching types\n     */\n    Param.prototype.matches = function (other) {\n      return this.anyType || other.anyType || this.overlapping(other);\n    };\n\n    /**\n     * Create a clone of this param\n     * @returns {Param} Returns a cloned version of this param\n     */\n    Param.prototype.clone = function () {\n      var param = new Param(this.types.slice(), this.varArgs);\n      param.conversions = this.conversions.slice();\n      return param;\n    };\n\n    /**\n     * Test whether this parameter contains conversions\n     * @returns {boolean} Returns true if the parameter contains one or\n     *                    multiple conversions.\n     */\n    Param.prototype.hasConversions = function () {\n      return this.conversions.length > 0;\n    };\n\n    /**\n     * Tests whether this parameters contains any of the provided types\n     * @param {Object} types  A Map with types, like {'number': true}\n     * @returns {boolean}     Returns true when the parameter contains any\n     *                        of the provided types\n     */\n    Param.prototype.contains = function (types) {\n      for (var i = 0; i < this.types.length; i++) {\n        if (types[this.types[i]]) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Return a string representation of this params types, like 'string' or\n     * 'number | boolean' or '...number'\n     * @param {boolean} [toConversion]   If true, the returned types string\n     *                                   contains the types where the parameter\n     *                                   will convert to. If false (default)\n     *                                   the \"from\" types are returned\n     * @returns {string}\n     */\n    Param.prototype.toString = function (toConversion) {\n      var types = [];\n      var keys = {};\n\n      for (var i = 0; i < this.types.length; i++) {\n        var conversion = this.conversions[i];\n        var type = toConversion && conversion ? conversion.to : this.types[i];\n        if (!(type in keys)) {\n          keys[type] = true;\n          types.push(type);\n        }\n      }\n\n      return (this.varArgs ? '...' : '') + types.join('|');\n    };\n\n    /**\n     * A function signature\n     * @param {string | string[] | Param[]} params\n     *                         Array with the type(s) of each parameter,\n     *                         or a comma separated string with types\n     * @param {Function} fn    The actual function\n     * @constructor\n     */\n    function Signature(params, fn) {\n      var _params;\n      if (typeof params === 'string') {\n        _params = (params !== '') ? params.split(',') : [];\n      }\n      else if (Array.isArray(params)) {\n        _params = params;\n      }\n      else {\n        throw new Error('string or Array expected');\n      }\n\n      this.params = new Array(_params.length);\n      this.anyType = false;\n      this.varArgs = false;\n      for (var i = 0; i < _params.length; i++) {\n        var param = new Param(_params[i]);\n        this.params[i] = param;\n        if (param.anyType) {\n          this.anyType = true;\n        }\n        if (i === _params.length - 1) {\n          // the last argument\n          this.varArgs = param.varArgs;\n        }\n        else {\n          // non-last argument\n          if (param.varArgs) {\n            throw new SyntaxError('Unexpected variable arguments operator \"...\"');\n          }\n        }\n      }\n\n      this.fn = fn;\n    }\n\n    /**\n     * Create a clone of this signature\n     * @returns {Signature} Returns a cloned version of this signature\n     */\n    Signature.prototype.clone = function () {\n      return new Signature(this.params.slice(), this.fn);\n    };\n\n    /**\n     * Expand a signature: split params with union types in separate signatures\n     * For example split a Signature \"string | number\" into two signatures.\n     * @return {Signature[]} Returns an array with signatures (at least one)\n     */\n    Signature.prototype.expand = function () {\n      var signatures = [];\n\n      function recurse(signature, path) {\n        if (path.length < signature.params.length) {\n          var i, newParam, conversion;\n\n          var param = signature.params[path.length];\n          if (param.varArgs) {\n            // a variable argument. do not split the types in the parameter\n            newParam = param.clone();\n\n            // add conversions to the parameter\n            // recurse for all conversions\n            for (i = 0; i < typed.conversions.length; i++) {\n              conversion = typed.conversions[i];\n              if (!contains(param.types, conversion.from) && contains(param.types, conversion.to)) {\n                var j = newParam.types.length;\n                newParam.types[j] = conversion.from;\n                newParam.conversions[j] = conversion;\n              }\n            }\n\n            recurse(signature, path.concat(newParam));\n          }\n          else {\n            // split each type in the parameter\n            for (i = 0; i < param.types.length; i++) {\n              recurse(signature, path.concat(new Param(param.types[i])));\n            }\n\n            // recurse for all conversions\n            for (i = 0; i < typed.conversions.length; i++) {\n              conversion = typed.conversions[i];\n              if (!contains(param.types, conversion.from) && contains(param.types, conversion.to)) {\n                newParam = new Param(conversion.from);\n                newParam.conversions[0] = conversion;\n                recurse(signature, path.concat(newParam));\n              }\n            }\n          }\n        }\n        else {\n          signatures.push(new Signature(path, signature.fn));\n        }\n      }\n\n      recurse(this, []);\n\n      return signatures;\n    };\n\n    /**\n     * Compare two signatures.\n     *\n     * When two params are equal and contain conversions, they will be sorted\n     * by lowest index of the first conversions.\n     *\n     * @param {Signature} a\n     * @param {Signature} b\n     * @returns {number} Returns 1 if a > b, -1 if a < b, and else 0.\n     */\n    Signature.compare = function (a, b) {\n      if (a.params.length > b.params.length) return 1;\n      if (a.params.length < b.params.length) return -1;\n\n      // count the number of conversions\n      var i;\n      var len = a.params.length; // a and b have equal amount of params\n      var ac = 0;\n      var bc = 0;\n      for (i = 0; i < len; i++) {\n        if (a.params[i].hasConversions()) ac++;\n        if (b.params[i].hasConversions()) bc++;\n      }\n\n      if (ac > bc) return 1;\n      if (ac < bc) return -1;\n\n      // compare the order per parameter\n      for (i = 0; i < a.params.length; i++) {\n        var cmp = Param.compare(a.params[i], b.params[i]);\n        if (cmp !== 0) {\n          return cmp;\n        }\n      }\n\n      return 0;\n    };\n\n    /**\n     * Test whether any of the signatures parameters has conversions\n     * @return {boolean} Returns true when any of the parameters contains\n     *                   conversions.\n     */\n    Signature.prototype.hasConversions = function () {\n      for (var i = 0; i < this.params.length; i++) {\n        if (this.params[i].hasConversions()) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Test whether this signature should be ignored.\n     * Checks whether any of the parameters contains a type listed in\n     * typed.ignore\n     * @return {boolean} Returns true when the signature should be ignored\n     */\n    Signature.prototype.ignore = function () {\n      // create a map with ignored types\n      var types = {};\n      for (var i = 0; i < typed.ignore.length; i++) {\n        types[typed.ignore[i]] = true;\n      }\n\n      // test whether any of the parameters contains this type\n      for (i = 0; i < this.params.length; i++) {\n        if (this.params[i].contains(types)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    /**\n     * Test whether the path of this signature matches a given path.\n     * @param {Param[]} params\n     */\n    Signature.prototype.paramsStartWith = function (params) {\n      if (params.length === 0) {\n        return true;\n      }\n\n      var aLast = last(this.params);\n      var bLast = last(params);\n\n      for (var i = 0; i < params.length; i++) {\n        var a = this.params[i] || (aLast.varArgs ? aLast: null);\n        var b = params[i]      || (bLast.varArgs ? bLast: null);\n\n        if (!a ||  !b || !a.matches(b)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Generate the code to invoke this signature\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns code\n     */\n    Signature.prototype.toCode = function (refs, prefix) {\n      var code = [];\n\n      var args = new Array(this.params.length);\n      for (var i = 0; i < this.params.length; i++) {\n        var param = this.params[i];\n        var conversion = param.conversions[0];\n        if (param.varArgs) {\n          args[i] = 'varArgs';\n        }\n        else if (conversion) {\n          args[i] = refs.add(conversion.convert, 'convert') + '(arg' + i + ')';\n        }\n        else {\n          args[i] = 'arg' + i;\n        }\n      }\n\n      var ref = this.fn ? refs.add(this.fn, 'signature') : undefined;\n      if (ref) {\n        return prefix + 'return ' + ref + '(' + args.join(', ') + '); // signature: ' + this.params.join(', ');\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * Return a string representation of the signature\n     * @returns {string}\n     */\n    Signature.prototype.toString = function () {\n      return this.params.join(', ');\n    };\n\n    /**\n     * A group of signatures with the same parameter on given index\n     * @param {Param[]} path\n     * @param {Signature} [signature]\n     * @param {Node[]} childs\n     * @param {boolean} [fallThrough=false]\n     * @constructor\n     */\n    function Node(path, signature, childs, fallThrough) {\n      this.path = path || [];\n      this.param = path[path.length - 1] || null;\n      this.signature = signature || null;\n      this.childs = childs || [];\n      this.fallThrough = fallThrough || false;\n    }\n\n    /**\n     * Generate code for this group of signatures\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the code as string\n     */\n    Node.prototype.toCode = function (refs, prefix) {\n      // TODO: split this function in multiple functions, it's too large\n      var code = [];\n\n      if (this.param) {\n        var index = this.path.length - 1;\n        var conversion = this.param.conversions[0];\n        var comment = '// type: ' + (conversion ?\n                (conversion.from + ' (convert to ' + conversion.to + ')') :\n                this.param);\n\n        // non-root node (path is non-empty)\n        if (this.param.varArgs) {\n          if (this.param.anyType) {\n            // variable arguments with any type\n            code.push(prefix + 'if (arguments.length > ' + index + ') {');\n            code.push(prefix + '  var varArgs = [];');\n            code.push(prefix + '  for (var i = ' + index + '; i < arguments.length; i++) {');\n            code.push(prefix + '    varArgs.push(arguments[i]);');\n            code.push(prefix + '  }');\n            code.push(this.signature.toCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n          else {\n            // variable arguments with a fixed type\n            var getTests = function (types, arg) {\n              var tests = [];\n              for (var i = 0; i < types.length; i++) {\n                tests[i] = refs.add(getTypeTest(types[i]), 'test') + '(' + arg + ')';\n              }\n              return tests.join(' || ');\n            }.bind(this);\n\n            var allTypes = this.param.types;\n            var exactTypes = [];\n            for (var i = 0; i < allTypes.length; i++) {\n              if (this.param.conversions[i] === undefined) {\n                exactTypes.push(allTypes[i]);\n              }\n            }\n\n            code.push(prefix + 'if (' + getTests(allTypes, 'arg' + index) + ') { ' + comment);\n            code.push(prefix + '  var varArgs = [arg' + index + '];');\n            code.push(prefix + '  for (var i = ' + (index + 1) + '; i < arguments.length; i++) {');\n            code.push(prefix + '    if (' + getTests(exactTypes, 'arguments[i]') + ') {');\n            code.push(prefix + '      varArgs.push(arguments[i]);');\n\n            for (var i = 0; i < allTypes.length; i++) {\n              var conversion_i = this.param.conversions[i];\n              if (conversion_i) {\n                var test = refs.add(getTypeTest(allTypes[i]), 'test');\n                var convert = refs.add(conversion_i.convert, 'convert');\n                code.push(prefix + '    }');\n                code.push(prefix + '    else if (' + test + '(arguments[i])) {');\n                code.push(prefix + '      varArgs.push(' + convert + '(arguments[i]));');\n              }\n            }\n            code.push(prefix + '    } else {');\n            code.push(prefix + '      throw createError(name, arguments.length, i, arguments[i], \\'' + exactTypes.join(',') + '\\');');\n            code.push(prefix + '    }');\n            code.push(prefix + '  }');\n            code.push(this.signature.toCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n        }\n        else {\n          if (this.param.anyType) {\n            // any type\n            code.push(prefix + '// type: any');\n            code.push(this._innerCode(refs, prefix));\n          }\n          else {\n            // regular type\n            var type = this.param.types[0];\n            var test = type !== 'any' ? refs.add(getTypeTest(type), 'test') : null;\n\n            code.push(prefix + 'if (' + test + '(arg' + index + ')) { ' + comment);\n            code.push(this._innerCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n        }\n      }\n      else {\n        // root node (path is empty)\n        code.push(this._innerCode(refs, prefix));\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * Generate inner code for this group of signatures.\n     * This is a helper function of Node.prototype.toCode\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the inner code as string\n     * @private\n     */\n    Node.prototype._innerCode = function (refs, prefix) {\n      var code = [];\n      var i;\n\n      if (this.signature) {\n        code.push(prefix + 'if (arguments.length === ' + this.path.length + ') {');\n        code.push(this.signature.toCode(refs, prefix + '  '));\n        code.push(prefix + '}');\n      }\n\n      for (i = 0; i < this.childs.length; i++) {\n        code.push(this.childs[i].toCode(refs, prefix));\n      }\n\n      // TODO: shouldn't the this.param.anyType check be redundant\n      if (!this.fallThrough || (this.param && this.param.anyType)) {\n        var exceptions = this._exceptions(refs, prefix);\n        if (exceptions) {\n          code.push(exceptions);\n        }\n      }\n\n      return code.join('\\n');\n    };\n\n\n    /**\n     * Generate code to throw exceptions\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the inner code as string\n     * @private\n     */\n    Node.prototype._exceptions = function (refs, prefix) {\n      var index = this.path.length;\n\n      if (this.childs.length === 0) {\n        // TODO: can this condition be simplified? (we have a fall-through here)\n        return [\n          prefix + 'if (arguments.length > ' + index + ') {',\n          prefix + '  throw createError(name, arguments.length, ' + index + ', arguments[' + index + ']);',\n          prefix + '}'\n        ].join('\\n');\n      }\n      else {\n        var keys = {};\n        var types = [];\n\n        for (var i = 0; i < this.childs.length; i++) {\n          var node = this.childs[i];\n          if (node.param) {\n            for (var j = 0; j < node.param.types.length; j++) {\n              var type = node.param.types[j];\n              if (!(type in keys) && !node.param.conversions[j]) {\n                keys[type] = true;\n                types.push(type);\n              }\n            }\n          }\n        }\n\n        return prefix + 'throw createError(name, arguments.length, ' + index + ', arguments[' + index + '], \\'' + types.join(',') + '\\');';\n      }\n    };\n\n    /**\n     * Split all raw signatures into an array with expanded Signatures\n     * @param {Object.<string, Function>} rawSignatures\n     * @return {Signature[]} Returns an array with expanded signatures\n     */\n    function parseSignatures(rawSignatures) {\n      // FIXME: need to have deterministic ordering of signatures, do not create via object\n      var signature;\n      var keys = {};\n      var signatures = [];\n      var i;\n\n      for (var types in rawSignatures) {\n        if (rawSignatures.hasOwnProperty(types)) {\n          var fn = rawSignatures[types];\n          signature = new Signature(types, fn);\n\n          if (signature.ignore()) {\n            continue;\n          }\n\n          var expanded = signature.expand();\n\n          for (i = 0; i < expanded.length; i++) {\n            var signature_i = expanded[i];\n            var key = signature_i.toString();\n            var existing = keys[key];\n            if (!existing) {\n              keys[key] = signature_i;\n            }\n            else {\n              var cmp = Signature.compare(signature_i, existing);\n              if (cmp < 0) {\n                // override if sorted first\n                keys[key] = signature_i;\n              }\n              else if (cmp === 0) {\n                throw new Error('Signature \"' + key + '\" is defined twice');\n              }\n              // else: just ignore\n            }\n          }\n        }\n      }\n\n      // convert from map to array\n      for (key in keys) {\n        if (keys.hasOwnProperty(key)) {\n          signatures.push(keys[key]);\n        }\n      }\n\n      // order the signatures\n      signatures.sort(function (a, b) {\n        return Signature.compare(a, b);\n      });\n\n      // filter redundant conversions from signatures with varArgs\n      // TODO: simplify this loop or move it to a separate function\n      for (i = 0; i < signatures.length; i++) {\n        signature = signatures[i];\n\n        if (signature.varArgs) {\n          var index = signature.params.length - 1;\n          var param = signature.params[index];\n\n          var t = 0;\n          while (t < param.types.length) {\n            if (param.conversions[t]) {\n              var type = param.types[t];\n\n              for (var j = 0; j < signatures.length; j++) {\n                var other = signatures[j];\n                var p = other.params[index];\n\n                if (other !== signature &&\n                    p &&\n                    contains(p.types, type) && !p.conversions[index]) {\n                  // this (conversion) type already exists, remove it\n                  param.types.splice(t, 1);\n                  param.conversions.splice(t, 1);\n                  t--;\n                  break;\n                }\n              }\n            }\n            t++;\n          }\n        }\n      }\n\n      return signatures;\n    }\n\n    /**\n     * Filter all any type signatures\n     * @param {Signature[]} signatures\n     * @return {Signature[]} Returns only any type signatures\n     */\n    function filterAnyTypeSignatures (signatures) {\n      var filtered = [];\n\n      for (var i = 0; i < signatures.length; i++) {\n        if (signatures[i].anyType) {\n          filtered.push(signatures[i]);\n        }\n      }\n\n      return filtered;\n    }\n\n    /**\n     * create a map with normalized signatures as key and the function as value\n     * @param {Signature[]} signatures   An array with split signatures\n     * @return {Object.<string, Function>} Returns a map with normalized\n     *                                     signatures as key, and the function\n     *                                     as value.\n     */\n    function mapSignatures(signatures) {\n      var normalized = {};\n\n      for (var i = 0; i < signatures.length; i++) {\n        var signature = signatures[i];\n        if (signature.fn && !signature.hasConversions()) {\n          var params = signature.params.join(',');\n          normalized[params] = signature.fn;\n        }\n      }\n\n      return normalized;\n    }\n\n    /**\n     * Parse signatures recursively in a node tree.\n     * @param {Signature[]} signatures  Array with expanded signatures\n     * @param {Param[]} path            Traversed path of parameter types\n     * @param {Signature[]} anys\n     * @return {Node}                   Returns a node tree\n     */\n    function parseTree(signatures, path, anys) {\n      var i, signature;\n      var index = path.length;\n      var nodeSignature;\n\n      var filtered = [];\n      for (i = 0; i < signatures.length; i++) {\n        signature = signatures[i];\n\n        // filter the first signature with the correct number of params\n        if (signature.params.length === index && !nodeSignature) {\n          nodeSignature = signature;\n        }\n\n        if (signature.params[index] != undefined) {\n          filtered.push(signature);\n        }\n      }\n\n      // sort the filtered signatures by param\n      filtered.sort(function (a, b) {\n        return Param.compare(a.params[index], b.params[index]);\n      });\n\n      // recurse over the signatures\n      var entries = [];\n      for (i = 0; i < filtered.length; i++) {\n        signature = filtered[i];\n        // group signatures with the same param at current index\n        var param = signature.params[index];\n\n        // TODO: replace the next filter loop\n        var existing = entries.filter(function (entry) {\n          return entry.param.overlapping(param);\n        })[0];\n\n        //var existing;\n        //for (var j = 0; j < entries.length; j++) {\n        //  if (entries[j].param.overlapping(param)) {\n        //    existing = entries[j];\n        //    break;\n        //  }\n        //}\n\n        if (existing) {\n          if (existing.param.varArgs) {\n            throw new Error('Conflicting types \"' + existing.param + '\" and \"' + param + '\"');\n          }\n          existing.signatures.push(signature);\n        }\n        else {\n          entries.push({\n            param: param,\n            signatures: [signature]\n          });\n        }\n      }\n\n      // find all any type signature that can still match our current path\n      var matchingAnys = [];\n      for (i = 0; i < anys.length; i++) {\n        if (anys[i].paramsStartWith(path)) {\n          matchingAnys.push(anys[i]);\n        }\n      }\n\n      // see if there are any type signatures that don't match any of the\n      // signatures that we have in our tree, i.e. we have alternative\n      // matching signature(s) outside of our current tree and we should\n      // fall through to them instead of throwing an exception\n      var fallThrough = false;\n      for (i = 0; i < matchingAnys.length; i++) {\n        if (!contains(signatures, matchingAnys[i])) {\n          fallThrough = true;\n          break;\n        }\n      }\n\n      // parse the childs\n      var childs = new Array(entries.length);\n      for (i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n        childs[i] = parseTree(entry.signatures, path.concat(entry.param), matchingAnys)\n      }\n\n      return new Node(path, nodeSignature, childs, fallThrough);\n    }\n\n    /**\n     * Generate an array like ['arg0', 'arg1', 'arg2']\n     * @param {number} count Number of arguments to generate\n     * @returns {Array} Returns an array with argument names\n     */\n    function getArgs(count) {\n      // create an array with all argument names\n      var args = [];\n      for (var i = 0; i < count; i++) {\n        args[i] = 'arg' + i;\n      }\n\n      return args;\n    }\n\n    /**\n     * Compose a function from sub-functions each handling a single type signature.\n     * Signatures:\n     *   typed(signature: string, fn: function)\n     *   typed(name: string, signature: string, fn: function)\n     *   typed(signatures: Object.<string, function>)\n     *   typed(name: string, signatures: Object.<string, function>)\n     *\n     * @param {string | null} name\n     * @param {Object.<string, Function>} signatures\n     * @return {Function} Returns the typed function\n     * @private\n     */\n    function _typed(name, signatures) {\n      var refs = new Refs();\n\n      // parse signatures, expand them\n      var _signatures = parseSignatures(signatures);\n      if (_signatures.length == 0) {\n        throw new Error('No signatures provided');\n      }\n\n      // filter all any type signatures\n      var anys = filterAnyTypeSignatures(_signatures);\n\n      // parse signatures into a node tree\n      var node = parseTree(_signatures, [], anys);\n\n      //var util = require('util');\n      //console.log('ROOT');\n      //console.log(util.inspect(node, { depth: null }));\n\n      // generate code for the typed function\n      var code = [];\n      var _name = name || '';\n      var _args = getArgs(maxParams(_signatures));\n      code.push('function ' + _name + '(' + _args.join(', ') + ') {');\n      code.push('  \"use strict\";');\n      code.push('  var name = \\'' + _name + '\\';');\n      code.push(node.toCode(refs, '  ', false));\n      code.push('}');\n\n      // generate body for the factory function\n      var body = [\n        refs.toCode(),\n        'return ' + code.join('\\n')\n      ].join('\\n');\n\n      // evaluate the JavaScript code and attach function references\n      var factory = (new Function(refs.name, 'createError', body));\n      var fn = factory(refs, createError);\n\n      //console.log('FN\\n' + fn.toString()); // TODO: cleanup\n\n      // attach the signatures with sub-functions to the constructed function\n      fn.signatures = mapSignatures(_signatures);\n\n      return fn;\n    }\n\n    /**\n     * Calculate the maximum number of parameters in givens signatures\n     * @param {Signature[]} signatures\n     * @returns {number} The maximum number of parameters\n     */\n    function maxParams(signatures) {\n      var max = 0;\n\n      for (var i = 0; i < signatures.length; i++) {\n        var len = signatures[i].params.length;\n        if (len > max) {\n          max = len;\n        }\n      }\n\n      return max;\n    }\n\n    /**\n     * Get the type of a value\n     * @param {*} x\n     * @returns {string} Returns a string with the type of value\n     */\n    function getTypeOf(x) {\n      var obj;\n\n      for (var i = 0; i < typed.types.length; i++) {\n        var entry = typed.types[i];\n\n        if (entry.name === 'Object') {\n          // Array and Date are also Object, so test for Object afterwards\n          obj = entry;\n        }\n        else {\n          if (entry.test(x)) return entry.name;\n        }\n      }\n\n      // at last, test whether an object\n      if (obj && obj.test(x)) return obj.name;\n\n      return 'unknown';\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Returns the last item in the array\n     * @param {Array} array\n     * @return {*} item\n     */\n    function last (array) {\n      return array[array.length - 1];\n    }\n\n    // data type tests\n    var types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) { return typeof x === 'object' } },\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    // configuration\n    var config = {};\n\n    // type conversions. Order is important\n    var conversions = [];\n\n    // types to be ignored\n    var ignore = [];\n\n    // temporary object for holding types and conversions, for constructing\n    // the `typed` function itself\n    // TODO: find a more elegant solution for this\n    var typed = {\n      config: config,\n      types: types,\n      conversions: conversions,\n      ignore: ignore\n    };\n\n    /**\n     * Construct the typed function itself with various signatures\n     *\n     * Signatures:\n     *\n     *   typed(signatures: Object.<string, function>)\n     *   typed(name: string, signatures: Object.<string, function>)\n     */\n    typed = _typed('typed', {\n      'Object': function (signatures) {\n        var fns = [];\n        for (var signature in signatures) {\n          if (signatures.hasOwnProperty(signature)) {\n            fns.push(signatures[signature]);\n          }\n        }\n        var name = getName(fns);\n\n        return _typed(name, signatures);\n      },\n      'string, Object': _typed,\n      // TODO: add a signature 'Array.<function>'\n      '...Function': function (fns) {\n        var err;\n        var name = getName(fns);\n        var signatures = {};\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // test whether this is a typed-function\n          if (!(typeof fn.signatures === 'object')) {\n            err = new TypeError('Function is no typed-function (index: ' + i + ')');\n            err.data = {index: i};\n            throw err;\n          }\n\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              if (signatures.hasOwnProperty(signature)) {\n                if (fn.signatures[signature] !== signatures[signature]) {\n                  err = new Error('Signature \"' + signature + '\" is defined twice');\n                  err.data = {signature: signature};\n                  throw err;\n                }\n                // else: both signatures point to the same function, that's fine\n              }\n              else {\n                signatures[signature] = fn.signatures[signature];\n              }\n            }\n          }\n        }\n\n        return _typed(name, signatures);\n      }\n    });\n\n    /**\n     * Find a specific signature from a (composed) typed function, for\n     * example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an errror when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = getTypeOf(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n\n    // attach types and conversions to the final `typed` function\n    typed.config = config;\n    typed.types = types;\n    typed.conversions = conversions;\n    typed.ignore = ignore;\n    typed.create = create;\n    typed.find = find;\n    typed.convert = convert;\n\n    // add a type\n    typed.addType = function (type) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/typed-function/typed-function.js\n// module id = 75\n// module chunks = 0","'use strict';\n\n/**\n * Test whether a value is a Matrix\n * @param {*} x\n * @returns {boolean} returns true with input is a Matrix\n *                    (like a DenseMatrix or SparseMatrix)\n */\nmodule.exports = function isMatrix (x) {\n  return x && x.constructor.prototype.isMatrix || false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/collection/isMatrix.js\n// module id = 76\n// module chunks = 0","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/tiny-emitter/index.js\n// module id = 77\n// module chunks = 0","'use strict';\n\nvar lazy = require('../../utils/object').lazy;\nvar isFactory = require('../../utils/object').isFactory;\nvar traverse = require('../../utils/object').traverse;\nvar ArgumentsError = require('../../error/ArgumentsError');\n\nfunction factory (type, config, load, typed, math) {\n  /**\n   * Import functions from an object or a module\n   *\n   * Syntax:\n   *\n   *    math.import(object)\n   *    math.import(object, options)\n   *\n   * Where:\n   *\n   * - `object: Object`\n   *   An object with functions to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!';\n   *      }\n   *    });\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2;               // 84\n   *    math.hello('user');             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(require('numbers'), {wrap: true});\n   *\n   *    math.fibonacci(7); // returns 13\n   *\n   * @param {Object | Array} object   Object with functions to be imported.\n   * @param {Object} [options]        Import options.\n   */\n  function math_import(object, options) {\n    var num = arguments.length;\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (isFactory(object)) {\n      _importFactory(object, options);\n    }\n    // TODO: allow a typed-function with name too\n    else if (Array.isArray(object)) {\n      object.forEach(function (entry) {\n        math_import(entry, options);\n      });\n    }\n    else if (typeof object === 'object') {\n      // a map with functions\n      for (var name in object) {\n        if (object.hasOwnProperty(name)) {\n          var value = object[name];\n          if (isSupportedType(value)) {\n            _import(name, value, options);\n          }\n          else if (isFactory(object)) {\n            _importFactory(object, options);\n          }\n          else {\n            math_import(value, options);\n          }\n        }\n      }\n    }\n    else {\n      if (!options.silent) {\n        throw new TypeError('Factory, Object, or Array expected');\n      }\n    }\n  }\n\n  /**\n   * Add a property to the math namespace and create a chain proxy for it.\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    }\n\n    if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      }\n      else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n\n      math[name] = value;\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n\n  function _importTransform (name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform\n      }\n    }\n    else {\n      // remove existing transform\n      delete math.expression.transform[name]\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value\n      }\n    }\n  }\n\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n  function _wrap (fn) {\n    var wrapper = function wrapper () {\n      var args = [];\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n      return fn.apply(math, args);\n    };\n\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n\n    return wrapper;\n  }\n\n  /**\n   * Import an instance of a factory into math.js\n   * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _importFactory(factory, options) {\n    if (typeof factory.name === 'string') {\n      var name = factory.name;\n      var existingTransform = name in math.expression.transform\n      var namespace = factory.path ? traverse(math, factory.path) : math;\n      var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n      var resolver = function () {\n        var instance = load(factory);\n        if (instance && typeof instance.transform === 'function') {\n          throw new Error('Transforms cannot be attached to factory functions. ' +\n              'Please create a separate function for it with exports.path=\"expression.transform\"');\n        }\n\n        if (isTypedFunction(existing) && isTypedFunction(instance)) {\n          if (options.override) {\n            // replace the existing typed function (nothing to do)\n          }\n          else {\n            // merge the existing and new typed function\n            instance = typed(existing, instance);\n          }\n\n          return instance;\n        }\n\n        if (existing === undefined || options.override) {\n          return instance;\n        }\n\n        if (!options.silent) {\n          throw new Error('Cannot import \"' + name + '\": already exists');\n        }\n      };\n\n      if (factory.lazy !== false) {\n        lazy(namespace, name, resolver);\n\n        if (!existingTransform) {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            lazy(math.expression.mathWithTransform, name, resolver);\n          }\n        }\n      }\n      else {\n        namespace[name] = resolver();\n\n        if (!existingTransform) {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            math.expression.mathWithTransform[name] = resolver();\n          }\n        }\n      }\n\n      math.emit('import', name, resolver, factory.path);\n    }\n    else {\n      // unnamed factory.\n      // no lazy loading\n      load(factory);\n    }\n  }\n\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n  function isSupportedType(object) {\n    return typeof object === 'function'\n        || typeof object === 'number'\n        || typeof object === 'string'\n        || typeof object === 'boolean'\n        || object === null\n        || (object && type.isUnit(object))\n        || (object && type.isComplex(object))\n        || (object && type.isBigNumber(object))\n        || (object && type.isFraction(object))\n        || (object && type.isMatrix(object))\n        || (object && Array.isArray(object))\n  }\n\n  /**\n   * Test whether a given thing is a typed-function\n   * @param {*} fn\n   * @return {boolean} Returns true when `fn` is a typed-function\n   */\n  function isTypedFunction (fn) {\n    return typeof fn === 'function' && typeof fn.signatures === 'object';\n  }\n\n  function allowedInExpressions (name) {\n    return !unsafe.hasOwnProperty(name);\n  }\n\n  function factoryAllowedInExpressions (factory) {\n    return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n  }\n\n  // namespaces and functions not available in the parser for safety reasons\n  var unsafe = {\n    'expression': true,\n    'type': true,\n    'docs': true,\n    'error': true,\n    'json': true,\n    'chain': true // chain method not supported. Note that there is a unit chain too.\n  };\n\n  return math_import;\n}\n\nexports.math = true; // request access to the math namespace as 5th argument of the factory function\nexports.name = 'import';\nexports.factory = factory;\nexports.lazy = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/core/function/import.js\n// module id = 78\n// module chunks = 0","'use strict';\n\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n\n  this.message = 'Wrong number of arguments in function ' + fn +\n      ' (' + count + ' provided, ' +\n      min + ((max != undefined) ? ('-' + max) : '') + ' expected)';\n\n  this.stack = (new Error()).stack;\n}\n\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;\n\nmodule.exports = ArgumentsError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/error/ArgumentsError.js\n// module id = 79\n// module chunks = 0","'use strict';\n\nvar object = require('../../utils/object');\n\nfunction factory (type, config, load, typed, math) {\n  var MATRIX = ['Matrix', 'Array'];                   // valid values for option matrix\n  var NUMBER = ['number', 'BigNumber', 'Fraction'];   // valid values for option number\n\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *     math.config().number;                // outputs 'number'\n   *     math.eval('0.4');                    // outputs number 0.4\n   *     math.config({number: 'Fraction'});\n   *     math.eval('0.4');                    // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      var prev = object.map(config, object.clone);\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX);\n      validateOption(options, 'number', NUMBER);\n\n      // merge options\n      object.deepExtend(config, options);\n\n      var curr = object.map(config, object.clone);\n\n      var changes = object.map(options, object.clone);\n\n      // emit 'config' event\n      math.emit('config', curr, prev, changes);\n\n      return curr;\n    }\n    else {\n      return object.map(config, object.clone);\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX = MATRIX;\n  _config.NUMBER = NUMBER;\n\n  return _config;\n}\n\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\nfunction contains (array, item) {\n  return array.indexOf(item) !== -1;\n}\n\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\nfunction findIndex (array, item) {\n  return array\n      .map(function (i) {\n        return i.toLowerCase();\n      })\n      .indexOf(item.toLowerCase());\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    var index = findIndex(values, options[name]);\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n\n      options[name] = values[index]; // change the option to the right casing\n    }\n    else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n    }\n  }\n}\n\nexports.name = 'config';\nexports.math = true; // request the math namespace as fifth argument\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/core/function/config.js\n// module id = 80\n// module chunks = 0","module.exports = [\n  // types\n  require('./Matrix'),\n  require('./DenseMatrix'),\n  require('./SparseMatrix'),\n  require('./Spa'),\n  require('./FibonacciHeap'),\n  require('./ImmutableDenseMatrix'),\n  require('./MatrixIndex'),\n  require('./Range'),\n\n  // construction functions\n  require('./function/index'),\n  require('./function/matrix'),\n  require('./function/sparse')\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/index.js\n// module id = 81\n// module chunks = 0","/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {number} lower and {number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : (value.gt(0) ? 'Infinity' : '-Infinity');\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (typeof options === 'number') {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n      var lower = 1e-3;\n      var upper = 1e5;\n      if (options && options.exponential) {\n        if (options.exponential.lower !== undefined) {\n          lower = options.exponential.lower;\n        }\n        if (options.exponential.upper !== undefined) {\n          upper = options.exponential.upper;\n        }\n      }\n\n      // adjust the configuration of the BigNumber constructor (yeah, this is quite tricky...)\n      var oldConfig = {\n        toExpNeg: value.constructor.toExpNeg,\n        toExpPos: value.constructor.toExpPos\n      };\n\n      value.constructor.config({\n        toExpNeg: Math.round(Math.log(lower) / Math.LN10),\n        toExpPos: Math.round(Math.log(upper) / Math.LN10)\n      });\n\n      // handle special case zero\n      if (value.isZero()) return '0';\n\n      // determine whether or not to output exponential notation\n      var str;\n      var abs = value.abs();\n      if (abs.gte(lower) && abs.lt(upper)) {\n        // normal number notation\n        str = value.toSignificantDigits(precision).toFixed();\n      }\n      else {\n        // exponential notation\n        str = exports.toExponential(value, precision);\n      }\n\n      // remove trailing zeros after the decimal point\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return (digits !== '.') ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexports.toExponential = function (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  }\n  else {\n    return value.toExponential();\n  }\n};\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function (value, precision) {\n  return value.toFixed(precision || 0);\n  // Note: the (precision || 0) is needed as the toFixed of BigNumber has an\n  // undefined default precision instead of 0.\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/bignumber/formatter.js\n// module id = 82\n// module chunks = 0","'use strict';\n\n/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nfunction IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  }\n  else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  }\n  else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  }\n  else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = (new Error()).stack;\n}\n\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;\n\nmodule.exports = IndexError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/error/IndexError.js\n// module id = 83\n// module chunks = 0","'use strict';\n\n/**\n * Test whether value is a boolean\n * @param {*} value\n * @return {boolean} isBoolean\n */\nexports.isBoolean = function(value) {\n  return typeof value == 'boolean';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/boolean.js\n// module id = 84\n// module chunks = 0","// function utils\n\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {function(args: Array)} [hasher]  A custom hash builder.\n *                                          Is JSON.stringify by default.\n * @return {function}                       Returns the memoized function\n */\nexports.memoize = function(fn, hasher) {\n  return function memoize() {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {};\n    }\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    var hash = hasher ? hasher(args) : JSON.stringify(args);\n    if (!(hash in memoize.cache)) {\n      return memoize.cache[hash] = fn.apply(fn, args);\n    }\n    return memoize.cache[hash];\n  };\n};\n\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexports.maxArgumentCount = function (fn) {\n  return Object.keys(fn.signatures || {})\n      .reduce(function (args, signature) {\n        var count = (signature.match(/,/g) || []).length + 1;\n        return Math.max(args, count);\n      }, -1);\n};\n\n/**\n * Call a typed function with the\n * @param {function} fn   A function or typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexports.callWithRightArgumentCount = function (fn, args, argCount) {\n  return Object.keys(fn.signatures || {})\n      .reduce(function (args, signature) {\n        var count = (signature.match(/,/g) || []).length + 1;\n        return Math.max(args, count);\n      }, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/utils/function.js\n// module id = 85\n// module chunks = 0","'use strict';\n\nvar util = require('../../utils/index');\nvar DimensionError = require('../../error/DimensionError');\n\nvar array = util.array;\nvar object = util.object;\nvar string = util.string;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = number.isNumber;\nvar isInteger = number.isInteger;\nvar isString = string.isString;\n\nvar validateIndex = array.validateIndex;\n\nfunction factory (type, config, load, typed) {\n  var Matrix = load(require('./Matrix')); // force loading Matrix (do not use via type.Matrix)\n  var equalScalar = load(require('../../function/relational/equalScalar'));\n\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n    \n    if (type.isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    }\n    else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    }\n    else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n  \n  var _createFromMatrix = function (matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? object.clone(source._values) : undefined;\n      matrix._index = object.clone(source._index);\n      matrix._ptr = object.clone(source._ptr);\n      matrix._size = object.clone(source._size);\n      matrix._datatype = datatype || source._datatype;\n    }\n    else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  };\n  \n  var _createFromArray = function (matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype;\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    var rows = data.length;\n    var columns = 0;\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    \n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      var j = 0;\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length);\n        // loop rows\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i];\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length)\n              columns = row.length;\n            // check row has column\n            if (j < row.length) {\n              // value\n              var v = row[j];\n              // check value != 0\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v);\n                // index\n                matrix._index.push(i);\n              }\n            }\n          }\n          else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1)\n              columns = 1;\n            // check value != 0 (row is a scalar)\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row);\n              // index\n              matrix._index.push(i);\n            }\n          }\n        }\n        // increment index\n        j++;      \n      }\n      while (j < columns);\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._index.length);\n    // size\n    matrix._size = [rows, columns];\n  };\n  \n  SparseMatrix.prototype = new Matrix();\n\n  /**\n   * Attach type information\n   */\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     var density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // calculate density\n    return rows !== 0 && columns !== 0 ? (this._index.length / (rows * columns)) : 0;\n  };\n  \n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Maytrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) { // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  var _getsubset = function (matrix, idx) {\n    // check idx\n    if (!type.isIndex(idx)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = idx.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    }\n    // validate dimensions\n    var size = idx.size();\n    if (size.length != matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    }\n\n    // vars\n    var i, ii, k, kk;\n    \n    // validate if any of the ranges in the index is out of range\n    var min = idx.min();\n    var max = idx.max();\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    }\n    \n    // matrix arrays\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr;\n        \n    // rows & columns dimensions for result matrix\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1);\n    \n    // workspace & permutation vector\n    var w = [];\n    var pv = [];\n    \n    // loop rows in resulting matrix\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0];  \n      // mark i in workspace\n      w[i] = true;\n    });\n\n    // result matrix arrays\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = [];\n        \n    // loop columns in result matrix\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length);\n      // loop values in column j\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k];\n        // check row is in result matrix\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]);\n          // check we need to process values\n          if (values)\n            values.push(mvalues[k]);\n        }\n      }\n    });\n    // update ptr\n    ptr.push(index.length);\n    \n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    });\n  };\n  \n  var _setsubset = function (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n    \n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n    \n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (type.isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size();\n      // use array representation\n      submatrix = submatrix.toArray();\n    }\n    else {\n      // get submatrix size (array, scalar)\n      sSize = array.size(submatrix);\n    }\n    \n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n      \n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n      \n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n      \n      // offsets\n      var x0 = index.min()[0];\n      var y0 = index.min()[1];      \n      \n      // submatrix rows and columns\n      var m = sSize[0];\n      var n = sSize[1];\n\n      // loop submatrix\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y];\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n    return matrix;\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // check i, j are valid\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i)\n      return this._values[k];\n\n    return 0;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n      \n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, this._datatype);\n    }\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue);\n      // update rows & columns\n      rows = this._size[0];\n      columns = this._size[1];\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows);\n    validateIndex(j, columns);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      }\n      else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    }\n    else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n  \n  var _getValueIndex = function(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0)\n      return bottom;\n    // loop rows [top, bottom[\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i)\n        return r;\n    }\n    // we did not find row\n    return top;\n  };\n\n  var _remove = function (k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1);\n    // update pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]--;\n  };\n\n  var _insert = function (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v);\n    // update row for k\n    index.splice(k, 0, i);\n    // update column pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]++;\n  };\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {    \n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n    \n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue);\n  };\n  \n  var _resize = function (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0;\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n      // convert value to the same datatype\n      value = typed.convert(value, matrix._datatype);\n    }\n    \n    // should we insert the value?\n    var ins = !eq(value, zero);\n\n    // old columns and rows\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n\n    var i, j, k;\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length;\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value);\n            // update matrix._index\n            matrix._index.push(i);\n          }\n        }        \n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length;\n    }\n    else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns);\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    }\n    // update columns\n    c = columns;\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0;\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n;\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n;\n          // pointer\n          var p = 0;\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value);\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i);\n            // increment inserts\n            n++;\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length;\n      }\n    }\n    else if (rows < r) {\n      // deletes\n      var d = 0;\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d;\n        // where matrix._values start for next column\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d;\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k];\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1);\n            // remove item from matrix._index\n            matrix._index.splice(k, 1);\n            // increase deletes\n            d++;\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length;\n    }\n    // update matrix._size\n    matrix._size[0] = rows;\n    matrix._size[1] = columns;\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  SparseMatrix.prototype.reshape = function (size, copy) {\n\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n\n    // m * n must not change\n    if(this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    }\n\n    // matrix to reshape\n    var m = copy ? this.clone() : this;\n\n    // return unchanged if the same shape\n    if(this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m;\n    }\n\n    // Convert to COO format (generate a column index)\n    var colIndex = [];\n    for(var i=0; i<m._ptr.length; i++) {\n      for(var j=0; j<m._ptr[i+1]-m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    }\n\n    // Clone the values array\n    var values = m._values.slice();\n\n    // Clone the row index array\n    var rowIndex = m._index.slice();\n\n    // Transform the (row, column) indices\n    for(var i=0; i<m._index.length; i++) {\n      var r1 = rowIndex[i];\n      var c1 = colIndex[i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[i] = flat % size[1];\n      rowIndex[i] = Math.floor(flat / size[1]);\n    }\n\n    // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n\n    // OR, we could easily just:\n\n    // 1. Remove all values from the matrix\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = size[1] + 1;\n    m._size = size.slice();\n    for(var i=0; i<m._ptr.length; i++) {\n      m._ptr[i] = 0;\n    }\n\n    // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n    for(var h=0; h<values.length; h++) {\n      var i = rowIndex[h];\n      var j = colIndex[h];\n      var v = values[h];\n      var k = _getValueIndex(i, m._ptr[j], m._ptr[j + 1], m._index);\n      _insert(k, i, j, v, m._values, m._index, m._ptr);\n    }\n\n    // The value indices are inserted out of order, but apparently that's... still OK?\n\n    return m;\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? object.clone(this._values) : undefined,\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n  SparseMatrix.prototype.size = function() {\n    return this._size.slice(0); // copy the Array\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // invoke callback\n    var invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    };\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  var _map = function (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n    }\n    \n    // invoke callback\n    var invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y);\n      // check value != 0\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v);\n        // index\n        index.push(x);\n      }\n    };\n    // loop columns\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n      // row pointer\n      var p = minRow;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = matrix._index[k];\n        // check i is in range\n        if (i >= minRow && i <= maxRow) {\n          // zero values\n          if (!skipZeros) {\n           for (var x = p; x < i; x++)\n             invoke(0, x - minRow, j - minColumn);\n          }\n          // value @ k\n          invoke(matrix._values[k], i - minRow, j - minColumn);\n        }\n        // update pointer\n        p = i + 1;\n      }\n      // zero values\n      if (!skipZeros) {\n        for (var y = p; y <= maxRow; y++)\n          invoke(0, y - minRow, j - minColumn);\n      }\n    }\n    // store number of values in ptr\n    ptr.push(values.length);\n    // return sparse matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // column pointer\n      var p = 0;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // check we need to process zeros\n        if (!skipZeros) {\n          // zero values\n          for (var x = p; x < i; x++)\n            callback(0, [x, j], me);\n        }\n        // value @ k\n        callback(this._values[k], [i, j], me);\n        // update pointer\n        p = i + 1;\n      }\n      // check we need to process zeros\n      if (!skipZeros) {\n        // zero values\n        for (var y = p; y < rows; y++)\n          callback(0, [y, j], me);\n      }\n    }\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n  \n  var _toArray = function (values, index, ptr, size, copy) {    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    // result\n    var a = [];\n    // vars\n    var i, j;\n    // initialize array\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n      for (j = 0; j < columns; j++)\n        a[i][j] = 0;\n    }\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k];\n        // set value (use one for pattern matrix)\n        a[i][j] = values ? (copy ? object.clone(values[k]) : values[k]) : 1;\n      }\n    }\n    return a;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // density\n    var density = this.density();\n    // rows & columns\n    var str = 'Sparse Matrix [' + string.format(rows, options) + ' x ' + string.format(columns, options) + '] density: ' + string.format(density, options) + '\\n';\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // append value\n        str += '\\n    (' + string.format(i, options) + ', ' + string.format(j, options) + ') ==> ' + (this._values ? string.format(this._values[k], options) : 'X');\n      }\n    }\n    return str;\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.toString = function () {\n    return string.format(this.toArray());\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n  SparseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // diagonal arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    // initial ptr value\n    ptr[0] = 0;\n    // loop columns\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop x within [k0, k1[\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x];\n        // check row\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]);\n          // store row\n          index[values.length - 1] = i - kSub;\n          // exit loop\n          break;\n        }\n      }\n    }\n    // close ptr\n    ptr.push(values.length);\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    });\n  };\n  \n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n    \n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (type.isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n    \n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n    \n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    \n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // value extraction function\n    var _value;\n      \n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };\n    }\n    else if (type.isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // create arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // loop items\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length);\n      // diagonal index\n      var i = j - kSuper;      \n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i);\n        // check for zero\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub);\n          // add value\n          values.push(v);\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length);\n    // create SparseMatrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  \n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n    \n    // swap rows\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr);\n    // return current instance\n    return this;\n  };\n  \n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1];\n    // loop\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n  \n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // find value index @ x\n      var kx = _getValueIndex(x, k0, k1, index);\n      // find value index @ x\n      var ky = _getValueIndex(y, k0, k1, index);\n      // check both rows exist in matrix\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        }\n        // next column\n        continue;\n      }\n      // check x row exist & no y row\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined;\n        // insert value @ y\n        index.splice(ky, 0, y);\n        if (values)\n          values.splice(ky, 0, vx);        \n        // remove value @ x (adjust array index if needed)\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n        if (values)\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        // next column\n        continue;\n      }\n      // check y row exist & no x row\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined;\n        // insert value @ x\n        index.splice(kx, 0, x);\n        if (values)\n          values.splice(kx, 0, vy);\n        // remove value @ y (adjust array index if needed)\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n        if (values)\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n      }\n    }\n  };\n\n  // register this type in the base class Matrix\n  type.Matrix._storage.sparse = SparseMatrix;\n\n  return SparseMatrix;\n}\n\nexports.name = 'SparseMatrix';\nexports.path = 'type';\nexports.factory = factory;\nexports.lazy = false;  // no lazy loading, as we alter type.Matrix._storage\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/SparseMatrix.js\n// module id = 86\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load) {\n  \n  var add = load(require('../../function/arithmetic/add'));\n  var equalScalar = load(require('../../function/relational/equalScalar'));\n  \n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array \n   * of the vector elements and an ordered list of non-zero elements.\n   */\n  function Spa() {\n    if (!(this instanceof Spa))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    \n    // allocate vector, TODO use typed arrays\n    this._values = [];\n    this._heap = new type.FibonacciHeap();\n  }\n\n  /**\n   * Attach type information\n   */\n  Spa.prototype.type = 'Spa';\n  Spa.prototype.isSpa = true;\n\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      var node = this._heap.insert(i, v);\n      // set the value @ i\n      this._values[i] = node;\n    }\n    else {\n      // update the value @ i\n      this._values[i].value = v;\n    }\n  };\n  \n  Spa.prototype.get = function (i) {\n    var node = this._values[i];\n    if (node)\n      return node.value;\n    return 0;\n  };\n  \n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    var node = this._values[i];\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v);\n      // initialize value\n      this._values[i] = node;\n    }\n    else {\n      // accumulate value\n      node.value = add(node.value, v);\n    }\n  };\n  \n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    var heap = this._heap;\n    var values = this._values;\n    // nodes\n    var nodes = [];\n    // node with minimum key, save it\n    var node = heap.extractMinimum();\n    if (node)\n      nodes.push(node);\n    // extract nodes from heap (ordered)\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this);\n        }\n      }\n      // extract next node, save it\n      node = heap.extractMinimum();\n      if (node)\n        nodes.push(node);\n    }\n    // reinsert all nodes in heap\n    for (var i = 0; i < nodes.length; i++) {\n      // current node\n      var n = nodes[i];\n      // insert node in heap\n      node = heap.insert(n.key, n.value);\n      // update values\n      values[node.key] = node;\n    }\n  };\n  \n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    var nodei = this._values[i];\n    var nodej = this._values[j];\n    // check we need to insert indeces\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value);\n      // remove from heap\n      this._heap.remove(nodej);\n      // set values\n      this._values[i] = nodei;\n      this._values[j] = undefined;\n    }\n    else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value);\n      // remove from heap\n      this._heap.remove(nodei);\n      // set values\n      this._values[j] = nodej;\n      this._values[i] = undefined;\n    }\n    else if (nodei && nodej) {\n      // swap values\n      var v = nodei.value;\n      nodei.value = nodej.value;\n      nodej.value = v;\n    }\n  };\n  \n  return Spa;\n}\n\nexports.name = 'Spa';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/Spa.js\n// module id = 87\n// module chunks = 0","'use strict';\n\nvar extend = require('../../utils/object').extend;\n\nfunction factory (type, config, load, typed) {\n\n  var matrix = load(require('../../type/matrix/function/matrix'));\n  var addScalar = load(require('./addScalar'));\n  var latex = require('../../utils/latex.js');\n  \n  var algorithm01 = load(require('../../type/matrix/utils/algorithm01'));\n  var algorithm04 = load(require('../../type/matrix/utils/algorithm04'));\n  var algorithm10 = load(require('../../type/matrix/utils/algorithm10'));\n  var algorithm13 = load(require('../../type/matrix/utils/algorithm13'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3);               // returns number 5\n   *    math.add(2, 3, 4);            // returns number 9\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(-4, 1);\n   *    math.add(a, b);               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4);       // returns Array [5, 6, 7]\n   *\n   *    var c = math.unit('5 cm');\n   *    var d = math.unit('2.1 mm');\n   *    math.add(c, d);               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\");         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n  var add = typed('add', extend({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n      \n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm04(x, y, addScalar);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm01(y, x, addScalar, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm01(x, y, addScalar, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, addScalar);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n    \n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), matrix(y)).valueOf();\n    },\n    \n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), y);\n    },\n    \n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return add(x, matrix(y));\n    },\n    \n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm10(x, y, addScalar, false);\n          break;\n        default:\n          c = algorithm14(x, y, addScalar, false);\n          break;\n      }\n      return c;\n    },\n    \n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm10(y, x, addScalar, true);\n          break;\n        default:\n          c = algorithm14(y, x, addScalar, true);\n          break;\n      }\n      return c;\n    },\n    \n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf();\n    },\n\n    'any, any': addScalar,\n\n    'any, any, ...any': function (x, y, rest) {\n      var result = add(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = add(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, addScalar.signatures));\n\n  add.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['add'] + '${args[1]}\\\\right)'\n  };\n  \n  return add;\n}\n\nexports.name = 'add';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/function/arithmetic/add.js\n// module id = 88\n// module chunks = 0","'use strict';\n\nfunction factory(type, config, load, typed) {\n\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix), and does\n   * not validate the number of of inputs.\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}                      Sum of `x` and `y`\n   * @private\n   */\n  var add = typed('add', {\n\n    'number, number': function (x, y) {\n      return x + y;\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.add(y);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.plus(y);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.add(y);\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (x.value == null) throw new Error('Parameter x contains a unit with undefined value');\n      if (y.value == null) throw new Error('Parameter y contains a unit with undefined value');\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n\n      var res = x.clone();\n      res.value = add(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    }\n  });\n\n  return add;\n}\n\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/function/arithmetic/addScalar.js\n// module id = 89\n// module chunks = 0","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij). \n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  var algorithm01 = function (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype;\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues)\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // process data types\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined;\n    // callback function\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback;\n\n    // vars\n    var i, j;\n    \n    // result (DenseMatrix)\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++)\n      cdata[i] = [];      \n    \n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        // mark i as updated\n        w[i] = mark;\n      }\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        }\n        else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n  \n  return algorithm01;\n}\n\nexports.name = 'algorithm01';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm01.js\n// module id = 90\n// module chunks = 0","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var equalScalar = load(require('../../../function/relational/equalScalar'));\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij). \n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  var algorithm04 = function (a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype;\n    // sparse matrix arrays\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = [];\n    // matrix\n    var c = new SparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspace\n    var xa = avalues && bvalues ? [] : undefined;\n    var xb = avalues && bvalues ? [] : undefined;\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // vars \n    var i, j, k, k0, k1;\n    \n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length;\n      // columns mark\n      var mark = j + 1;\n      // loop A(:,j)\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k];\n        // update c\n        cindex.push(i);\n        // update workspace\n        wa[i] = mark;\n        // check we need to process values\n        if (xa)\n          xa[i] = avalues[k];\n      }\n      // loop B(:,j)\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // check row exists in A\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            var v = cf(xa[i], bvalues[k]);\n            // check for zero\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v;              \n            }\n            else {\n              // remove mark (index will be removed later)\n              wa[i] = null;\n            }\n          }\n        }\n        else {\n          // update c\n          cindex.push(i);\n          // update workspace\n          wb[i] = mark;\n          // check we need to process values\n          if (xb)\n            xb[i] = bvalues[k];\n        }\n      }\n      // check we need to process values (non pattern matrix)\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j];\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k];\n          // check workspace has value @ i\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i];\n            // increment pointer\n            k++;\n          }\n          else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i];\n            // increment pointer\n            k++;\n          }\n          else {\n            // remove index @ k\n            cindex.splice(k, 1);\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n  \n  return algorithm04;\n}\n\nexports.name = 'algorithm04';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm04.js\n// module id = 91\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm10 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cdata = [];\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        }\n        else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c;\n  };\n\n  return algorithm10;\n}\n\nexports.name = 'algorithm10';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/utils/algorithm10.js\n// module id = 92\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load, typed) {\n  \n  var smaller = load(require('../../function/relational/smaller'));\n  var larger = load(require('../../function/relational/larger'));\n  \n  var oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);\n  \n  /**\n   * Fibonacci Heap implementation, used interally for Matrix math.\n   * @class FibonacciHeap\n   * @constructor FibonacciHeap\n   */\n  function FibonacciHeap() {\n    if (!(this instanceof FibonacciHeap))\n      throw new SyntaxError('Constructor must be called with the new operator');\n\n    // initialize fields\n    this._minimum = null;\n    this._size = 0;\n  }\n\n  /**\n   * Attach type information\n   */\n  FibonacciHeap.prototype.type = 'FibonacciHeap';\n  FibonacciHeap.prototype.isFibonacciHeap = true;\n\n  /**\n   * Inserts a new data element into the heap. No heap consolidation is\n   * performed at this time, the new node is simply inserted into the root\n   * list of this heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.insert = function (key, value) {\n    // create node\n    var node = {\n      key: key,\n      value: value,\n      degree: 0\n    };\n    // check we have a node in the minimum\n    if (this._minimum) {\n      // minimum node\n      var minimum = this._minimum;\n      // update left & right of node\n      node.left = minimum;\n      node.right = minimum.right;\n      minimum.right = node;\n      node.right.left = node;\n      // update minimum node in heap if needed\n      if (smaller(key, minimum.key)) {\n        // node has a smaller key, use it as minimum\n        this._minimum = node;\n      }\n    }\n    else {\n      // set left & right\n      node.left = node;\n      node.right = node;\n      // this is the first node\n      this._minimum = node;\n    }\n    // increment number of nodes in heap\n    this._size++;\n    // return node\n    return node;\n  };\n\n  /**\n   * Returns the number of nodes in heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.size = function () {\n    return this._size;\n  };\n\n  /**\n   * Removes all elements from this heap.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.clear = function () {\n    this._minimum = null;\n    this._size = 0;\n  };\n\n  /**\n   * Returns true if the heap is empty, otherwise false.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.isEmpty = function () {\n    return this._size === 0;\n  };\n  \n  /**\n   * Extracts the node with minimum key from heap. Amortized running \n   * time: O(log n).\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.extractMinimum = function () {\n    // node to remove\n    var node = this._minimum;\n    // check we have a minimum\n    if (node === null)\n      return node;\n    // current minimum\n    var minimum = this._minimum;\n    // get number of children\n    var numberOfChildren = node.degree;\n    // pointer to the first child\n    var x = node.child;\n    // for each child of node do...\n    while (numberOfChildren > 0) {\n      // store node in right side\n      var tempRight = x.right;\n      // remove x from child list\n      x.left.right = x.right;\n      x.right.left = x.left;\n      // add x to root list of heap\n      x.left = minimum;\n      x.right = minimum.right;\n      minimum.right = x;\n      x.right.left = x;\n      // set Parent[x] to null\n      x.parent = null;\n      x = tempRight;\n      numberOfChildren--;\n    }\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left;\n    // update minimum\n    if (node == node.right) {\n      // empty\n      minimum = null;\n    }\n    else {\n      // update minimum\n      minimum = node.right;\n      // we need to update the pointer to the root with minimum key\n      minimum = _findMinimumNode(minimum, this._size);\n    }\n    // decrement size of heap\n    this._size--;\n    // update minimum\n    this._minimum = minimum;\n    // return node\n    return node;\n  };\n  \n  /**\n   * Removes a node from the heap given the reference to the node. The trees\n   * in the heap will be consolidated, if necessary. This operation may fail\n   * to remove the correct element if there are nodes with key value -Infinity.\n   * Running time: O(log n) amortized.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.remove = function (node) {\n    // decrease key value\n    this._minimum = _decreaseKey(this._minimum, node, -1);\n    // remove the smallest\n    this.extractMinimum();\n  };\n  \n  /**\n   * Decreases the key value for a heap node, given the new value to take on.\n   * The structure of the heap may be changed and will not be consolidated. \n   * Running time: O(1) amortized.\n   * @memberof FibonacciHeap\n   */\n  var _decreaseKey = function (minimum, node, key) {\n    // set node key\n    node.key = key;\n    // get parent node\n    var parent = node.parent;\n    if (parent && smaller(node.key, parent.key)) {\n      // remove node from parent\n      _cut(minimum, node, parent);\n      // remove all nodes from parent to the root parent\n      _cascadingCut(minimum, parent);\n    }\n    // update minimum node if needed\n    if (smaller(node.key, minimum.key))\n      minimum = node;\n    // return minimum\n    return minimum;\n  };\n  \n  /**\n   * The reverse of the link operation: removes node from the child list of parent.\n   * This method assumes that min is non-null. Running time: O(1).\n   * @memberof FibonacciHeap\n   */\n  var _cut = function (minimum, node, parent) {\n    // remove node from parent children and decrement Degree[parent]\n    node.left.right = node.right;\n    node.right.left = node.left;\n    parent.degree--;\n    // reset y.child if necessary\n    if (parent.child == node)\n      parent.child = node.right;\n    // remove child if degree is 0\n    if (parent.degree === 0)\n      parent.child = null;\n    // add node to root list of heap\n    node.left = minimum;\n    node.right = minimum.right;\n    minimum.right = node;\n    node.right.left = node;\n    // set parent[node] to null\n    node.parent = null;\n    // set mark[node] to false\n    node.mark = false;\n  };\n  \n  /**\n   * Performs a cascading cut operation. This cuts node from its parent and then\n   * does the same for its parent, and so on up the tree.\n   * Running time: O(log n); O(1) excluding the recursion.\n   * @memberof FibonacciHeap\n   */\n  var _cascadingCut= function (minimum, node) {\n    // store parent node\n    var parent = node.parent;\n    // if there's a parent...\n    if (!parent)\n      return;\n    // if node is unmarked, set it marked\n    if (!node.mark) {\n      node.mark = true;\n    }\n    else {\n      // it's marked, cut it from parent\n      _cut(minimum, node, parent);\n      // cut its parent as well\n      _cascadingCut(parent);\n    }\n  };\n  \n  /**\n   * Make the first node a child of the second one. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  var _linkNodes = function (node, parent) {\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left;\n    // make node a Child of parent\n    node.parent = parent;\n    if (!parent.child) {\n      parent.child = node;\n      node.right = node;\n      node.left = node;\n    }\n    else {\n      node.left = parent.child;\n      node.right = parent.child.right;\n      parent.child.right = node;\n      node.right.left = node;\n    }\n    // increase degree[parent]\n    parent.degree++;\n    // set mark[node] false\n    node.mark = false;\n  };\n  \n  var _findMinimumNode = function (minimum, size) {\n    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree\n    var arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1;\n    // create list with initial capacity\n    var array = new Array(arraySize);\n    // find the number of root nodes.\n    var numRoots = 0;\n    var x = minimum;\n    if (x) {\n      numRoots++;\n      x = x.right;\n      while (x !== minimum) {\n        numRoots++;\n        x = x.right;\n      }\n    }\n    // vars\n    var y;\n    // For each node in root list do...\n    while (numRoots > 0) {\n      // access this node's degree..\n      var d = x.degree;\n      // get next node\n      var next = x.right;\n      // check if there is a node already in array with the same degree\n      while (true) {\n        // get node with the same degree is any\n        y = array[d];\n        if (!y)\n          break;\n        // make one node with the same degree a child of the other, do this based on the key value.\n        if (larger(x.key, y.key)) {\n          var temp = y;\n          y = x;\n          x = temp;\n        }\n        // make y a child of x\n        _linkNodes(y, x);\n        // we have handled this degree, go to next one.\n        array[d] = null;\n        d++;\n      }\n      // save this node for later when we might encounter another of the same degree.\n      array[d] = x;\n      // move forward through list.\n      x = next;\n      numRoots--;\n    }\n    // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].\n    minimum = null;\n    // loop nodes in array\n    for (var i = 0; i < arraySize; i++) {\n      // get current node\n      y = array[i];\n      if (!y)\n        continue;\n      // check if we have a linked list\n      if (minimum) {\n        // First remove node from root list.\n        y.left.right = y.right;\n        y.right.left = y.left;\n        // now add to root list, again.\n        y.left = minimum;\n        y.right = minimum.right;\n        minimum.right = y;\n        y.right.left = y;\n        // check if this is a new min.\n        if (smaller(y.key, minimum.key))\n          minimum = y;\n      }\n      else\n        minimum = y;\n    }\n    return minimum;\n  };\n  \n  return FibonacciHeap;\n}\n\nexports.name = 'FibonacciHeap';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/FibonacciHeap.js\n// module id = 93\n// module chunks = 0","'use strict';\n\nvar nearlyEqual = require('../../utils/number').nearlyEqual;\nvar bigNearlyEqual = require('../../utils/bignumber/nearlyEqual');\n\nfunction factory (type, config, load, typed) {\n  \n  var matrix = load(require('../../type/matrix/function/matrix'));\n\n  var algorithm03 = load(require('../../type/matrix/utils/algorithm03'));\n  var algorithm07 = load(require('../../type/matrix/utils/algorithm07'));\n  var algorithm12 = load(require('../../type/matrix/utils/algorithm12'));\n  var algorithm13 = load(require('../../type/matrix/utils/algorithm13'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n\n  var latex = require('../../utils/latex');\n\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3);             // returns false\n   *    math.larger(5, 2 + 2);         // returns true\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.larger(a, b);             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n  var larger = typed('larger', {\n\n    'boolean, boolean': function (x, y) {\n      return x > y;\n    },\n\n    'number, number': function (x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.gt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === 1;\n    },\n\n    'Complex, Complex': function () {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return larger(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x > y;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n\n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm07(x, y, larger);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm03(y, x, larger, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm03(x, y, larger, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, larger);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), matrix(y)).valueOf();\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return larger(x, matrix(y));\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm12(x, y, larger, false);\n          break;\n        default:\n          c = algorithm14(x, y, larger, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm12(y, x, larger, true);\n          break;\n        default:\n          c = algorithm14(y, x, larger, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, larger, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, larger, true).valueOf();\n    }\n  });\n\n  larger.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['larger'] + '${args[1]}\\\\right)'\n  };\n\n  return larger;\n}\n\nexports.name = 'larger';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/function/relational/larger.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nvar util = require('../../utils/index');\n\nvar string = util.string;\nvar object = util.object;\n\nvar isArray = Array.isArray;\nvar isString = string.isString;\n\nfunction factory (type, config, load) {\n\n  var DenseMatrix = load(require('./DenseMatrix'));\n\n  var smaller = load(require('../../function/relational/smaller'));\n\n  function ImmutableDenseMatrix(data, datatype) {\n    if (!(this instanceof ImmutableDenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n\n    if (type.isMatrix(data) || isArray(data)) {\n      // use DenseMatrix implementation\n      var matrix = new DenseMatrix(data, datatype);\n      // internal structures\n      this._data = matrix._data;\n      this._size = matrix._size;\n      this._datatype = matrix._datatype;\n      this._min = null;\n      this._max = null;\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = data.datatype;\n      this._min = typeof data.min !== 'undefined' ? data.min : null;\n      this._max = typeof data.max !== 'undefined' ? data.max : null;\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n      this._min = null;\n      this._max = null;\n    }\n  }\n\n  ImmutableDenseMatrix.prototype = new DenseMatrix();\n\n  /**\n   * Attach type information\n   */\n  ImmutableDenseMatrix.prototype.type = 'ImmutableDenseMatrix';\n  ImmutableDenseMatrix.prototype.isImmutableDenseMatrix = true;\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | ImmutableDenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  ImmutableDenseMatrix.prototype.subset = function (index) {\n    switch (arguments.length) {\n      case 1:\n        // use base implementation\n        var m = DenseMatrix.prototype.subset.call(this, index);\n        // check result is a matrix\n        if (type.isMatrix(m)) {\n          // return immutable matrix\n          return new ImmutableDenseMatrix({\n            data: m._data,\n            size: m._size,\n            datatype: m._datatype\n          });\n        }\n        return m;\n        \n        // intentional fall through\n      case 2:\n      case 3:\n        throw new Error('Cannot invoke set subset on an Immutable Matrix instance');\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {ImmutableDenseMatrix} self\n   */\n  ImmutableDenseMatrix.prototype.set = function () {\n    throw new Error('Cannot invoke set on an Immutable Matrix instance');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  ImmutableDenseMatrix.prototype.resize = function () {\n    throw new Error('Cannot invoke resize on an Immutable Matrix instance');\n  };\n\n  /**\n   * Disallows reshaping in favor of immutability.\n   *\n   * @throws {Error} Operation not allowed\n   */\n  ImmutableDenseMatrix.prototype.reshape = function () {\n    throw new Error('Cannot invoke reshape on an Immutable Matrix instance');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {ImmutableDenseMatrix} clone\n   */\n  ImmutableDenseMatrix.prototype.clone = function () {\n    var m = new ImmutableDenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n\n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n  ImmutableDenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'ImmutableDenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ImmutableDenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {ImmutableDenseMatrix}\n   */\n  ImmutableDenseMatrix.fromJSON = function (json) {\n    return new ImmutableDenseMatrix(json);\n  };\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @param {Number} i       Matrix row index 1\n   * @param {Number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  ImmutableDenseMatrix.prototype.swapRows = function () {\n    throw new Error('Cannot invoke swapRows on an Immutable Matrix instance');\n  };\n\n  /**\n   * Calculate the minimum value in the set\n   * @return {Number | undefined} min\n   */\n  ImmutableDenseMatrix.prototype.min = function () {\n    // check min has been calculated before\n    if (this._min === null) {\n      // minimum\n      var m = null;\n      // compute min\n      this.forEach(function (v) {\n        if (m === null || smaller(v, m))\n          m = v;\n      });\n      this._min = m !== null ? m : undefined;\n    }\n    return this._min;\n  };\n\n  /**\n   * Calculate the maximum value in the set\n   * @return {Number | undefined} max\n   */\n  ImmutableDenseMatrix.prototype.max = function () {\n    // check max has been calculated before\n    if (this._max === null) {\n      // maximum\n      var m = null;\n      // compute max\n      this.forEach(function (v) {\n        if (m === null || smaller(m, v))\n          m = v;\n      });\n      this._max = m !== null ? m : undefined;\n    }\n    return this._max;\n  };\n\n  // exports\n  return ImmutableDenseMatrix;\n}\n\nexports.name = 'ImmutableDenseMatrix';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/ImmutableDenseMatrix.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nvar clone = require('../../utils/object').clone;\nvar isInteger = require('../../utils/number').isInteger;\n\nfunction factory (type) {\n  \n  /**\n   * Create an index. An Index can store ranges and sets for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Usage:\n   *     var index = new Index(range1, range2, matrix1, array1, ...);\n   *\n   * Where each parameter can be any of:\n   *     A number\n   *     A string (containing a name of an object property)\n   *     An instance of Range\n   *     An Array with the Set values\n   *     A Matrix with the Set values\n   *\n   * The parameters start, end, and step must be integer numbers.\n   *\n   * @class Index\n   * @Constructor Index\n   * @param {...*} ranges\n   */\n  function Index(ranges) {\n    if (!(this instanceof Index)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this._dimensions = [];\n    this._isScalar = true;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i];\n\n      if (type.isRange(arg)) {\n        this._dimensions.push(arg);\n        this._isScalar = false;\n      }\n      else if (Array.isArray(arg) || type.isMatrix(arg)) {\n        // create matrix\n        var m = _createImmutableMatrix(arg.valueOf());\n        this._dimensions.push(m);\n        // size\n        var size = m.size();\n        // scalar\n        if (size.length !== 1 || size[0] !== 1) {\n          this._isScalar = false;\n        }\n      }\n      else if (typeof arg === 'number') {\n        this._dimensions.push(_createImmutableMatrix([arg]));\n      }\n      else if (typeof arg === 'string') {\n        // object property (arguments.count should be 1)\n        this._dimensions.push(arg);\n      }\n      // TODO: implement support for wildcard '*'\n      else {\n        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');\n      }\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Index.prototype.type = 'Index';\n  Index.prototype.isIndex = true;\n\n  function _createImmutableMatrix(arg) {\n    // loop array elements\n    for (var i = 0, l = arg.length; i < l; i++) {\n      if (typeof arg[i] !== 'number' || !isInteger(arg[i])) {\n        throw new TypeError('Index parameters must be positive integer numbers');\n      }\n    }\n    // create matrix\n    return new type.ImmutableDenseMatrix(arg);\n  }\n\n  /**\n   * Create a clone of the index\n   * @memberof Index\n   * @return {Index} clone\n   */\n  Index.prototype.clone = function () {\n    var index = new Index();\n    index._dimensions = clone(this._dimensions);\n    index._isScalar = this._isScalar;\n    return index;\n  };\n\n  /**\n   * Create an index from an array with ranges/numbers\n   * @memberof Index\n   * @param {Array.<Array | number>} ranges\n   * @return {Index} index\n   * @private\n   */\n  Index.create = function (ranges) {\n    var index = new Index();\n    Index.apply(index, ranges);\n    return index;\n  };\n\n  /**\n   * Retrieve the size of the index, the number of elements for each dimension.\n   * @memberof Index\n   * @returns {number[]} size\n   */\n  Index.prototype.size = function () {\n    var size = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var d = this._dimensions[i];\n      size[i] = (typeof d === 'string') ? 1 : d.size()[0];\n    }\n\n    return size;\n  };\n\n  /**\n   * Get the maximum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} max\n   */\n  Index.prototype.max = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = (typeof range === 'string') ? range : range.max();\n    }\n\n    return values;\n  };\n\n  /**\n   * Get the minimum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} min\n   */\n  Index.prototype.min = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = (typeof range === 'string') ? range : range.min();\n    }\n\n    return values;\n  };\n\n  /**\n   * Loop over each of the ranges of the index\n   * @memberof Index\n   * @param {Function} callback   Called for each range with a Range as first\n   *                              argument, the dimension as second, and the\n   *                              index object as third.\n   */\n  Index.prototype.forEach = function (callback) {\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      callback(this._dimensions[i], i, this);\n    }\n  };\n\n  /**\n   * Retrieve the dimension for the given index\n   * @memberof Index\n   * @param {Number} dim                  Number of the dimension\n   * @returns {Range | null} range\n   */\n  Index.prototype.dimension = function (dim) {\n    return this._dimensions[dim] || null;\n  };\n\n  /**\n   * Test whether this index contains an object property\n   * @returns {boolean} Returns true if the index is an object property\n   */\n  Index.prototype.isObjectProperty = function () {\n    return this._dimensions.length === 1 && typeof this._dimensions[0] === 'string';\n  };\n\n  /**\n   * Returns the object property name when the Index holds a single object property,\n   * else returns null\n   * @returns {string | null}\n   */\n  Index.prototype.getObjectProperty = function () {\n    return this.isObjectProperty() ? this._dimensions[0] : null;\n  };\n\n  /**\n   * Test whether this index contains only a single value.\n   *\n   * This is the case when the index is created with only scalar values as ranges,\n   * not for ranges resolving into a single value.\n   * @memberof Index\n   * @return {boolean} isScalar\n   */\n  Index.prototype.isScalar = function () {\n    return this._isScalar;\n  };\n\n  /**\n   * Expand the Index into an array.\n   * For example new Index([0,3], [2,7]) returns [[0,1,2], [2,3,4,5,6]]\n   * @memberof Index\n   * @returns {Array} array\n   */\n  Index.prototype.toArray = function () {\n    var array = [];\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      array.push((typeof dimension === 'string') ? dimension : dimension.toArray());\n    }\n    return array;\n  };\n\n  /**\n   * Get the primitive value of the Index, a two dimensional array.\n   * Equivalent to Index.toArray().\n   * @memberof Index\n   * @returns {Array} array\n   */\n  Index.prototype.valueOf = Index.prototype.toArray;\n\n  /**\n   * Get the string representation of the index, for example '[2:6]' or '[0:2:10, 4:7, [1,2,3]]'\n   * @memberof Index\n   * @returns {String} str\n   */\n  Index.prototype.toString = function () {\n    var strings = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      if (typeof dimension === 'string') {\n        strings.push(JSON.stringify(dimension));\n      }\n      else {\n        strings.push(dimension.toString());\n      }\n    }\n\n    return '[' + strings.join(', ') + ']';\n  };\n\n  /**\n   * Get a JSON representation of the Index\n   * @memberof Index\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Index\", \"ranges\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   */\n  Index.prototype.toJSON = function () {\n    return {\n      mathjs: 'Index',\n      dimensions: this._dimensions\n    };\n  };\n\n  /**\n   * Instantiate an Index from a JSON object\n   * @memberof Index\n   * @param {Object} json A JSON object structured as:\n   *                     `{\"mathjs\": \"Index\", \"dimensions\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   * @return {Index}\n   */\n  Index.fromJSON = function (json) {\n    return Index.create(json.dimensions);\n  };\n\n  return Index;\n}\n\nexports.name = 'Index';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/MatrixIndex.js\n// module id = 96\n// module chunks = 0","'use strict';\n\nvar number = require('../../utils/number');\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a range. A range has a start, step, and end, and contains functions\n   * to iterate over the range.\n   *\n   * A range can be constructed as:\n   *     var range = new Range(start, end);\n   *     var range = new Range(start, end, step);\n   *\n   * To get the result of the range:\n   *     range.forEach(function (x) {\n   *         console.log(x);\n   *     });\n   *     range.map(function (x) {\n   *         return math.sin(x);\n   *     });\n   *     range.toArray();\n   *\n   * Example usage:\n   *     var c = new Range(2, 6);         // 2:1:5\n   *     c.toArray();                     // [2, 3, 4, 5]\n   *     var d = new Range(2, -3, -1);    // 2:-1:-2\n   *     d.toArray();                     // [2, 1, 0, -1, -2]\n   *\n   * @class Range\n   * @constructor Range\n   * @param {number} start  included lower bound\n   * @param {number} end    excluded upper bound\n   * @param {number} [step] step size, default value is 1\n   */\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (start != null) {\n      if (type.isBigNumber(start))\n        start = start.toNumber();\n      else if (typeof start !== 'number')\n        throw new TypeError('Parameter start must be a number');\n    }\n    if (end != null) {\n      if (type.isBigNumber(end))\n        end = end.toNumber();\n      else if (typeof end !== 'number')\n        throw new TypeError('Parameter end must be a number');\n    }\n    if (step != null) {\n      if (type.isBigNumber(step))\n        step = step.toNumber();\n      else if (typeof step !== 'number')\n        throw new TypeError('Parameter step must be a number');\n    }\n\n    this.start = (start != null) ? parseFloat(start) : 0;\n    this.end   = (end != null)   ? parseFloat(end)   : 0;\n    this.step  = (step != null)  ? parseFloat(step)  : 1;\n  }\n\n  /**\n   * Attach type information\n   */\n  Range.prototype.type = 'Range';\n  Range.prototype.isRange = true;\n\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @memberof Range\n   * @param {string} str\n   * @return {Range | null} range\n   */\n  Range.parse = function (str) {\n    if (typeof str !== 'string') {\n      return null;\n    }\n\n    var args = str.split(':');\n    var nums = args.map(function (arg) {\n      return parseFloat(arg);\n    });\n\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return new Range(nums[0], nums[1]);\n      case 3:\n        return new Range(nums[0], nums[2], nums[1]);\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Create a clone of the range\n   * @return {Range} clone\n   */\n  Range.prototype.clone = function () {\n    return new Range(this.start, this.end, this.step);\n  };\n\n  /**\n   * Retrieve the size of the range.\n   * Returns an array containing one number, the number of elements in the range.\n   * @memberof Range\n   * @returns {number[]} size\n   */\n  Range.prototype.size = function () {\n    var len = 0,\n        start = this.start,\n        step = this.step,\n        end = this.end,\n        diff = end - start;\n\n    if (number.sign(step) == number.sign(diff)) {\n      len = Math.ceil((diff) / step);\n    }\n    else if (diff == 0) {\n      len = 0;\n    }\n\n    if (isNaN(len)) {\n      len = 0;\n    }\n    return [len];\n  };\n\n  /**\n   * Calculate the minimum value in the range\n   * @memberof Range\n   * @return {number | undefined} min\n   */\n  Range.prototype.min = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start;\n      }\n      else {\n        // negative step\n        return this.start + (size - 1) * this.step;\n      }\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Calculate the maximum value in the range\n   * @memberof Range\n   * @return {number | undefined} max\n   */\n  Range.prototype.max = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start + (size - 1) * this.step;\n      }\n      else {\n        // negative step\n        return this.start;\n      }\n    }\n    else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Execute a callback function for each value in the range.\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Range being traversed.\n   */\n  Range.prototype.forEach = function (callback) {\n    var x = this.start;\n    var step = this.step;\n    var end = this.end;\n    var i = 0;\n\n    if (step > 0) {\n      while (x < end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n    else if (step < 0) {\n      while (x > end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n  };\n\n  /**\n   * Execute a callback function for each value in the Range, and return the\n   * results as an array\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @returns {Array} array\n   */\n  Range.prototype.map = function (callback) {\n    var array = [];\n    this.forEach(function (value, index, obj) {\n      array[index[0]] = callback(value, index, obj);\n    });\n    return array;\n  };\n\n  /**\n   * Create an Array with a copy of the Ranges data\n   * @memberof Range\n   * @returns {Array} array\n   */\n  Range.prototype.toArray = function () {\n    var array = [];\n    this.forEach(function (value, index) {\n      array[index[0]] = value;\n    });\n    return array;\n  };\n\n  /**\n   * Get the primitive value of the Range, a one dimensional array\n   * @memberof Range\n   * @returns {Array} array\n   */\n  Range.prototype.valueOf = function () {\n    // TODO: implement a caching mechanism for range.valueOf()\n    return this.toArray();\n  };\n\n  /**\n   * Get a string representation of the range, with optional formatting options.\n   * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n   * @memberof Range\n   * @param {Object | number | function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Range.prototype.format = function (options) {\n    var str = number.format(this.start, options);\n\n    if (this.step != 1) {\n      str += ':' + number.format(this.step, options);\n    }\n    str += ':' + number.format(this.end, options);\n    return str;\n  };\n\n  /**\n   * Get a string representation of the range.\n   * @memberof Range\n   * @returns {string}\n   */\n  Range.prototype.toString = function () {\n    return this.format();\n  };\n\n  /**\n   * Get a JSON representation of the range\n   * @memberof Range\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   */\n  Range.prototype.toJSON = function () {\n    return {\n      mathjs: 'Range',\n      start: this.start,\n      end: this.end,\n      step: this.step\n    };\n  };\n\n  /**\n   * Instantiate a Range from a JSON object\n   * @memberof Range\n   * @param {Object} json A JSON object structured as:\n   *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   * @return {Range}\n   */\n  Range.fromJSON = function (json) {\n    return new Range(json.start, json.end, json.step);\n  };\n\n  return Range;\n}\n\nexports.name = 'Range';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/Range.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create an index. An Index can store ranges having start, step, and end\n   * for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Syntax:\n   *\n   *     math.index(range1, range2, ...)\n   *\n   * Where each range can be any of:\n   *\n   * - A number\n   * - A string for getting/setting an object property\n   * - An instance of `Range`\n   * - A one-dimensional Array or a Matrix with numbers\n   *\n   * Indexes must be zero-based, integer numbers.\n   *\n   * Examples:\n   *\n   *    var math = math.js\n   *\n   *    var b = [1, 2, 3, 4, 5];\n   *    math.subset(b, math.index([1, 2, 3]));     // returns [2, 3, 4]\n   *\n   *    var a = math.matrix([[1, 2], [3, 4]]);\n   *    a.subset(math.index(0, 1));             // returns 2\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, matrix, number, string, unit\n   *\n   * @param {...*} ranges   Zero or more ranges or numbers.\n   * @return {Index}        Returns the created index\n   */\n  return typed('index', {\n    '...number | string | BigNumber | Range | Array | Matrix': function (args) {\n      var ranges = args.map(function (arg) {\n        if (type.isBigNumber(arg)) {\n          return arg.toNumber(); // convert BigNumber to Number\n        }\n        else if (Array.isArray(arg) || type.isMatrix(arg)) {\n          return arg.map(function (elem) {\n            // convert BigNumber to Number\n            return type.isBigNumber(elem) ? elem.toNumber() : elem;\n          });\n        }\n        else {\n          return arg;\n        }\n      });\n\n      var res = new type.Index();\n      type.Index.apply(res, ranges);\n      return res;\n    }\n  });\n}\n\nexports.name = 'index';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/function/index.js\n// module id = 98\n// module chunks = 0","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Create a Sparse Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   *\n   * Syntax:\n   *\n   *    math.sparse()               // creates an empty sparse matrix.\n   *    math.sparse(data)           // creates a sparse matrix with initial data.\n   *    math.sparse(data, 'number') // creates a sparse matrix with initial data, number datatype.\n   *\n   * Examples:\n   *\n   *    var m = math.sparse([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, matrix\n   *\n   * @param {Array | Matrix} [data]    A two dimensional array\n   *\n   * @return {Matrix} The created matrix\n   */\n  var sparse = typed('sparse', {\n    '': function () {\n      return new SparseMatrix([]);\n    },\n    \n    'string': function (datatype) {\n      return new SparseMatrix([], datatype);\n    },\n\n    'Array | Matrix': function (data) {\n      return new SparseMatrix(data);\n    },\n    \n    'Array | Matrix, string': function (data, datatype) {\n      return new SparseMatrix(data, datatype);\n    }\n  });\n\n  sparse.toTex = {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  };\n\n  return sparse;\n}\n\nexports.name = 'sparse';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/type/matrix/function/sparse.js\n// module id = 99\n// module chunks = 0","'use strict';\n\nvar clone = require('../../utils/object').clone;\nvar validateIndex = require('../../utils/array').validateIndex;\nvar getSafeProperty = require('../../utils/customs').getSafeProperty;\nvar setSafeProperty = require('../../utils/customs').setSafeProperty;\nvar DimensionError = require('../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n  var matrix = load(require('../../type/matrix/function/matrix'));\n\n  /**\n   * Get or set a subset of a matrix or string.\n   *\n   * Syntax:\n   *     math.subset(value, index)                                // retrieve a subset\n   *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n   *\n   * Examples:\n   *\n   *     // get a subset\n   *     var d = [[1, 2], [3, 4]];\n   *     math.subset(d, math.index(1, 0));        // returns 3\n   *     math.subset(d, math.index([0, 2], 1));   // returns [[2], [4]]\n   *\n   *     // replace a subset\n   *     var e = [];\n   *     var f = math.subset(e, math.index(0, [0, 2]), [5, 6]);  // f = [[5, 6]]\n   *     var g = math.subset(f, math.index(1, 1), 7, 0);         // g = [[5, 6], [0, 7]]\n   *\n   * See also:\n   *\n   *     size, resize, squeeze, index\n   *\n   * @param {Array | Matrix | string} matrix  An array, matrix, or string\n   * @param {Index} index                     An index containing ranges for each\n   *                                          dimension\n   * @param {*} [replacement]                 An array, matrix, or scalar.\n   *                                          If provided, the subset is replaced with replacement.\n   *                                          If not provided, the subset is returned\n   * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n   *                                          the matrix is resized. If not provided,\n   *                                          math.matrix elements will be left undefined.\n   * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.\n   */\n  var subset = typed('subset', {\n    // get subset\n    'Array, Index': function (value, index) {\n      var m = matrix(value);\n      var subset = m.subset(index);       // returns a Matrix\n      return index.isScalar()\n          ? subset\n          : subset.valueOf();  // return an Array (like the input)\n    },\n\n    'Matrix, Index': function (value, index) {\n      return value.subset(index);\n    },\n\n    'Object, Index': _getObjectProperty,\n\n    'string, Index': _getSubstring,\n\n    // set subset\n    'Array, Index, any': function (value, index, replacement) {\n      return matrix(clone(value))\n          .subset(index, replacement, undefined)\n          .valueOf();\n    },\n\n    'Array, Index, any, any': function (value, index, replacement, defaultValue) {\n      return matrix(clone(value))\n          .subset(index, replacement, defaultValue)\n          .valueOf();\n    },\n\n    'Matrix, Index, any': function (value, index, replacement) {\n      return value.clone().subset(index, replacement);\n    },\n\n    'Matrix, Index, any, any': function (value, index, replacement, defaultValue) {\n      return value.clone().subset(index, replacement, defaultValue);\n    },\n\n    'string, Index, string': _setSubstring,\n    'string, Index, string, string': _setSubstring,\n    'Object, Index, any': _setObjectProperty\n  });\n\n  subset.toTex = undefined; // use default template\n\n  return subset;\n\n  /**\n   * Retrieve a subset of a string\n   * @param {string} str            string from which to get a substring\n   * @param {Index} index           An index containing ranges for each dimension\n   * @returns {string} substring\n   * @private\n   */\n  function _getSubstring(str, index) {\n    if (!type.isIndex(index)) {\n      // TODO: better error message\n      throw new TypeError('Index expected');\n    }\n    if (index.size().length != 1) {\n      throw new DimensionError(index.size().length, 1);\n    }\n\n    // validate whether the range is out of range\n    var strLen = str.length;\n    validateIndex(index.min()[0], strLen);\n    validateIndex(index.max()[0], strLen);\n\n    var range = index.dimension(0);\n\n    var substr = '';\n    range.forEach(function (v) {\n      substr += str.charAt(v);\n    });\n\n    return substr;\n  }\n\n  /**\n   * Replace a substring in a string\n   * @param {string} str            string to be replaced\n   * @param {Index} index           An index containing ranges for each dimension\n   * @param {string} replacement    Replacement string\n   * @param {string} [defaultValue] Default value to be uses when resizing\n   *                                the string. is ' ' by default\n   * @returns {string} result\n   * @private\n   */\n  function _setSubstring(str, index, replacement, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      // TODO: better error message\n      throw new TypeError('Index expected');\n    }\n    if (index.size().length != 1) {\n      throw new DimensionError(index.size().length, 1);\n    }\n    if (defaultValue !== undefined) {\n      if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    }\n    else {\n      defaultValue = ' ';\n    }\n\n    var range = index.dimension(0);\n    var len = range.size()[0];\n\n    if (len != replacement.length) {\n      throw new DimensionError(range.size()[0], replacement.length);\n    }\n\n    // validate whether the range is out of range\n    var strLen = str.length;\n    validateIndex(index.min()[0]);\n    validateIndex(index.max()[0]);\n\n    // copy the string into an array with characters\n    var chars = [];\n    for (var i = 0; i < strLen; i++) {\n      chars[i] = str.charAt(i);\n    }\n\n    range.forEach(function (v, i) {\n      chars[v] = replacement.charAt(i[0]);\n    });\n\n    // initialize undefined characters with a space\n    if (chars.length > strLen) {\n      for (i = strLen - 1, len = chars.length; i < len; i++) {\n        if (!chars[i]) {\n          chars[i] = defaultValue;\n        }\n      }\n    }\n\n    return chars.join('');\n  }\n}\n\n/**\n * Retrieve a property from an object\n * @param {Object} object\n * @param {Index} index\n * @return {*} Returns the value of the property\n * @private\n */\nfunction _getObjectProperty (object, index) {\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  }\n\n  return getSafeProperty(object, key);\n}\n\n/**\n * Set a property on an object\n * @param {Object} object\n * @param {Index} index\n * @param {*} replacement\n * @return {*} Returns the updated object\n * @private\n */\nfunction _setObjectProperty (object, index, replacement) {\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  }\n\n  // clone the object, and apply the property to the clone\n  var updated = clone(object);\n  setSafeProperty(updated, key, replacement);\n\n  return updated;\n}\n\nexports.name = 'subset';\nexports.factory = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/mathjs/lib/function/matrix/subset.js\n// module id = 100\n// module chunks = 0","'use strict'\n\nvar Datacube = require('./Datacube')\nvar isNil = require('lodash/isNil')\n\n/**\n * @typedef View\n * @property {HTMLCanvasElement} node\n * @property {Number[][][]} data\n * @property {string} axis\n * @property {Function} [onMouseMove]\n * @property {boolean} [matchCanvasToData=true] sets height and width to the same dims as the data from the axis perspective\n */\n/**\n * @memberOf DatacubeView\n * @property {HTMLCanvasElement} node\n * @property {ClientRect} nodeRect\n * @property {Datacube} datacube\n */\n\n/**\n * @class DatacubeView\n * @param {View} view\n */\nfunction DatacubeView (view) {\n  this.datacube = new Datacube({ data: view.data })\n  this.node = view.node\n  this.axis = view.axis\n  if (view.onMouseMove) this.onMouseMove = view.onMouseMove\n  this.ctx = this.node.getContext('2d')\n  this.node.addEventListener('mousemove', this.mousemove.bind(this))\n  this.position = Object.assign({}, this.datacube.midpoints)\n  if (view.matchCanvasToData || isNil(view.matchCanvasToData)) this.matchCanvasToData()\n  this.render()\n}\n\n/**\n * @private\n */\nDatacubeView.prototype.constrainAxisPosition = function (opts) {\n  var axis = opts.axis\n  var requested = opts.requested\n  if (requested <= 0) return 0\n  else if (requested >= this.datacube.dims[axis]) return this.datacube.dims[axis] - 1\n  return requested\n}\n\n/**\n * Resize datacube canvas node height & width to match data slice dimensions.\n * @returns {undefined}\n */\nDatacubeView.prototype.matchCanvasToData = function () {\n  if (this.axis === 'x') {\n    this.node.height = this.datacube.dims.z\n    this.node.width = this.datacube.dims.y\n  } else if (this.axis === 'y') {\n    this.node.height = this.datacube.dims.z\n    this.node.width = this.datacube.dims.x\n  } else { // z\n    this.node.height = this.datacube.dims.y\n    this.node.width = this.datacube.dims.x\n  }\n}\n\n/**\n * Handles a mousemove event on the canvas node & updates the view's `position`\n * value.\n * @param {Event} evt\n * @returns {undefined}\n */\nDatacubeView.prototype.mousemove = function (evt) {\n  if (this.axis === 'x') {\n    this.position.y = this.constrainAxisPosition({ axis: 'y', requested: evt.offsetX })\n    this.position.z = this.constrainAxisPosition({ axis: 'z', requested: evt.offsetY })\n  } else if (this.axis === 'y') {\n    this.position.x = this.constrainAxisPosition({ axis: 'x', requested: evt.offsetX })\n    this.position.z = this.constrainAxisPosition({ axis: 'z', requested: evt.offsetY })\n  } else { // z\n    this.position.x = this.constrainAxisPosition({ axis: 'x', requested: evt.offsetX })\n    this.position.y = this.constrainAxisPosition({ axis: 'y', requested: evt.offsetY })\n  }\n  console.log(this.position)\n  if (this.onMouseMove) this.onMouseMove(this)\n}\n\n/**\n * Renders the 2D slice of the data onto the canvas based on\n * the view's current `position`.\n * @returns {undefined}\n */\nDatacubeView.prototype.render = function () {\n  var slice = this.datacube.querySlice({\n    axis: this.axis,\n    value: Math.floor(this.position[this.axis])\n  })\n  var width = slice.length\n  var height = slice[0].length\n  var image = this.ctx.createImageData(width, height)\n  var pixelRgbaIndex = -1\n  for (var x = 0; x < slice.length; ++x) {\n    for (var y = 0; y < slice[0].length; ++y) {\n      var pixelValue = slice[x][y]\n      image.data[++pixelRgbaIndex] = 0\n      image.data[++pixelRgbaIndex] = 0\n      image.data[++pixelRgbaIndex] = 0\n      image.data[++pixelRgbaIndex] = pixelValue\n    }\n  }\n  this.ctx.putImageData(image, 0, 0)\n}\n\nmodule.exports = DatacubeView\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/DatacubeView.js\n// module id = 101\n// module chunks = 0","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isNil.js\n// module id = 102\n// module chunks = 0"],"sourceRoot":""}